'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const core = require('@unocss/core');
const presetAttributify = require('@unocss/preset-attributify');
const presetIcons = require('@unocss/preset-icons');
const presetRemToPx = require('@unocss/preset-rem-to-px');
const presetTagify = require('@unocss/preset-tagify');
const presetTypography = require('@unocss/preset-typography');
const presetUno = require('@unocss/preset-uno');
const presetWebFonts = require('@unocss/preset-web-fonts');
const transformerCompileClass = require('@unocss/transformer-compile-class');
const transformerDirectives = require('@unocss/transformer-directives');
const transformerVariantGroup = require('@unocss/transformer-variant-group');
const unocssPresetScrollbar = require('unocss-preset-scrollbar');
const postcss = require('postcss');
const postcssJs = require('postcss-js');
const utils = require('@unocss/preset-mini/utils');

function _interopDefaultCompat (e) { return e && typeof e === 'object' && 'default' in e ? e.default : e; }

const presetAttributify__default = /*#__PURE__*/_interopDefaultCompat(presetAttributify);
const presetIcons__default = /*#__PURE__*/_interopDefaultCompat(presetIcons);
const presetRemToPx__default = /*#__PURE__*/_interopDefaultCompat(presetRemToPx);
const presetTagify__default = /*#__PURE__*/_interopDefaultCompat(presetTagify);
const presetTypography__default = /*#__PURE__*/_interopDefaultCompat(presetTypography);
const presetUno__default = /*#__PURE__*/_interopDefaultCompat(presetUno);
const presetWebFonts__default = /*#__PURE__*/_interopDefaultCompat(presetWebFonts);
const transformerCompileClass__default = /*#__PURE__*/_interopDefaultCompat(transformerCompileClass);
const transformerDirectives__default = /*#__PURE__*/_interopDefaultCompat(transformerDirectives);
const transformerVariantGroup__default = /*#__PURE__*/_interopDefaultCompat(transformerVariantGroup);
const postcss__default = /*#__PURE__*/_interopDefaultCompat(postcss);
const postcssJs__default = /*#__PURE__*/_interopDefaultCompat(postcssJs);

const magicCSS = `/*!
 * Magic - https://www.minimamente.com
 * Licensed under the MIT license - https://opensource.org/licenses/MIT
 * Copyright (c) 2022 Christian Pucci
 */.puffIn{-webkit-animation-name:puffIn;animation-name:puffIn}@-webkit-keyframes puffIn{0%{filter:blur(2px);opacity:0;transform:scale(2);transform-origin:50% 50%}to{filter:blur(0);opacity:1;transform:scale(1);transform-origin:50% 50%}}@keyframes puffIn{0%{filter:blur(2px);opacity:0;transform:scale(2);transform-origin:50% 50%}to{filter:blur(0);opacity:1;transform:scale(1);transform-origin:50% 50%}}.puffOut{-webkit-animation-name:puffOut;animation-name:puffOut}@-webkit-keyframes puffOut{0%{filter:blur(0);opacity:1;transform:scale(1);transform-origin:50% 50%}to{filter:blur(2px);opacity:0;transform:scale(2);transform-origin:50% 50%}}@keyframes puffOut{0%{filter:blur(0);opacity:1;transform:scale(1);transform-origin:50% 50%}to{filter:blur(2px);opacity:0;transform:scale(2);transform-origin:50% 50%}}.vanishIn{-webkit-animation-name:vanishIn;animation-name:vanishIn}@-webkit-keyframes vanishIn{0%{filter:blur(90px);opacity:0;transform:scale(2);transform-origin:50% 50%}to{filter:blur(0);opacity:1;transform:scale(1);transform-origin:50% 50%}}@keyframes vanishIn{0%{filter:blur(90px);opacity:0;transform:scale(2);transform-origin:50% 50%}to{filter:blur(0);opacity:1;transform:scale(1);transform-origin:50% 50%}}.vanishOut{-webkit-animation-name:vanishOut;animation-name:vanishOut}@-webkit-keyframes vanishOut{0%{filter:blur(0);opacity:1;transform:scale(1);transform-origin:50% 50%}to{filter:blur(20px);opacity:0;transform:scale(2);transform-origin:50% 50%}}@keyframes vanishOut{0%{filter:blur(0);opacity:1;transform:scale(1);transform-origin:50% 50%}to{filter:blur(20px);opacity:0;transform:scale(2);transform-origin:50% 50%}}.boingInUp{-webkit-animation-name:boingInUp;animation-name:boingInUp}@-webkit-keyframes boingInUp{0%{opacity:0;transform:perspective(800px) rotateX(-90deg);transform-origin:50% 0}50%{opacity:1;transform:perspective(800px) rotateX(50deg);transform-origin:50% 0}to{opacity:1;transform:perspective(800px) rotateX(0deg);transform-origin:50% 0}}@keyframes boingInUp{0%{opacity:0;transform:perspective(800px) rotateX(-90deg);transform-origin:50% 0}50%{opacity:1;transform:perspective(800px) rotateX(50deg);transform-origin:50% 0}to{opacity:1;transform:perspective(800px) rotateX(0deg);transform-origin:50% 0}}.boingOutDown{-webkit-animation-name:boingOutDown;animation-name:boingOutDown}@-webkit-keyframes boingOutDown{0%{opacity:1;transform:perspective(800px) rotateX(0deg) rotateY(0deg);transform-origin:100% 100%}20%{opacity:1;transform:perspective(800px) rotateX(0deg) rotateY(10deg);transform-origin:100% 100%}30%{opacity:1;transform:perspective(800px) rotateX(0deg) rotateY(0deg);transform-origin:0 100%}40%{opacity:1;transform:perspective(800px) rotateX(10deg) rotateY(10deg);transform-origin:0 100%}to{opacity:0;transform:perspective(800px) rotateX(90deg) rotateY(0deg);transform-origin:100% 100%}}@keyframes boingOutDown{0%{opacity:1;transform:perspective(800px) rotateX(0deg) rotateY(0deg);transform-origin:100% 100%}20%{opacity:1;transform:perspective(800px) rotateX(0deg) rotateY(10deg);transform-origin:100% 100%}30%{opacity:1;transform:perspective(800px) rotateX(0deg) rotateY(0deg);transform-origin:0 100%}40%{opacity:1;transform:perspective(800px) rotateX(10deg) rotateY(10deg);transform-origin:0 100%}to{opacity:0;transform:perspective(800px) rotateX(90deg) rotateY(0deg);transform-origin:100% 100%}}.bombLeftOut{-webkit-animation-name:bombLeftOut;animation-name:bombLeftOut}@-webkit-keyframes bombLeftOut{0%{filter:blur(0);opacity:1;transform:rotate(0deg);transform-origin:50% 50%}50%{filter:blur(0);opacity:1;transform:rotate(-160deg);transform-origin:-100% 50%}to{filter:blur(20px);opacity:0;transform:rotate(-160deg);transform-origin:-100% 50%}}@keyframes bombLeftOut{0%{filter:blur(0);opacity:1;transform:rotate(0deg);transform-origin:50% 50%}50%{filter:blur(0);opacity:1;transform:rotate(-160deg);transform-origin:-100% 50%}to{filter:blur(20px);opacity:0;transform:rotate(-160deg);transform-origin:-100% 50%}}.bombRightOut{-webkit-animation-name:bombRightOut;animation-name:bombRightOut}@-webkit-keyframes bombRightOut{0%{filter:blur(0);opacity:1;transform:rotate(0deg);transform-origin:50% 50%}50%{filter:blur(0);opacity:1;transform:rotate(160deg);transform-origin:200% 50%}to{filter:blur(20px);opacity:0;transform:rotate(160deg);transform-origin:200% 50%}}@keyframes bombRightOut{0%{filter:blur(0);opacity:1;transform:rotate(0deg);transform-origin:50% 50%}50%{filter:blur(0);opacity:1;transform:rotate(160deg);transform-origin:200% 50%}to{filter:blur(20px);opacity:0;transform:rotate(160deg);transform-origin:200% 50%}}.magic{-webkit-animation-name:magic;animation-name:magic}@-webkit-keyframes magic{0%{opacity:1;transform:scale(1) rotate(0deg);transform-origin:100% 200%}to{opacity:0;transform:scale(0) rotate(270deg);transform-origin:200% 500%}}@keyframes magic{0%{opacity:1;transform:scale(1) rotate(0deg);transform-origin:100% 200%}to{opacity:0;transform:scale(0) rotate(270deg);transform-origin:200% 500%}}.swap{-webkit-animation-name:swap;animation-name:swap}@-webkit-keyframes swap{0%{opacity:0;transform:scale(0) translate(-700px);transform-origin:0 100%}to{opacity:1;transform:scale(1) translate(0);transform-origin:100% 100%}}@keyframes swap{0%{opacity:0;transform:scale(0) translate(-700px);transform-origin:0 100%}to{opacity:1;transform:scale(1) translate(0);transform-origin:100% 100%}}.twisterInDown{-webkit-animation-name:twisterInDown;animation-name:twisterInDown}@-webkit-keyframes twisterInDown{0%{opacity:0;transform:scale(0) rotate(1turn) translateY(-100%);transform-origin:0 100%}30%{transform:scale(0) rotate(1turn) translateY(-100%);transform-origin:0 100%}to{opacity:1;transform:scale(1) rotate(0deg) translateY(0);transform-origin:100% 100%}}@keyframes twisterInDown{0%{opacity:0;transform:scale(0) rotate(1turn) translateY(-100%);transform-origin:0 100%}30%{transform:scale(0) rotate(1turn) translateY(-100%);transform-origin:0 100%}to{opacity:1;transform:scale(1) rotate(0deg) translateY(0);transform-origin:100% 100%}}.twisterInUp{-webkit-animation-name:twisterInUp;animation-name:twisterInUp}@-webkit-keyframes twisterInUp{0%{opacity:0;transform:scale(0) rotate(1turn) translateY(100%);transform-origin:100% 0}30%{transform:scale(0) rotate(1turn) translateY(100%);transform-origin:100% 0}to{opacity:1;transform:scale(1) rotate(0deg) translateY(0);transform-origin:0 0}}@keyframes twisterInUp{0%{opacity:0;transform:scale(0) rotate(1turn) translateY(100%);transform-origin:100% 0}30%{transform:scale(0) rotate(1turn) translateY(100%);transform-origin:100% 0}to{opacity:1;transform:scale(1) rotate(0deg) translateY(0);transform-origin:0 0}}.foolishIn{-webkit-animation-name:foolishIn;animation-name:foolishIn}@-webkit-keyframes foolishIn{0%{opacity:0;transform:scale(0) rotate(1turn);transform-origin:50% 50%}20%{opacity:1;transform:scale(.5) rotate(0deg);transform-origin:0 100%}40%{opacity:1;transform:scale(.5) rotate(0deg);transform-origin:100% 100%}60%{opacity:1;transform:scale(.5) rotate(0deg);transform-origin:0}80%{opacity:1;transform:scale(.5) rotate(0deg);transform-origin:0 0}to{opacity:1;transform:scale(1) rotate(0deg);transform-origin:50% 50%}}@keyframes foolishIn{0%{opacity:0;transform:scale(0) rotate(1turn);transform-origin:50% 50%}20%{opacity:1;transform:scale(.5) rotate(0deg);transform-origin:0 100%}40%{opacity:1;transform:scale(.5) rotate(0deg);transform-origin:100% 100%}60%{opacity:1;transform:scale(.5) rotate(0deg);transform-origin:0}80%{opacity:1;transform:scale(.5) rotate(0deg);transform-origin:0 0}to{opacity:1;transform:scale(1) rotate(0deg);transform-origin:50% 50%}}.foolishOut{-webkit-animation-name:foolishOut;animation-name:foolishOut}@-webkit-keyframes foolishOut{0%{opacity:1;transform:scale(1) rotate(1turn);transform-origin:50% 50%}20%{opacity:1;transform:scale(.5) rotate(0deg);transform-origin:0 0}40%{opacity:1;transform:scale(.5) rotate(0deg);transform-origin:100% 0}60%{opacity:1;transform:scale(.5) rotate(0deg);transform-origin:0}80%{opacity:1;transform:scale(.5) rotate(0deg);transform-origin:0 100%}to{opacity:0;transform:scale(0) rotate(0deg);transform-origin:50% 50%}}@keyframes foolishOut{0%{opacity:1;transform:scale(1) rotate(1turn);transform-origin:50% 50%}20%{opacity:1;transform:scale(.5) rotate(0deg);transform-origin:0 0}40%{opacity:1;transform:scale(.5) rotate(0deg);transform-origin:100% 0}60%{opacity:1;transform:scale(.5) rotate(0deg);transform-origin:0}80%{opacity:1;transform:scale(.5) rotate(0deg);transform-origin:0 100%}to{opacity:0;transform:scale(0) rotate(0deg);transform-origin:50% 50%}}.holeOut{-webkit-animation-name:holeOut;animation-name:holeOut}@-webkit-keyframes holeOut{0%{opacity:1;transform:scale(1) rotateY(0deg);transform-origin:50% 50%}to{opacity:0;transform:scale(0) rotateY(180deg);transform-origin:50% 50%}}@keyframes holeOut{0%{opacity:1;transform:scale(1) rotateY(0deg);transform-origin:50% 50%}to{opacity:0;transform:scale(0) rotateY(180deg);transform-origin:50% 50%}}.swashIn{-webkit-animation-name:swashIn;animation-name:swashIn}@-webkit-keyframes swashIn{0%{opacity:0;transform:scale(0);transform-origin:50% 50%}90%{opacity:1;transform:scale(.9);transform-origin:50% 50%}to{opacity:1;transform:scale(1);transform-origin:50% 50%}}@keyframes swashIn{0%{opacity:0;transform:scale(0);transform-origin:50% 50%}90%{opacity:1;transform:scale(.9);transform-origin:50% 50%}to{opacity:1;transform:scale(1);transform-origin:50% 50%}}.swashOut{-webkit-animation-name:swashOut;animation-name:swashOut}@-webkit-keyframes swashOut{0%{opacity:1;transform:scale(1);transform-origin:50% 50%}80%{opacity:1;transform:scale(.9);transform-origin:50% 50%}to{opacity:0;transform:scale(0);transform-origin:50% 50%}}@keyframes swashOut{0%{opacity:1;transform:scale(1);transform-origin:50% 50%}80%{opacity:1;transform:scale(.9);transform-origin:50% 50%}to{opacity:0;transform:scale(0);transform-origin:50% 50%}}.spaceInDown{-webkit-animation-name:spaceInDown;animation-name:spaceInDown}@-webkit-keyframes spaceInDown{0%{opacity:0;transform:scale(.2) translateY(200%);transform-origin:50% 100%}to{opacity:1;transform:scale(1) translate(0);transform-origin:50% 100%}}@keyframes spaceInDown{0%{opacity:0;transform:scale(.2) translateY(200%);transform-origin:50% 100%}to{opacity:1;transform:scale(1) translate(0);transform-origin:50% 100%}}.spaceInLeft{-webkit-animation-name:spaceInLeft;animation-name:spaceInLeft}@-webkit-keyframes spaceInLeft{0%{opacity:0;transform:scale(.2) translate(-200%);transform-origin:0 50%}to{opacity:1;transform:scale(1) translate(0);transform-origin:0 50%}}@keyframes spaceInLeft{0%{opacity:0;transform:scale(.2) translate(-200%);transform-origin:0 50%}to{opacity:1;transform:scale(1) translate(0);transform-origin:0 50%}}.spaceInRight{-webkit-animation-name:spaceInRight;animation-name:spaceInRight}@-webkit-keyframes spaceInRight{0%{opacity:0;transform:scale(.2) translate(200%);transform-origin:100% 50%}to{opacity:1;transform:scale(1) translate(0);transform-origin:100% 50%}}@keyframes spaceInRight{0%{opacity:0;transform:scale(.2) translate(200%);transform-origin:100% 50%}to{opacity:1;transform:scale(1) translate(0);transform-origin:100% 50%}}.spaceInUp{-webkit-animation-name:spaceInUp;animation-name:spaceInUp}@-webkit-keyframes spaceInUp{0%{opacity:0;transform:scale(.2) translateY(-200%);transform-origin:50% 0}to{opacity:1;transform:scale(1) translate(0);transform-origin:50% 0}}@keyframes spaceInUp{0%{opacity:0;transform:scale(.2) translateY(-200%);transform-origin:50% 0}to{opacity:1;transform:scale(1) translate(0);transform-origin:50% 0}}.spaceOutDown{-webkit-animation-name:spaceOutDown;animation-name:spaceOutDown}@-webkit-keyframes spaceOutDown{0%{opacity:1;transform:scale(1) translate(0);transform-origin:50% 100%}to{opacity:0;transform:scale(.2) translateY(200%);transform-origin:50% 100%}}@keyframes spaceOutDown{0%{opacity:1;transform:scale(1) translate(0);transform-origin:50% 100%}to{opacity:0;transform:scale(.2) translateY(200%);transform-origin:50% 100%}}.spaceOutLeft{-webkit-animation-name:spaceOutLeft;animation-name:spaceOutLeft}@-webkit-keyframes spaceOutLeft{0%{opacity:1;transform:scale(1) translate(0);transform-origin:0 50%}to{opacity:0;transform:scale(.2) translate(-200%);transform-origin:0 50%}}@keyframes spaceOutLeft{0%{opacity:1;transform:scale(1) translate(0);transform-origin:0 50%}to{opacity:0;transform:scale(.2) translate(-200%);transform-origin:0 50%}}.spaceOutRight{-webkit-animation-name:spaceOutRight;animation-name:spaceOutRight}@-webkit-keyframes spaceOutRight{0%{opacity:1;transform:scale(1) translate(0);transform-origin:100% 50%}to{opacity:0;transform:scale(.2) translate(200%);transform-origin:100% 50%}}@keyframes spaceOutRight{0%{opacity:1;transform:scale(1) translate(0);transform-origin:100% 50%}to{opacity:0;transform:scale(.2) translate(200%);transform-origin:100% 50%}}.spaceOutUp{-webkit-animation-name:spaceOutUp;animation-name:spaceOutUp}@-webkit-keyframes spaceOutUp{0%{opacity:1;transform:scale(1) translate(0);transform-origin:50% 0}to{opacity:0;transform:scale(.2) translateY(-200%);transform-origin:50% 0}}@keyframes spaceOutUp{0%{opacity:1;transform:scale(1) translate(0);transform-origin:50% 0}to{opacity:0;transform:scale(.2) translateY(-200%);transform-origin:50% 0}}.perspectiveDown{-webkit-animation-name:perspectiveDown;animation-name:perspectiveDown}@-webkit-keyframes perspectiveDown{0%{transform:perspective(800px) rotateX(0deg);transform-origin:0 100%}to{transform:perspective(800px) rotateX(-180deg);transform-origin:0 100%}}@keyframes perspectiveDown{0%{transform:perspective(800px) rotateX(0deg);transform-origin:0 100%}to{transform:perspective(800px) rotateX(-180deg);transform-origin:0 100%}}.perspectiveDownReturn{-webkit-animation-name:perspectiveDownReturn;animation-name:perspectiveDownReturn}@-webkit-keyframes perspectiveDownReturn{0%{transform:perspective(800px) rotateX(-180deg);transform-origin:0 100%}to{transform:perspective(800px) rotateX(0deg);transform-origin:0 100%}}@keyframes perspectiveDownReturn{0%{transform:perspective(800px) rotateX(-180deg);transform-origin:0 100%}to{transform:perspective(800px) rotateX(0deg);transform-origin:0 100%}}.perspectiveLeft{-webkit-animation-name:perspectiveLeft;animation-name:perspectiveLeft}@-webkit-keyframes perspectiveLeft{0%{transform:perspective(800px) rotateY(0deg);transform-origin:0 0}to{transform:perspective(800px) rotateY(-180deg);transform-origin:0 0}}@keyframes perspectiveLeft{0%{transform:perspective(800px) rotateY(0deg);transform-origin:0 0}to{transform:perspective(800px) rotateY(-180deg);transform-origin:0 0}}.perspectiveLeftReturn{-webkit-animation-name:perspectiveLeftReturn;animation-name:perspectiveLeftReturn}@-webkit-keyframes perspectiveLeftReturn{0%{transform:perspective(800px) rotateY(-180deg);transform-origin:0 0}to{transform:perspective(800px) rotateY(0deg);transform-origin:0 0}}@keyframes perspectiveLeftReturn{0%{transform:perspective(800px) rotateY(-180deg);transform-origin:0 0}to{transform:perspective(800px) rotateY(0deg);transform-origin:0 0}}.perspectiveRight{-webkit-animation-name:perspectiveRight;animation-name:perspectiveRight}@-webkit-keyframes perspectiveRight{0%{transform:perspective(800px) rotateY(0deg);transform-origin:100% 0}to{transform:perspective(800px) rotateY(180deg);transform-origin:100% 0}}@keyframes perspectiveRight{0%{transform:perspective(800px) rotateY(0deg);transform-origin:100% 0}to{transform:perspective(800px) rotateY(180deg);transform-origin:100% 0}}.perspectiveRightReturn{-webkit-animation-name:perspectiveRightReturn;animation-name:perspectiveRightReturn}@-webkit-keyframes perspectiveRightReturn{0%{transform:perspective(800px) rotateY(180deg);transform-origin:100% 0}to{transform:perspective(800px) rotateY(0deg);transform-origin:100% 0}}@keyframes perspectiveRightReturn{0%{transform:perspective(800px) rotateY(180deg);transform-origin:100% 0}to{transform:perspective(800px) rotateY(0deg);transform-origin:100% 0}}.perspectiveUp{-webkit-animation-name:perspectiveUp;animation-name:perspectiveUp}@-webkit-keyframes perspectiveUp{0%{transform:perspective(800px) rotateX(0deg);transform-origin:0 0}to{transform:perspective(800px) rotateX(180deg);transform-origin:0 0}}@keyframes perspectiveUp{0%{transform:perspective(800px) rotateX(0deg);transform-origin:0 0}to{transform:perspective(800px) rotateX(180deg);transform-origin:0 0}}.perspectiveUpReturn{-webkit-animation-name:perspectiveUpReturn;animation-name:perspectiveUpReturn}@-webkit-keyframes perspectiveUpReturn{0%{transform:perspective(800px) rotateX(180deg);transform-origin:0 0}to{transform:perspective(800px) rotateX(0deg);transform-origin:0 0}}@keyframes perspectiveUpReturn{0%{transform:perspective(800px) rotateX(180deg);transform-origin:0 0}to{transform:perspective(800px) rotateX(0deg);transform-origin:0 0}}.rotateDown{-webkit-animation-name:rotateDown;animation-name:rotateDown}@-webkit-keyframes rotateDown{0%{opacity:1;transform:perspective(800px) rotateX(0deg) translateZ(0);transform-origin:0 0}to{opacity:0;transform:perspective(800px) rotateX(-180deg) translateZ(300px);transform-origin:50% 100%}}@keyframes rotateDown{0%{opacity:1;transform:perspective(800px) rotateX(0deg) translateZ(0);transform-origin:0 0}to{opacity:0;transform:perspective(800px) rotateX(-180deg) translateZ(300px);transform-origin:50% 100%}}.rotateLeft{-webkit-animation-name:rotateLeft;animation-name:rotateLeft}@-webkit-keyframes rotateLeft{0%{opacity:1;transform:perspective(800px) rotateY(0deg) translateZ(0);transform-origin:0 0}to{opacity:0;transform:perspective(800px) rotateY(-180deg) translateZ(300px);transform-origin:50% 0}}@keyframes rotateLeft{0%{opacity:1;transform:perspective(800px) rotateY(0deg) translateZ(0);transform-origin:0 0}to{opacity:0;transform:perspective(800px) rotateY(-180deg) translateZ(300px);transform-origin:50% 0}}.rotateRight{-webkit-animation-name:rotateRight;animation-name:rotateRight}@-webkit-keyframes rotateRight{0%{opacity:1;transform:perspective(800px) rotateY(0deg) translate3d(0);transform-origin:0 0}to{opacity:0;transform:perspective(800px) rotateY(180deg) translateZ(150px);transform-origin:50% 0}}@keyframes rotateRight{0%{opacity:1;transform:perspective(800px) rotateY(0deg) translate3d(0);transform-origin:0 0}to{opacity:0;transform:perspective(800px) rotateY(180deg) translateZ(150px);transform-origin:50% 0}}.rotateUp{-webkit-animation-name:rotateUp;animation-name:rotateUp}@-webkit-keyframes rotateUp{0%{opacity:1;transform:perspective(800px) rotateX(0deg) translateZ(0);transform-origin:0 0}to{opacity:0;transform:perspective(800px) rotateX(180deg) translateZ(100px);transform-origin:50% 0}}@keyframes rotateUp{0%{opacity:1;transform:perspective(800px) rotateX(0deg) translateZ(0);transform-origin:0 0}to{opacity:0;transform:perspective(800px) rotateX(180deg) translateZ(100px);transform-origin:50% 0}}.slideDown{-webkit-animation-name:slideDown;animation-name:slideDown}@-webkit-keyframes slideDown{0%{transform:translateY(0);transform-origin:0 0}to{transform:translateY(100%);transform-origin:0 0}}@keyframes slideDown{0%{transform:translateY(0);transform-origin:0 0}to{transform:translateY(100%);transform-origin:0 0}}.slideDownReturn{-webkit-animation-name:slideDownReturn;animation-name:slideDownReturn}@-webkit-keyframes slideDownReturn{0%{transform:translateY(100%);transform-origin:0 0}to{transform:translateY(0);transform-origin:0 0}}@keyframes slideDownReturn{0%{transform:translateY(100%);transform-origin:0 0}to{transform:translateY(0);transform-origin:0 0}}.slideLeft{-webkit-animation-name:slideLeft;animation-name:slideLeft}@-webkit-keyframes slideLeft{0%{transform:translateX(0);transform-origin:0 0}to{transform:translateX(-100%);transform-origin:0 0}}@keyframes slideLeft{0%{transform:translateX(0);transform-origin:0 0}to{transform:translateX(-100%);transform-origin:0 0}}.slideLeftReturn{-webkit-animation-name:slideLeftReturn;animation-name:slideLeftReturn}@-webkit-keyframes slideLeftReturn{0%{transform:translateX(-100%);transform-origin:0 0}to{transform:translateX(0);transform-origin:0 0}}@keyframes slideLeftReturn{0%{transform:translateX(-100%);transform-origin:0 0}to{transform:translateX(0);transform-origin:0 0}}.slideRight{-webkit-animation-name:slideRight;animation-name:slideRight}@-webkit-keyframes slideRight{0%{transform:translateX(0);transform-origin:0 0}to{transform:translateX(100%);transform-origin:0 0}}@keyframes slideRight{0%{transform:translateX(0);transform-origin:0 0}to{transform:translateX(100%);transform-origin:0 0}}.slideRightReturn{-webkit-animation-name:slideRightReturn;animation-name:slideRightReturn}@-webkit-keyframes slideRightReturn{0%{transform:translateX(100%);transform-origin:0 0}to{transform:translateX(0);transform-origin:0 0}}@keyframes slideRightReturn{0%{transform:translateX(100%);transform-origin:0 0}to{transform:translateX(0);transform-origin:0 0}}.slideUp{-webkit-animation-name:slideUp;animation-name:slideUp}@-webkit-keyframes slideUp{0%{transform:translateY(0);transform-origin:0 0}to{transform:translateY(-100%);transform-origin:0 0}}@keyframes slideUp{0%{transform:translateY(0);transform-origin:0 0}to{transform:translateY(-100%);transform-origin:0 0}}.slideUpReturn{-webkit-animation-name:slideUpReturn;animation-name:slideUpReturn}@-webkit-keyframes slideUpReturn{0%{transform:translateY(-100%);transform-origin:0 0}to{transform:translateY(0);transform-origin:0 0}}@keyframes slideUpReturn{0%{transform:translateY(-100%);transform-origin:0 0}to{transform:translateY(0);transform-origin:0 0}}.openDownLeft{-webkit-animation-name:openDownLeft;animation-name:openDownLeft}@-webkit-keyframes openDownLeft{0%{-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out;transform:rotate(0deg);transform-origin:bottom left}to{-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;transform:rotate(-110deg);transform-origin:bottom left}}@keyframes openDownLeft{0%{-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out;transform:rotate(0deg);transform-origin:bottom left}to{-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;transform:rotate(-110deg);transform-origin:bottom left}}.openDownLeftReturn{-webkit-animation-name:openDownLeftReturn;animation-name:openDownLeftReturn}@-webkit-keyframes openDownLeftReturn{0%{-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;transform:rotate(-110deg);transform-origin:bottom left}to{-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out;transform:rotate(0deg);transform-origin:bottom left}}@keyframes openDownLeftReturn{0%{-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;transform:rotate(-110deg);transform-origin:bottom left}to{-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out;transform:rotate(0deg);transform-origin:bottom left}}.openDownRight{-webkit-animation-name:openDownRight;animation-name:openDownRight}@-webkit-keyframes openDownRight{0%{-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out;transform:rotate(0deg);transform-origin:bottom right}to{-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;transform:rotate(110deg);transform-origin:bottom right}}@keyframes openDownRight{0%{-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out;transform:rotate(0deg);transform-origin:bottom right}to{-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;transform:rotate(110deg);transform-origin:bottom right}}.openDownRightReturn{-webkit-animation-name:openDownRightReturn;animation-name:openDownRightReturn}@-webkit-keyframes openDownRightReturn{0%{-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;transform:rotate(110deg);transform-origin:bottom right}to{-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out;transform:rotate(0deg);transform-origin:bottom right}}@keyframes openDownRightReturn{0%{-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;transform:rotate(110deg);transform-origin:bottom right}to{-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out;transform:rotate(0deg);transform-origin:bottom right}}.openUpLeft{-webkit-animation-name:openUpLeft;animation-name:openUpLeft}@-webkit-keyframes openUpLeft{0%{-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out;transform:rotate(0deg);transform-origin:top left}to{-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;transform:rotate(110deg);transform-origin:top left}}@keyframes openUpLeft{0%{-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out;transform:rotate(0deg);transform-origin:top left}to{-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;transform:rotate(110deg);transform-origin:top left}}.openUpLeftReturn{-webkit-animation-name:openUpLeftReturn;animation-name:openUpLeftReturn}@-webkit-keyframes openUpLeftReturn{0%{-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;transform:rotate(110deg);transform-origin:top left}to{-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out;transform:rotate(0deg);transform-origin:top left}}@keyframes openUpLeftReturn{0%{-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;transform:rotate(110deg);transform-origin:top left}to{-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out;transform:rotate(0deg);transform-origin:top left}}.openUpRight{-webkit-animation-name:openUpRight;animation-name:openUpRight}@-webkit-keyframes openUpRight{0%{-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out;transform:rotate(0deg);transform-origin:top right}to{-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;transform:rotate(-110deg);transform-origin:top right}}@keyframes openUpRight{0%{-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out;transform:rotate(0deg);transform-origin:top right}to{-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;transform:rotate(-110deg);transform-origin:top right}}.openUpRightReturn{-webkit-animation-name:openUpRightReturn;animation-name:openUpRightReturn}@-webkit-keyframes openUpRightReturn{0%{-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;transform:rotate(-110deg);transform-origin:top right}to{-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out;transform:rotate(0deg);transform-origin:top right}}@keyframes openUpRightReturn{0%{-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;transform:rotate(-110deg);transform-origin:top right}to{-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out;transform:rotate(0deg);transform-origin:top right}}.openDownLeftOut{-webkit-animation-name:openDownLeftOut;animation-name:openDownLeftOut}@-webkit-keyframes openDownLeftOut{0%{-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out;opacity:1;transform:rotate(0deg);transform-origin:bottom left}to{-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;opacity:0;transform:rotate(-110deg);transform-origin:bottom left}}@keyframes openDownLeftOut{0%{-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out;opacity:1;transform:rotate(0deg);transform-origin:bottom left}to{-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;opacity:0;transform:rotate(-110deg);transform-origin:bottom left}}.openDownRightOut{-webkit-animation-name:openDownRightOut;animation-name:openDownRightOut}@-webkit-keyframes openDownRightOut{0%{-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out;opacity:1;transform:rotate(0deg);transform-origin:bottom right}to{-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;opacity:0;transform:rotate(110deg);transform-origin:bottom right}}@keyframes openDownRightOut{0%{-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out;opacity:1;transform:rotate(0deg);transform-origin:bottom right}to{-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;opacity:0;transform:rotate(110deg);transform-origin:bottom right}}.openUpLeftOut{-webkit-animation-name:openUpLeftOut;animation-name:openUpLeftOut}@-webkit-keyframes openUpLeftOut{0%{-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out;opacity:1;transform:rotate(0deg);transform-origin:top left}to{-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;opacity:0;transform:rotate(110deg);transform-origin:top left}}@keyframes openUpLeftOut{0%{-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out;opacity:1;transform:rotate(0deg);transform-origin:top left}to{-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;opacity:0;transform:rotate(110deg);transform-origin:top left}}.openUpRightOut{-webkit-animation-name:openUpRightOut;animation-name:openUpRightOut}@-webkit-keyframes openUpRightOut{0%{-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out;opacity:1;transform:rotate(0deg);transform-origin:top right}to{-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;opacity:0;transform:rotate(-110deg);transform-origin:top right}}@keyframes openUpRightOut{0%{-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out;opacity:1;transform:rotate(0deg);transform-origin:top right}to{-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;opacity:0;transform:rotate(-110deg);transform-origin:top right}}.tinDownIn{-webkit-animation-name:tinDownIn;animation-name:tinDownIn}@-webkit-keyframes tinDownIn{0%{opacity:0;transform:scale(1) translateY(900%)}50%,70%,90%{opacity:1;transform:scale(1.1) translateY(0)}60%,80%,to{opacity:1;transform:scale(1) translateY(0)}}@keyframes tinDownIn{0%{opacity:0;transform:scale(1) translateY(900%)}50%,70%,90%{opacity:1;transform:scale(1.1) translateY(0)}60%,80%,to{opacity:1;transform:scale(1) translateY(0)}}.tinDownOut{-webkit-animation-name:tinDownOut;animation-name:tinDownOut}@-webkit-keyframes tinDownOut{0%,20%,40%,50%{opacity:1;transform:scale(1) translateY(0)}10%,30%{opacity:1;transform:scale(1.1) translateY(0)}to{opacity:0;transform:scale(1) translateY(900%)}}@keyframes tinDownOut{0%,20%,40%,50%{opacity:1;transform:scale(1) translateY(0)}10%,30%{opacity:1;transform:scale(1.1) translateY(0)}to{opacity:0;transform:scale(1) translateY(900%)}}.tinLeftIn{-webkit-animation-name:tinLeftIn;animation-name:tinLeftIn}@-webkit-keyframes tinLeftIn{0%{opacity:0;transform:scale(1) translateX(-900%)}50%,70%,90%{opacity:1;transform:scale(1.1) translateX(0)}60%,80%,to{opacity:1;transform:scale(1) translateX(0)}}@keyframes tinLeftIn{0%{opacity:0;transform:scale(1) translateX(-900%)}50%,70%,90%{opacity:1;transform:scale(1.1) translateX(0)}60%,80%,to{opacity:1;transform:scale(1) translateX(0)}}.tinLeftOut{-webkit-animation-name:tinLeftOut;animation-name:tinLeftOut}@-webkit-keyframes tinLeftOut{0%,20%,40%,50%{opacity:1;transform:scale(1) translateX(0)}10%,30%{opacity:1;transform:scale(1.1) translateX(0)}to{opacity:0;transform:scale(1) translateX(-900%)}}@keyframes tinLeftOut{0%,20%,40%,50%{opacity:1;transform:scale(1) translateX(0)}10%,30%{opacity:1;transform:scale(1.1) translateX(0)}to{opacity:0;transform:scale(1) translateX(-900%)}}.tinRightIn{-webkit-animation-name:tinRightIn;animation-name:tinRightIn}@-webkit-keyframes tinRightIn{0%{opacity:0;transform:scale(1) translateX(900%)}50%,70%,90%{opacity:1;transform:scale(1.1) translateX(0)}60%,80%,to{opacity:1;transform:scale(1) translateX(0)}}@keyframes tinRightIn{0%{opacity:0;transform:scale(1) translateX(900%)}50%,70%,90%{opacity:1;transform:scale(1.1) translateX(0)}60%,80%,to{opacity:1;transform:scale(1) translateX(0)}}.tinRightOut{-webkit-animation-name:tinRightOut;animation-name:tinRightOut}@-webkit-keyframes tinRightOut{0%,20%,40%,50%{opacity:1;transform:scale(1) translateX(0)}10%,30%{opacity:1;transform:scale(1.1) translateX(0)}to{opacity:0;transform:scale(1) translateX(900%)}}@keyframes tinRightOut{0%,20%,40%,50%{opacity:1;transform:scale(1) translateX(0)}10%,30%{opacity:1;transform:scale(1.1) translateX(0)}to{opacity:0;transform:scale(1) translateX(900%)}}.tinUpIn{-webkit-animation-name:tinUpIn;animation-name:tinUpIn}@-webkit-keyframes tinUpIn{0%{opacity:0;transform:scale(1) translateY(-900%)}50%,70%,90%{opacity:1;transform:scale(1.1) translateY(0)}60%,80%,to{opacity:1;transform:scale(1) translateY(0)}}@keyframes tinUpIn{0%{opacity:0;transform:scale(1) translateY(-900%)}50%,70%,90%{opacity:1;transform:scale(1.1) translateY(0)}60%,80%,to{opacity:1;transform:scale(1) translateY(0)}}.tinUpOut{-webkit-animation-name:tinUpOut;animation-name:tinUpOut}@-webkit-keyframes tinUpOut{0%,20%,40%,50%{opacity:1;transform:scale(1) translateY(0)}10%,30%{opacity:1;transform:scale(1.1) translateY(0)}to{opacity:0;transform:scale(1) translateY(-900%)}}@keyframes tinUpOut{0%,20%,40%,50%{opacity:1;transform:scale(1) translateY(0)}10%,30%{opacity:1;transform:scale(1.1) translateY(0)}to{opacity:0;transform:scale(1) translateY(-900%)}}.magictime{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both}@media (prefers-reduced-motion),(print){.magictime{-webkit-animation:unset!important;animation:unset!important;transition:none!important}}
/*# sourceMappingURL=magic.min.css.map */`;

const animationRegExp = /^([a-z-]+)\s+([0-9.]+m?s?|[*+])?\s?([a-z-]+(?:\([^)]+\))?|[*+])?\s*([a-z0-9-]+|[*+])?$/i;
function resolveAnimation(extend_animation) {
  const animation = {};
  const keys = ["durations", "timingFns", "counts"];
  const shortcuts = [];
  for (const k in extend_animation) {
    const v = extend_animation[k];
    const match = v.match(animationRegExp);
    if (match != null) {
      const [, name, duration, timing, count] = match;
      const values = [duration, timing, count];
      if (name !== k)
        shortcuts.push([`animate-${k}`, `animate-${name}`]);
      for (let i = 0; i < keys.length; i++) {
        const key = keys[i];
        const value = values[i];
        if (value != null) {
          if (value === "*") {
            continue;
          }
          if (animation[key]) {
            animation[key][name] = values[i] === "+" ? "" : values[i];
          } else {
            animation[key] = {
              [name]: values[i] === "+" ? "" : values[i]
            };
          }
        }
      }
    }
  }
  return {
    animation,
    shortcuts
  };
}
function deepMerge(original, patch) {
  const o = original;
  const p = patch;
  if (Array.isArray(o) && Array.isArray(p))
    return [...o, ...p];
  if (Array.isArray(o))
    return [...o];
  const output = { ...o };
  if (isObject(o) && isObject(p)) {
    Object.keys(p).forEach((key) => {
      if (isObject(p[key])) {
        if (!(key in o))
          Object.assign(output, { [key]: p[key] });
        else
          output[key] = deepMerge(o[key], p[key]);
      } else {
        Object.assign(output, { [key]: p[key] });
      }
    });
  }
  return output;
}
function isObject(val) {
  return val !== null && typeof val === "object";
}
function getKeyframes(css) {
  const root = postcss__default.parse(css);
  const obj = postcssJs.objectify(root);
  return Object.keys(obj).reduce((acc, key) => {
    if (key.startsWith("@keyframes"))
      acc[key] = obj[key];
    return acc;
  }, {});
}
function cssObj2StrSync(style) {
  return Object.keys(style).reduce((str, key) => {
    return `${str}${key}${stringifyObj(style[key])}`;
  }, "").replace(/\n/g, "");
}
function stringifyObj(obj) {
  return `{${Object.keys(obj).reduce((str, key) => {
    return `${str}${camelToHyphen(key)}:${obj[key]};`;
  }, "")}}`;
}
async function cssObj2StrAsync(style) {
  return postcss__default().process(style, { parser: postcssJs__default }).then((result) => result.css);
}
function toArray(val) {
  return Array.isArray(val) ? val : [val];
}
function camelToHyphen(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();
}

function magicAnimate() {
  const keyframesObj = getKeyframes(magicCSS);
  function generate(val) {
    return Object.keys(keyframesObj).reduce((acc, key) => {
      const name = key.replace("@keyframes ", "");
      acc[name] = val ?? `{${cssObj2StrSync(keyframesObj[key])}}`;
      return acc;
    }, {});
  }
  return {
    keyframes: generate(),
    durations: generate("1s"),
    properties: generate({ "animation-fill-mode": "both" })
  };
}

const keyframes = magicAnimate()?.keyframes ?? {};
const autocomplete = {
  shorthands: {
    magic: `(${Object.keys(keyframes).join("|")})`
  },
  templates: [
    "animate-<magic>"
  ]
};

const extractors = [
  {
    name: "unocss-preset-useful-extractor-includes-base64",
    order: 0,
    extract({ code }) {
      return [...new Set(code.split(/[\\:]?[\s'"`{}]|;(?!base64)+/g))];
    }
  }
];

const rgbaRE = /rgba\(((?:\d+,?){3}),([^)]*)\)/;
function postprocessWithUnColor(unColor) {
  return (util) => {
    util.entries.forEach((i) => {
      const value = i[1];
      if (typeof value === "string") {
        const match = value.match(rgbaRE);
        if (match != null) {
          i[1] = value.replace(rgbaRE, `rgba(var(${unColor}),$2)`);
          util.entries.unshift([unColor, match[1]]);
        }
      }
    });
  };
}
function importantProcess() {
  return (util) => {
    util.entries.forEach((i) => {
      if (i[1] != null && !String(i[1]).includes("!important"))
        i[1] += " !important";
    });
  };
}

const PRESET_NAME = "useful";
const layerMeta = {
  layer: PRESET_NAME
};

const resetCSS = `
/*
Please read: https://github.com/unocss/unocss/blob/main/packages/reset/tailwind-compat.md
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
2. [UnoCSS]: allow to override the default border color with css var \`--un -default -border - color\`
*/

*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: var(--un-default-border-color, #e5e7eb); /* 2 */
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured \`sans\` font-family by default.
5. Use the user's configured \`sans\` font-feature-settings by default.
6. Use the user's configured \`sans\` font-variation-settings by default.
7. Disable tap highlights on iOS.
*/

html,
:host {
  line-height: 1.5; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
  -moz-tab-size: 4; /* 3 */
  tab-size: 4; /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 4 */
  font-feature-settings: normal; /* 5 */
  font-variation-settings: normal; /* 6 */
  -webkit-tap-highlight-color: transparent; /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from \`html\` so users can set them as a class directly on the \`html\` element.
*/

body {
  margin: 0; /* 1 */
  line-height: inherit; /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0; /* 1 */
  color: inherit; /* 2 */
  border-top-width: 1px; /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured \`mono\` font-family by default.
2. Use the user's configured \`mono\` font-feature-settings by default.
3. Use the user's configured \`mono\` font-variation-settings by default.
4. Correct the odd \`em\` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; /* 1 */
  font-feature-settings: normal; /* 2 */
  font-variation-settings: normal; /* 3 */
  font-size: 1em; /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent \`sub\` and \`sup\` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0; /* 1 */
  border-color: inherit; /* 2 */
  border-collapse: collapse; /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-feature-settings: inherit; /* 1 */
  font-variation-settings: inherit; /* 1 */
  font-size: 100%; /* 1 */
  font-weight: inherit; /* 1 */
  line-height: inherit; /* 1 */
  color: inherit; /* 1 */
  margin: 0; /* 2 */
  padding: 0; /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button; /* 1 */
  /* Will affect the button style of most component libraries, so disable it */
  /* https://github.com/unocss/unocss/issues/2127 */
  /* background-color: transparent; !* 2 *! */
  background-image: none; /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional \`: invalid\` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to \`inherit\` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::placeholder,
textarea::placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements \`display: block\` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add \`vertical - align: middle\` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/*
Make elements with the HTML hidden attribute stay hidden by default.
*/

[hidden] {
  display: none;
}
`.trim();
function compressCSS(css) {
  return css.replace(/\s+/g, " ").replace(/\/\*[\s\S]*?\*\//g, "");
}
const resetPreflight = {
  getCSS: () => compressCSS(resetCSS),
  layer: layerMeta.layer
};

function preflights(options) {
  if (typeof options.preflights === "boolean") {
    return options.preflights ? [
      resetPreflight
    ].filter(Boolean) : [];
  }
  return [
    options.enableResetStyles || options.preflights.reset ? resetPreflight : void 0
  ].filter(Boolean);
}

const rules = [
  [/^(.+)::(.+)$/, ([, n, v], { theme }) => {
    const color = utils.parseColor(v, theme);
    if (color?.cssColor?.type === "rgb" && color.cssColor.components) {
      return {
        [`--${n}`]: `${color.cssColor.components.join(",")}`
      };
    }
    return {
      [`--${n}`]: v
    };
  }]
];
normalizeRuleMeta(layerMeta);
function normalizeRuleMeta(ruleMeta) {
  for (const r of rules)
    r[2] = Object.assign(r[2] || {}, ruleMeta);
}

const _shortcuts = [
  // position
  ["pr", "relative"],
  ["pa", "absolute"],
  ["pf", "fixed"],
  ["ps", "sticky"],
  // position layout
  [["pxc", "p-x-c"], "pa left-1/2 -translate-x-1/2"],
  [["pyc", "p-y-c"], "pa top-1/2 -translate-y-1/2"],
  [["pcc", "pc", "p-c", "p-c-c"], "pxc pyc"],
  // flex layout
  [["f-c", "fcc"], "flex justify-center items-center"],
  [["f-c-c", "fccc"], "f-c flex-col"],
  [["fc", "fxc", "f-x-c"], "flex justify-center"],
  [["fi", "fyc", "f-y-c"], "flex items-center"],
  ["fs", "flex justify-start"],
  ["fsc", "flex justify-start items-center"],
  ["fse", "flex justify-start items-end"],
  ["fe", "flex justify-end"],
  ["fec", "flex justify-end items-center"],
  ["fb", "flex justify-between"],
  ["fbc", "flex justify-between items-center"],
  ["fa", "flex justify-around"],
  ["fac", "flex justify-around items-center"],
  ["fw", "flex justify-wrap"],
  ["fwr", "flex justify-wrap-reverse"],
  // transition
  ["trans", "transition-all-350 ease-linear"]
];
const shortcuts = normalizeShortcut(_shortcuts);
normalizeShortcutMeta(layerMeta);
function normalizeShortcutMeta(ruleMeta) {
  for (const r of shortcuts)
    r[2] = Object.assign(r[2] || {}, ruleMeta);
}
function normalizeShortcut(shortcut) {
  return shortcut.flatMap((s) => {
    if (Array.isArray(s[0]))
      return s[0].map((i) => [i, s[1], s[2]]);
    return [s];
  });
}

const MagicAnimation = magicAnimate();
function nomarlizeTheme(theme, enableMagicAnimations) {
  return {
    ...theme,
    animation: deepMerge(
      enableMagicAnimations ? MagicAnimation : {},
      theme.animation ?? {}
    )
  };
}

const v_active = {
  name: "@active",
  match(matcher) {
    if (!matcher.startsWith("@active"))
      return matcher;
    return {
      matcher: matcher.slice(8),
      selector: (s) => `${s}.active`
    };
  }
};

function variants(_options) {
  return [
    v_active
  ];
}

const defaultOptions = {
  theme: {},
  important: false,
  enableDefaultShortcuts: true,
  enableMagicAnimations: false,
  /**
   * @deprecated Use `preflights.reset` instead
   */
  enableResetStyles: true,
  preflights: {
    reset: true
  },
  // presets
  uno: true,
  attributify: true,
  icons: true,
  webFonts: false,
  typography: false,
  tagify: false,
  remToPx: false,
  scrollbar: false,
  // transformers
  directives: true,
  variantGroup: true,
  compileClass: false
};
const defaultPresetOptions = {
  webFonts: {
    provider: "fontsource"
  }
};
function resolveOptions(options) {
  const optionsWithDefault = Object.assign({}, defaultOptions, options);
  optionsWithDefault.unColor = typeof optionsWithDefault.unColor === "string" ? optionsWithDefault.unColor : optionsWithDefault.unColor ? "--un-color" : false;
  const presets = [];
  const transformers = [];
  const presetMap = {
    uno: presetUno__default,
    attributify: presetAttributify__default,
    icons: presetIcons__default,
    webFonts: presetWebFonts__default,
    typography: presetTypography__default,
    tagify: presetTagify__default,
    remToPx: presetRemToPx__default,
    scrollbar: unocssPresetScrollbar.presetScrollbar
  };
  const transformerMap = {
    directives: transformerDirectives__default,
    variantGroup: transformerVariantGroup__default,
    compileClass: transformerCompileClass__default
  };
  for (const [key, preset] of Object.entries(presetMap)) {
    const option = optionsWithDefault[key];
    if (option) {
      const p = preset;
      const presetOptions = defaultPresetOptions[key];
      if (typeof option === "object")
        presets.push(p({ ...presetOptions, ...option }));
      else
        presets.push(p(presetOptions ?? {}));
    }
  }
  for (const [key, transformer] of Object.entries(transformerMap)) {
    const option = optionsWithDefault[key];
    if (option) {
      const t = transformer;
      transformers.push(t(typeof option === "boolean" ? {} : option));
    }
  }
  const { theme: t_theme, shortcuts } = resolveExtend(optionsWithDefault.theme.extend ?? {});
  const _theme = deepMerge(optionsWithDefault.theme, t_theme);
  return {
    ...optionsWithDefault,
    theme: nomarlizeTheme(_theme, optionsWithDefault.enableMagicAnimations),
    meta: {
      presets,
      shortcuts,
      transformers
    }
  };
}
function resolveExtend(extend) {
  const _shortcuts = [];
  const { animation, keyframes } = extend;
  const { animation: resolvedAnimation, shortcuts } = resolveAnimation(animation ?? {});
  _shortcuts.push(...shortcuts);
  resolvedAnimation.keyframes = {};
  for (const key in keyframes)
    resolvedAnimation.keyframes[key] = `{${cssObj2StrSync(keyframes[key])}}`;
  return {
    theme: { animation: resolvedAnimation },
    shortcuts: _shortcuts
  };
}

const presetUseful = core.definePreset((options = {}) => {
  const resolvedOptions = resolveOptions(options);
  const { enableDefaultShortcuts, unColor, theme, meta, important } = resolvedOptions;
  return {
    name: `unocss-preset-${PRESET_NAME}`,
    layers: {
      [PRESET_NAME]: 2
    },
    rules,
    theme,
    variants: variants(),
    shortcuts: [...enableDefaultShortcuts ? shortcuts : [], ...meta.shortcuts],
    extractors,
    postprocess: [
      unColor ? postprocessWithUnColor(unColor) : void 0,
      important ? importantProcess() : void 0
    ].filter(Boolean),
    presets: meta.presets,
    transformers: meta.transformers,
    autocomplete,
    preflights: preflights(resolvedOptions),
    options: resolvedOptions
  };
});

exports.animationRegExp = animationRegExp;
exports.camelToHyphen = camelToHyphen;
exports.cssObj2StrAsync = cssObj2StrAsync;
exports.cssObj2StrSync = cssObj2StrSync;
exports.deepMerge = deepMerge;
exports.default = presetUseful;
exports.getKeyframes = getKeyframes;
exports.isObject = isObject;
exports.presetUseful = presetUseful;
exports.resolveAnimation = resolveAnimation;
exports.stringifyObj = stringifyObj;
exports.toArray = toArray;
