import * as _eslint_react_types from '@eslint-react/types';
import * as _typescript_eslint_utils_ts_eslint from '@typescript-eslint/utils/ts-eslint';

declare const _default: {
    readonly meta: {
        readonly name: string;
        readonly version: string;
    };
    readonly configs: {
        readonly core: {
            readonly plugins: {
                readonly "@eslint-react": {
                    meta: {
                        name: string;
                        version: string;
                    };
                    rules: {
                        "avoid-shorthand-boolean": _typescript_eslint_utils_ts_eslint.RuleModule<"avoidShorthandBoolean", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "avoid-shorthand-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"avoidShorthandFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "ensure-forward-ref-using-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"ensureForwardRefUsingRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "jsx-no-duplicate-props": _typescript_eslint_utils_ts_eslint.RuleModule<"jsxNoDuplicateProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "jsx-uses-vars": _typescript_eslint_utils_ts_eslint.RuleModule<"jsxUsesVars", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-access-state-in-setstate": _typescript_eslint_utils_ts_eslint.RuleModule<"noAccessStateInSetstate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-array-index-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noArrayIndexKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-count": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenCount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-for-each": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenForEach", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-map": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenMap", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-only": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenOnly", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-prop": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenProp", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-to-array": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenToArray", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-class-component": _typescript_eslint_utils_ts_eslint.RuleModule<"noClassComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-clone-element": _typescript_eslint_utils_ts_eslint.RuleModule<"noCloneElement", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-comment-textnodes": _typescript_eslint_utils_ts_eslint.RuleModule<"noCommentTextnodes", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-complex-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noComplexConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-component-will-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-component-will-receive-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillReceiveProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-create-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"noCreateRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-default-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noDefaultProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-direct-mutation-state": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectMutationState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-duplicate-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noDuplicateKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-implicit-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noImplicitKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-missing-component-display-name": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingComponentDisplayName", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-missing-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingKey" | "noMissingKeyWithFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-nested-components": _typescript_eslint_utils_ts_eslint.RuleModule<"nestedComponent" | "nestedComponentInProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-prop-types": _typescript_eslint_utils_ts_eslint.RuleModule<"noPropTypes", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-redundant-should-component-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantShouldComponentUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-set-state-in-component-did-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentDidMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-set-state-in-component-did-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentDidUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-set-state-in-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-string-refs": _typescript_eslint_utils_ts_eslint.RuleModule<"noStringRefs", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unsafe-component-will-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unsafe-component-will-receive-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillReceiveProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unsafe-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unstable-context-value": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnstableContextValue" | "noUnstableContextValueWithFunction" | "noUnstableContextValueWithIdentifier", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unstable-default-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnstableDefaultProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unused-class-component-members": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnusedClassComponentMembers", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unused-state": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnusedState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-useless-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"noUselessFragment" | "noUselessFragmentInBuiltIn", [{
                            allowExpressions: boolean;
                        }], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-destructuring-assignment": _typescript_eslint_utils_ts_eslint.RuleModule<"preferDestructuringAssignment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-react-namespace-import": _typescript_eslint_utils_ts_eslint.RuleModule<"preferReactNamespaceImport", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-read-only-props": _typescript_eslint_utils_ts_eslint.RuleModule<"preferReadOnlyProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-shorthand-boolean": _typescript_eslint_utils_ts_eslint.RuleModule<"preferShorthandBoolean", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-shorthand-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"preferShorthandFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-complicated-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noComplexConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                    DEFAULT_ESLINT_REACT_SETTINGS: {
                        readonly additionalHooks: {
                            readonly useLayoutEffect: ["useIsomorphicLayoutEffect"];
                        };
                        readonly polymorphicPropName: "as";
                        readonly skipImportCheck: false;
                        readonly version: "detect";
                    };
                };
                readonly "@eslint-react/debug": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "class-component": _typescript_eslint_utils_ts_eslint.RuleModule<"classComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "function-component": _typescript_eslint_utils_ts_eslint.RuleModule<"functionComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly hook: _typescript_eslint_utils_ts_eslint.RuleModule<"hook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "is-from-react": _typescript_eslint_utils_ts_eslint.RuleModule<"isFromReact", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "react-hooks": _typescript_eslint_utils_ts_eslint.RuleModule<"hook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                };
                readonly "@eslint-react/dom": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "no-children-in-void-dom-elements": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenInVoidDomElements", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-dangerously-set-innerhtml": _typescript_eslint_utils_ts_eslint.RuleModule<"noDangerouslySetInnerhtml", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-dangerously-set-innerhtml-with-children": _typescript_eslint_utils_ts_eslint.RuleModule<"noDangerouslySetInnerhtmlWithChildren", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-find-dom-node": _typescript_eslint_utils_ts_eslint.RuleModule<"noFindDomNode", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-missing-button-type": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingButtonType", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-missing-iframe-sandbox": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingIframeSandbox", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-namespace": _typescript_eslint_utils_ts_eslint.RuleModule<"noNamespace", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-render-return-value": _typescript_eslint_utils_ts_eslint.RuleModule<"noRenderReturnValue", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-script-url": _typescript_eslint_utils_ts_eslint.RuleModule<"noScriptUrl", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unknown-property": _typescript_eslint_utils_ts_eslint.RuleModule<string, [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unsafe-iframe-sandbox": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeIframeSandbox", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unsafe-target-blank": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeTargetBlank", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                    readonly DEFAULT_ESLINT_REACT_SETTINGS: {
                        readonly additionalComponents: [{
                            readonly name: "Link";
                            readonly as: "a";
                            readonly attributes: [{
                                readonly name: "to";
                                readonly as: "href";
                            }];
                        }];
                        readonly skipImportCheck: false;
                    };
                };
                readonly "@eslint-react/hooks-extra": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "no-direct-set-state-in-use-effect": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectSetStateInUseEffect", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-direct-set-state-in-use-layout-effect": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectSetStateInUseLayoutEffect", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-redundant-custom-hook": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantCustomHook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unnecessary-use-callback": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseCallback", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unnecessary-use-memo": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseMemo", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "prefer-use-state-lazy-initialization": _typescript_eslint_utils_ts_eslint.RuleModule<"preferUseStateLazyInitialization", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "ensure-custom-hooks-using-other-hooks": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantCustomHook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "ensure-use-memo-has-non-empty-deps": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseMemo", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                };
                readonly "@eslint-react/naming-convention": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "component-name": _typescript_eslint_utils_ts_eslint.RuleModule<"componentName", readonly [{
                            allowAllCaps?: boolean;
                            allowLeadingUnderscore?: boolean;
                            allowNamespace?: boolean;
                            excepts?: readonly string[];
                            rule?: "CONSTANT_CASE" | "PascalCase";
                        } | ("CONSTANT_CASE" | "PascalCase") | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly filename: _typescript_eslint_utils_ts_eslint.RuleModule<"filenameCaseMismatchSuggestion" | "filenameEmpty", readonly [{
                            excepts?: readonly string[];
                            extensions?: readonly string[];
                            rule?: "PascalCase" | "camelCase" | "kebab-case" | "snake_case";
                        } | ("PascalCase" | "camelCase" | "kebab-case" | "snake_case") | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "filename-extension": _typescript_eslint_utils_ts_eslint.RuleModule<"filenameExtensionInvalid" | "filenameExtensionUnexpected", readonly [{
                            allow?: "always" | "as-needed";
                            extensions?: readonly string[];
                        } | ("always" | "as-needed") | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "use-state": _typescript_eslint_utils_ts_eslint.RuleModule<"useState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                };
                readonly "@eslint-react/web-api": {
                    meta: {
                        name: string;
                        version: string;
                    };
                    rules: {
                        "no-leaked-event-listener": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedEventListenerInEffect" | "noLeakedEventListenerInLifecycle" | "noLeakedEventListenerOfInlineFunction", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-interval": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedIntervalInEffect" | "noLeakedIntervalInLifecycle" | "noLeakedIntervalNoIntervalId", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-resize-observer": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedResizeObserver" | "noLeakedResizeObserverInControlFlow" | "noLeakedResizeObserverNoFloatingInstance", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-timeout": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedTimeoutInEffect" | "noLeakedTimeoutInLifecycle" | "noLeakedTimeoutNoTimeoutId", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                    DEFAULT_ESLINT_REACT_SETTINGS: {
                        readonly skipImportCheck: true;
                    };
                };
            };
            readonly rules: {
                readonly "@eslint-react/ensure-forward-ref-using-ref": "warn";
                readonly "@eslint-react/jsx-no-duplicate-props": "warn";
                readonly "@eslint-react/jsx-uses-vars": "warn";
                readonly "@eslint-react/no-access-state-in-setstate": "error";
                readonly "@eslint-react/no-array-index-key": "warn";
                readonly "@eslint-react/no-children-count": "warn";
                readonly "@eslint-react/no-children-for-each": "warn";
                readonly "@eslint-react/no-children-map": "warn";
                readonly "@eslint-react/no-children-only": "warn";
                readonly "@eslint-react/no-children-to-array": "warn";
                readonly "@eslint-react/no-clone-element": "warn";
                readonly "@eslint-react/no-comment-textnodes": "warn";
                readonly "@eslint-react/no-component-will-mount": "error";
                readonly "@eslint-react/no-component-will-receive-props": "error";
                readonly "@eslint-react/no-component-will-update": "error";
                readonly "@eslint-react/no-create-ref": "error";
                readonly "@eslint-react/no-default-props": "error";
                readonly "@eslint-react/no-direct-mutation-state": "error";
                readonly "@eslint-react/no-duplicate-key": "error";
                readonly "@eslint-react/no-missing-key": "error";
                readonly "@eslint-react/no-nested-components": "error";
                readonly "@eslint-react/no-prop-types": "error";
                readonly "@eslint-react/no-redundant-should-component-update": "error";
                readonly "@eslint-react/no-set-state-in-component-did-mount": "warn";
                readonly "@eslint-react/no-set-state-in-component-did-update": "warn";
                readonly "@eslint-react/no-set-state-in-component-will-update": "warn";
                readonly "@eslint-react/no-string-refs": "error";
                readonly "@eslint-react/no-unsafe-component-will-mount": "warn";
                readonly "@eslint-react/no-unsafe-component-will-receive-props": "warn";
                readonly "@eslint-react/no-unsafe-component-will-update": "warn";
                readonly "@eslint-react/no-unstable-context-value": "warn";
                readonly "@eslint-react/no-unstable-default-props": "warn";
                readonly "@eslint-react/no-unused-class-component-members": "warn";
                readonly "@eslint-react/no-unused-state": "warn";
            };
            readonly settings: {
                readonly "react-x": {
                    readonly additionalHooks: {
                        readonly useLayoutEffect: ["useIsomorphicLayoutEffect"];
                    };
                    readonly polymorphicPropName: "as";
                    readonly skipImportCheck: false;
                    readonly version: "detect";
                };
            };
        };
        readonly "core-legacy": {
            readonly plugins: readonly ["@eslint-react"];
            readonly rules: {
                readonly "@eslint-react/ensure-forward-ref-using-ref": "warn";
                readonly "@eslint-react/jsx-no-duplicate-props": "warn";
                readonly "@eslint-react/jsx-uses-vars": "warn";
                readonly "@eslint-react/no-access-state-in-setstate": "error";
                readonly "@eslint-react/no-array-index-key": "warn";
                readonly "@eslint-react/no-children-count": "warn";
                readonly "@eslint-react/no-children-for-each": "warn";
                readonly "@eslint-react/no-children-map": "warn";
                readonly "@eslint-react/no-children-only": "warn";
                readonly "@eslint-react/no-children-to-array": "warn";
                readonly "@eslint-react/no-clone-element": "warn";
                readonly "@eslint-react/no-comment-textnodes": "warn";
                readonly "@eslint-react/no-component-will-mount": "error";
                readonly "@eslint-react/no-component-will-receive-props": "error";
                readonly "@eslint-react/no-component-will-update": "error";
                readonly "@eslint-react/no-create-ref": "error";
                readonly "@eslint-react/no-default-props": "error";
                readonly "@eslint-react/no-direct-mutation-state": "error";
                readonly "@eslint-react/no-duplicate-key": "error";
                readonly "@eslint-react/no-missing-key": "error";
                readonly "@eslint-react/no-nested-components": "error";
                readonly "@eslint-react/no-prop-types": "error";
                readonly "@eslint-react/no-redundant-should-component-update": "error";
                readonly "@eslint-react/no-set-state-in-component-did-mount": "warn";
                readonly "@eslint-react/no-set-state-in-component-did-update": "warn";
                readonly "@eslint-react/no-set-state-in-component-will-update": "warn";
                readonly "@eslint-react/no-string-refs": "error";
                readonly "@eslint-react/no-unsafe-component-will-mount": "warn";
                readonly "@eslint-react/no-unsafe-component-will-receive-props": "warn";
                readonly "@eslint-react/no-unsafe-component-will-update": "warn";
                readonly "@eslint-react/no-unstable-context-value": "warn";
                readonly "@eslint-react/no-unstable-default-props": "warn";
                readonly "@eslint-react/no-unused-class-component-members": "warn";
                readonly "@eslint-react/no-unused-state": "warn";
            };
            readonly settings: {
                readonly "react-x": {
                    readonly additionalHooks: {
                        readonly useLayoutEffect: ["useIsomorphicLayoutEffect"];
                    };
                    readonly polymorphicPropName: "as";
                    readonly skipImportCheck: false;
                    readonly version: "detect";
                };
            };
        };
        readonly debug: {
            readonly plugins: {
                readonly "@eslint-react": {
                    meta: {
                        name: string;
                        version: string;
                    };
                    rules: {
                        "avoid-shorthand-boolean": _typescript_eslint_utils_ts_eslint.RuleModule<"avoidShorthandBoolean", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "avoid-shorthand-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"avoidShorthandFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "ensure-forward-ref-using-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"ensureForwardRefUsingRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "jsx-no-duplicate-props": _typescript_eslint_utils_ts_eslint.RuleModule<"jsxNoDuplicateProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "jsx-uses-vars": _typescript_eslint_utils_ts_eslint.RuleModule<"jsxUsesVars", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-access-state-in-setstate": _typescript_eslint_utils_ts_eslint.RuleModule<"noAccessStateInSetstate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-array-index-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noArrayIndexKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-count": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenCount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-for-each": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenForEach", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-map": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenMap", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-only": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenOnly", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-prop": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenProp", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-to-array": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenToArray", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-class-component": _typescript_eslint_utils_ts_eslint.RuleModule<"noClassComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-clone-element": _typescript_eslint_utils_ts_eslint.RuleModule<"noCloneElement", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-comment-textnodes": _typescript_eslint_utils_ts_eslint.RuleModule<"noCommentTextnodes", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-complex-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noComplexConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-component-will-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-component-will-receive-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillReceiveProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-create-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"noCreateRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-default-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noDefaultProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-direct-mutation-state": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectMutationState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-duplicate-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noDuplicateKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-implicit-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noImplicitKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-missing-component-display-name": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingComponentDisplayName", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-missing-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingKey" | "noMissingKeyWithFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-nested-components": _typescript_eslint_utils_ts_eslint.RuleModule<"nestedComponent" | "nestedComponentInProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-prop-types": _typescript_eslint_utils_ts_eslint.RuleModule<"noPropTypes", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-redundant-should-component-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantShouldComponentUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-set-state-in-component-did-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentDidMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-set-state-in-component-did-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentDidUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-set-state-in-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-string-refs": _typescript_eslint_utils_ts_eslint.RuleModule<"noStringRefs", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unsafe-component-will-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unsafe-component-will-receive-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillReceiveProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unsafe-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unstable-context-value": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnstableContextValue" | "noUnstableContextValueWithFunction" | "noUnstableContextValueWithIdentifier", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unstable-default-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnstableDefaultProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unused-class-component-members": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnusedClassComponentMembers", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unused-state": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnusedState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-useless-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"noUselessFragment" | "noUselessFragmentInBuiltIn", [{
                            allowExpressions: boolean;
                        }], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-destructuring-assignment": _typescript_eslint_utils_ts_eslint.RuleModule<"preferDestructuringAssignment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-react-namespace-import": _typescript_eslint_utils_ts_eslint.RuleModule<"preferReactNamespaceImport", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-read-only-props": _typescript_eslint_utils_ts_eslint.RuleModule<"preferReadOnlyProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-shorthand-boolean": _typescript_eslint_utils_ts_eslint.RuleModule<"preferShorthandBoolean", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-shorthand-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"preferShorthandFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-complicated-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noComplexConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                    DEFAULT_ESLINT_REACT_SETTINGS: {
                        readonly additionalHooks: {
                            readonly useLayoutEffect: ["useIsomorphicLayoutEffect"];
                        };
                        readonly polymorphicPropName: "as";
                        readonly skipImportCheck: false;
                        readonly version: "detect";
                    };
                };
                readonly "@eslint-react/debug": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "class-component": _typescript_eslint_utils_ts_eslint.RuleModule<"classComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "function-component": _typescript_eslint_utils_ts_eslint.RuleModule<"functionComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly hook: _typescript_eslint_utils_ts_eslint.RuleModule<"hook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "is-from-react": _typescript_eslint_utils_ts_eslint.RuleModule<"isFromReact", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "react-hooks": _typescript_eslint_utils_ts_eslint.RuleModule<"hook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                };
                readonly "@eslint-react/dom": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "no-children-in-void-dom-elements": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenInVoidDomElements", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-dangerously-set-innerhtml": _typescript_eslint_utils_ts_eslint.RuleModule<"noDangerouslySetInnerhtml", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-dangerously-set-innerhtml-with-children": _typescript_eslint_utils_ts_eslint.RuleModule<"noDangerouslySetInnerhtmlWithChildren", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-find-dom-node": _typescript_eslint_utils_ts_eslint.RuleModule<"noFindDomNode", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-missing-button-type": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingButtonType", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-missing-iframe-sandbox": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingIframeSandbox", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-namespace": _typescript_eslint_utils_ts_eslint.RuleModule<"noNamespace", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-render-return-value": _typescript_eslint_utils_ts_eslint.RuleModule<"noRenderReturnValue", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-script-url": _typescript_eslint_utils_ts_eslint.RuleModule<"noScriptUrl", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unknown-property": _typescript_eslint_utils_ts_eslint.RuleModule<string, [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unsafe-iframe-sandbox": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeIframeSandbox", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unsafe-target-blank": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeTargetBlank", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                    readonly DEFAULT_ESLINT_REACT_SETTINGS: {
                        readonly additionalComponents: [{
                            readonly name: "Link";
                            readonly as: "a";
                            readonly attributes: [{
                                readonly name: "to";
                                readonly as: "href";
                            }];
                        }];
                        readonly skipImportCheck: false;
                    };
                };
                readonly "@eslint-react/hooks-extra": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "no-direct-set-state-in-use-effect": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectSetStateInUseEffect", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-direct-set-state-in-use-layout-effect": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectSetStateInUseLayoutEffect", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-redundant-custom-hook": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantCustomHook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unnecessary-use-callback": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseCallback", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unnecessary-use-memo": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseMemo", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "prefer-use-state-lazy-initialization": _typescript_eslint_utils_ts_eslint.RuleModule<"preferUseStateLazyInitialization", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "ensure-custom-hooks-using-other-hooks": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantCustomHook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "ensure-use-memo-has-non-empty-deps": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseMemo", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                };
                readonly "@eslint-react/naming-convention": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "component-name": _typescript_eslint_utils_ts_eslint.RuleModule<"componentName", readonly [{
                            allowAllCaps?: boolean;
                            allowLeadingUnderscore?: boolean;
                            allowNamespace?: boolean;
                            excepts?: readonly string[];
                            rule?: "CONSTANT_CASE" | "PascalCase";
                        } | ("CONSTANT_CASE" | "PascalCase") | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly filename: _typescript_eslint_utils_ts_eslint.RuleModule<"filenameCaseMismatchSuggestion" | "filenameEmpty", readonly [{
                            excepts?: readonly string[];
                            extensions?: readonly string[];
                            rule?: "PascalCase" | "camelCase" | "kebab-case" | "snake_case";
                        } | ("PascalCase" | "camelCase" | "kebab-case" | "snake_case") | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "filename-extension": _typescript_eslint_utils_ts_eslint.RuleModule<"filenameExtensionInvalid" | "filenameExtensionUnexpected", readonly [{
                            allow?: "always" | "as-needed";
                            extensions?: readonly string[];
                        } | ("always" | "as-needed") | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "use-state": _typescript_eslint_utils_ts_eslint.RuleModule<"useState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                };
                readonly "@eslint-react/web-api": {
                    meta: {
                        name: string;
                        version: string;
                    };
                    rules: {
                        "no-leaked-event-listener": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedEventListenerInEffect" | "noLeakedEventListenerInLifecycle" | "noLeakedEventListenerOfInlineFunction", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-interval": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedIntervalInEffect" | "noLeakedIntervalInLifecycle" | "noLeakedIntervalNoIntervalId", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-resize-observer": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedResizeObserver" | "noLeakedResizeObserverInControlFlow" | "noLeakedResizeObserverNoFloatingInstance", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-timeout": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedTimeoutInEffect" | "noLeakedTimeoutInLifecycle" | "noLeakedTimeoutNoTimeoutId", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                    DEFAULT_ESLINT_REACT_SETTINGS: {
                        readonly skipImportCheck: true;
                    };
                };
            };
            readonly rules: {
                readonly "@eslint-react/debug/class-component": "warn";
                readonly "@eslint-react/debug/function-component": "warn";
                readonly "@eslint-react/debug/hook": "warn";
            };
            readonly settings: {
                readonly "react-x": {
                    readonly additionalHooks: {
                        readonly useLayoutEffect: ["useIsomorphicLayoutEffect"];
                    };
                    readonly polymorphicPropName: "as";
                    readonly skipImportCheck: false;
                    readonly version: "detect";
                };
            };
        };
        readonly "debug-legacy": {
            readonly plugins: readonly ["@eslint-react"];
            readonly rules: {
                readonly "@eslint-react/debug/class-component": "warn";
                readonly "@eslint-react/debug/function-component": "warn";
                readonly "@eslint-react/debug/hook": "warn";
            };
            readonly settings: {
                readonly "react-x": {
                    readonly additionalHooks: {
                        readonly useLayoutEffect: ["useIsomorphicLayoutEffect"];
                    };
                    readonly polymorphicPropName: "as";
                    readonly skipImportCheck: false;
                    readonly version: "detect";
                };
            };
        };
        readonly dom: {
            readonly plugins: {
                readonly "@eslint-react": {
                    meta: {
                        name: string;
                        version: string;
                    };
                    rules: {
                        "avoid-shorthand-boolean": _typescript_eslint_utils_ts_eslint.RuleModule<"avoidShorthandBoolean", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "avoid-shorthand-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"avoidShorthandFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "ensure-forward-ref-using-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"ensureForwardRefUsingRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "jsx-no-duplicate-props": _typescript_eslint_utils_ts_eslint.RuleModule<"jsxNoDuplicateProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "jsx-uses-vars": _typescript_eslint_utils_ts_eslint.RuleModule<"jsxUsesVars", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-access-state-in-setstate": _typescript_eslint_utils_ts_eslint.RuleModule<"noAccessStateInSetstate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-array-index-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noArrayIndexKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-count": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenCount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-for-each": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenForEach", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-map": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenMap", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-only": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenOnly", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-prop": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenProp", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-to-array": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenToArray", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-class-component": _typescript_eslint_utils_ts_eslint.RuleModule<"noClassComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-clone-element": _typescript_eslint_utils_ts_eslint.RuleModule<"noCloneElement", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-comment-textnodes": _typescript_eslint_utils_ts_eslint.RuleModule<"noCommentTextnodes", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-complex-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noComplexConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-component-will-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-component-will-receive-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillReceiveProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-create-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"noCreateRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-default-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noDefaultProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-direct-mutation-state": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectMutationState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-duplicate-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noDuplicateKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-implicit-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noImplicitKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-missing-component-display-name": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingComponentDisplayName", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-missing-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingKey" | "noMissingKeyWithFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-nested-components": _typescript_eslint_utils_ts_eslint.RuleModule<"nestedComponent" | "nestedComponentInProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-prop-types": _typescript_eslint_utils_ts_eslint.RuleModule<"noPropTypes", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-redundant-should-component-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantShouldComponentUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-set-state-in-component-did-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentDidMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-set-state-in-component-did-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentDidUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-set-state-in-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-string-refs": _typescript_eslint_utils_ts_eslint.RuleModule<"noStringRefs", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unsafe-component-will-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unsafe-component-will-receive-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillReceiveProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unsafe-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unstable-context-value": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnstableContextValue" | "noUnstableContextValueWithFunction" | "noUnstableContextValueWithIdentifier", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unstable-default-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnstableDefaultProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unused-class-component-members": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnusedClassComponentMembers", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unused-state": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnusedState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-useless-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"noUselessFragment" | "noUselessFragmentInBuiltIn", [{
                            allowExpressions: boolean;
                        }], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-destructuring-assignment": _typescript_eslint_utils_ts_eslint.RuleModule<"preferDestructuringAssignment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-react-namespace-import": _typescript_eslint_utils_ts_eslint.RuleModule<"preferReactNamespaceImport", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-read-only-props": _typescript_eslint_utils_ts_eslint.RuleModule<"preferReadOnlyProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-shorthand-boolean": _typescript_eslint_utils_ts_eslint.RuleModule<"preferShorthandBoolean", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-shorthand-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"preferShorthandFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-complicated-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noComplexConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                    DEFAULT_ESLINT_REACT_SETTINGS: {
                        readonly additionalHooks: {
                            readonly useLayoutEffect: ["useIsomorphicLayoutEffect"];
                        };
                        readonly polymorphicPropName: "as";
                        readonly skipImportCheck: false;
                        readonly version: "detect";
                    };
                };
                readonly "@eslint-react/debug": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "class-component": _typescript_eslint_utils_ts_eslint.RuleModule<"classComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "function-component": _typescript_eslint_utils_ts_eslint.RuleModule<"functionComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly hook: _typescript_eslint_utils_ts_eslint.RuleModule<"hook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "is-from-react": _typescript_eslint_utils_ts_eslint.RuleModule<"isFromReact", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "react-hooks": _typescript_eslint_utils_ts_eslint.RuleModule<"hook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                };
                readonly "@eslint-react/dom": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "no-children-in-void-dom-elements": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenInVoidDomElements", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-dangerously-set-innerhtml": _typescript_eslint_utils_ts_eslint.RuleModule<"noDangerouslySetInnerhtml", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-dangerously-set-innerhtml-with-children": _typescript_eslint_utils_ts_eslint.RuleModule<"noDangerouslySetInnerhtmlWithChildren", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-find-dom-node": _typescript_eslint_utils_ts_eslint.RuleModule<"noFindDomNode", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-missing-button-type": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingButtonType", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-missing-iframe-sandbox": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingIframeSandbox", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-namespace": _typescript_eslint_utils_ts_eslint.RuleModule<"noNamespace", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-render-return-value": _typescript_eslint_utils_ts_eslint.RuleModule<"noRenderReturnValue", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-script-url": _typescript_eslint_utils_ts_eslint.RuleModule<"noScriptUrl", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unknown-property": _typescript_eslint_utils_ts_eslint.RuleModule<string, [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unsafe-iframe-sandbox": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeIframeSandbox", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unsafe-target-blank": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeTargetBlank", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                    readonly DEFAULT_ESLINT_REACT_SETTINGS: {
                        readonly additionalComponents: [{
                            readonly name: "Link";
                            readonly as: "a";
                            readonly attributes: [{
                                readonly name: "to";
                                readonly as: "href";
                            }];
                        }];
                        readonly skipImportCheck: false;
                    };
                };
                readonly "@eslint-react/hooks-extra": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "no-direct-set-state-in-use-effect": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectSetStateInUseEffect", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-direct-set-state-in-use-layout-effect": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectSetStateInUseLayoutEffect", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-redundant-custom-hook": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantCustomHook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unnecessary-use-callback": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseCallback", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unnecessary-use-memo": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseMemo", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "prefer-use-state-lazy-initialization": _typescript_eslint_utils_ts_eslint.RuleModule<"preferUseStateLazyInitialization", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "ensure-custom-hooks-using-other-hooks": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantCustomHook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "ensure-use-memo-has-non-empty-deps": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseMemo", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                };
                readonly "@eslint-react/naming-convention": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "component-name": _typescript_eslint_utils_ts_eslint.RuleModule<"componentName", readonly [{
                            allowAllCaps?: boolean;
                            allowLeadingUnderscore?: boolean;
                            allowNamespace?: boolean;
                            excepts?: readonly string[];
                            rule?: "CONSTANT_CASE" | "PascalCase";
                        } | ("CONSTANT_CASE" | "PascalCase") | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly filename: _typescript_eslint_utils_ts_eslint.RuleModule<"filenameCaseMismatchSuggestion" | "filenameEmpty", readonly [{
                            excepts?: readonly string[];
                            extensions?: readonly string[];
                            rule?: "PascalCase" | "camelCase" | "kebab-case" | "snake_case";
                        } | ("PascalCase" | "camelCase" | "kebab-case" | "snake_case") | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "filename-extension": _typescript_eslint_utils_ts_eslint.RuleModule<"filenameExtensionInvalid" | "filenameExtensionUnexpected", readonly [{
                            allow?: "always" | "as-needed";
                            extensions?: readonly string[];
                        } | ("always" | "as-needed") | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "use-state": _typescript_eslint_utils_ts_eslint.RuleModule<"useState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                };
                readonly "@eslint-react/web-api": {
                    meta: {
                        name: string;
                        version: string;
                    };
                    rules: {
                        "no-leaked-event-listener": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedEventListenerInEffect" | "noLeakedEventListenerInLifecycle" | "noLeakedEventListenerOfInlineFunction", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-interval": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedIntervalInEffect" | "noLeakedIntervalInLifecycle" | "noLeakedIntervalNoIntervalId", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-resize-observer": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedResizeObserver" | "noLeakedResizeObserverInControlFlow" | "noLeakedResizeObserverNoFloatingInstance", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-timeout": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedTimeoutInEffect" | "noLeakedTimeoutInLifecycle" | "noLeakedTimeoutNoTimeoutId", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                    DEFAULT_ESLINT_REACT_SETTINGS: {
                        readonly skipImportCheck: true;
                    };
                };
            };
            readonly rules: {
                readonly "@eslint-react/dom/no-children-in-void-dom-elements": "warn";
                readonly "@eslint-react/dom/no-dangerously-set-innerhtml": "warn";
                readonly "@eslint-react/dom/no-dangerously-set-innerhtml-with-children": "error";
                readonly "@eslint-react/dom/no-find-dom-node": "error";
                readonly "@eslint-react/dom/no-missing-button-type": "warn";
                readonly "@eslint-react/dom/no-missing-iframe-sandbox": "warn";
                readonly "@eslint-react/dom/no-namespace": "error";
                readonly "@eslint-react/dom/no-render-return-value": "error";
                readonly "@eslint-react/dom/no-script-url": "warn";
                readonly "@eslint-react/dom/no-unknown-property": "warn";
                readonly "@eslint-react/dom/no-unsafe-iframe-sandbox": "warn";
                readonly "@eslint-react/dom/no-unsafe-target-blank": "warn";
            };
            readonly settings: {
                readonly "react-x": {
                    readonly additionalHooks: {
                        readonly useLayoutEffect: ["useIsomorphicLayoutEffect"];
                    };
                    readonly polymorphicPropName: "as";
                    readonly skipImportCheck: false;
                    readonly version: "detect";
                };
            };
        };
        readonly "dom-legacy": {
            readonly plugins: readonly ["@eslint-react"];
            readonly rules: {
                readonly "@eslint-react/dom/no-children-in-void-dom-elements": "warn";
                readonly "@eslint-react/dom/no-dangerously-set-innerhtml": "warn";
                readonly "@eslint-react/dom/no-dangerously-set-innerhtml-with-children": "error";
                readonly "@eslint-react/dom/no-find-dom-node": "error";
                readonly "@eslint-react/dom/no-missing-button-type": "warn";
                readonly "@eslint-react/dom/no-missing-iframe-sandbox": "warn";
                readonly "@eslint-react/dom/no-namespace": "error";
                readonly "@eslint-react/dom/no-render-return-value": "error";
                readonly "@eslint-react/dom/no-script-url": "warn";
                readonly "@eslint-react/dom/no-unknown-property": "warn";
                readonly "@eslint-react/dom/no-unsafe-iframe-sandbox": "warn";
                readonly "@eslint-react/dom/no-unsafe-target-blank": "warn";
            };
            readonly settings: {
                readonly "react-x": {
                    readonly additionalHooks: {
                        readonly useLayoutEffect: ["useIsomorphicLayoutEffect"];
                    };
                    readonly polymorphicPropName: "as";
                    readonly skipImportCheck: false;
                    readonly version: "detect";
                };
            };
        };
        readonly recommended: {
            readonly plugins: {
                readonly "@eslint-react": {
                    meta: {
                        name: string;
                        version: string;
                    };
                    rules: {
                        "avoid-shorthand-boolean": _typescript_eslint_utils_ts_eslint.RuleModule<"avoidShorthandBoolean", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "avoid-shorthand-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"avoidShorthandFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "ensure-forward-ref-using-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"ensureForwardRefUsingRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "jsx-no-duplicate-props": _typescript_eslint_utils_ts_eslint.RuleModule<"jsxNoDuplicateProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "jsx-uses-vars": _typescript_eslint_utils_ts_eslint.RuleModule<"jsxUsesVars", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-access-state-in-setstate": _typescript_eslint_utils_ts_eslint.RuleModule<"noAccessStateInSetstate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-array-index-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noArrayIndexKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-count": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenCount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-for-each": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenForEach", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-map": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenMap", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-only": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenOnly", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-prop": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenProp", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-to-array": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenToArray", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-class-component": _typescript_eslint_utils_ts_eslint.RuleModule<"noClassComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-clone-element": _typescript_eslint_utils_ts_eslint.RuleModule<"noCloneElement", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-comment-textnodes": _typescript_eslint_utils_ts_eslint.RuleModule<"noCommentTextnodes", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-complex-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noComplexConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-component-will-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-component-will-receive-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillReceiveProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-create-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"noCreateRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-default-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noDefaultProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-direct-mutation-state": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectMutationState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-duplicate-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noDuplicateKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-implicit-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noImplicitKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-missing-component-display-name": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingComponentDisplayName", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-missing-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingKey" | "noMissingKeyWithFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-nested-components": _typescript_eslint_utils_ts_eslint.RuleModule<"nestedComponent" | "nestedComponentInProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-prop-types": _typescript_eslint_utils_ts_eslint.RuleModule<"noPropTypes", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-redundant-should-component-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantShouldComponentUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-set-state-in-component-did-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentDidMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-set-state-in-component-did-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentDidUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-set-state-in-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-string-refs": _typescript_eslint_utils_ts_eslint.RuleModule<"noStringRefs", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unsafe-component-will-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unsafe-component-will-receive-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillReceiveProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unsafe-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unstable-context-value": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnstableContextValue" | "noUnstableContextValueWithFunction" | "noUnstableContextValueWithIdentifier", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unstable-default-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnstableDefaultProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unused-class-component-members": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnusedClassComponentMembers", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unused-state": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnusedState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-useless-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"noUselessFragment" | "noUselessFragmentInBuiltIn", [{
                            allowExpressions: boolean;
                        }], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-destructuring-assignment": _typescript_eslint_utils_ts_eslint.RuleModule<"preferDestructuringAssignment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-react-namespace-import": _typescript_eslint_utils_ts_eslint.RuleModule<"preferReactNamespaceImport", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-read-only-props": _typescript_eslint_utils_ts_eslint.RuleModule<"preferReadOnlyProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-shorthand-boolean": _typescript_eslint_utils_ts_eslint.RuleModule<"preferShorthandBoolean", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-shorthand-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"preferShorthandFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-complicated-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noComplexConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                    DEFAULT_ESLINT_REACT_SETTINGS: {
                        readonly additionalHooks: {
                            readonly useLayoutEffect: ["useIsomorphicLayoutEffect"];
                        };
                        readonly polymorphicPropName: "as";
                        readonly skipImportCheck: false;
                        readonly version: "detect";
                    };
                };
                readonly "@eslint-react/debug": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "class-component": _typescript_eslint_utils_ts_eslint.RuleModule<"classComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "function-component": _typescript_eslint_utils_ts_eslint.RuleModule<"functionComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly hook: _typescript_eslint_utils_ts_eslint.RuleModule<"hook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "is-from-react": _typescript_eslint_utils_ts_eslint.RuleModule<"isFromReact", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "react-hooks": _typescript_eslint_utils_ts_eslint.RuleModule<"hook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                };
                readonly "@eslint-react/dom": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "no-children-in-void-dom-elements": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenInVoidDomElements", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-dangerously-set-innerhtml": _typescript_eslint_utils_ts_eslint.RuleModule<"noDangerouslySetInnerhtml", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-dangerously-set-innerhtml-with-children": _typescript_eslint_utils_ts_eslint.RuleModule<"noDangerouslySetInnerhtmlWithChildren", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-find-dom-node": _typescript_eslint_utils_ts_eslint.RuleModule<"noFindDomNode", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-missing-button-type": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingButtonType", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-missing-iframe-sandbox": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingIframeSandbox", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-namespace": _typescript_eslint_utils_ts_eslint.RuleModule<"noNamespace", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-render-return-value": _typescript_eslint_utils_ts_eslint.RuleModule<"noRenderReturnValue", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-script-url": _typescript_eslint_utils_ts_eslint.RuleModule<"noScriptUrl", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unknown-property": _typescript_eslint_utils_ts_eslint.RuleModule<string, [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unsafe-iframe-sandbox": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeIframeSandbox", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unsafe-target-blank": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeTargetBlank", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                    readonly DEFAULT_ESLINT_REACT_SETTINGS: {
                        readonly additionalComponents: [{
                            readonly name: "Link";
                            readonly as: "a";
                            readonly attributes: [{
                                readonly name: "to";
                                readonly as: "href";
                            }];
                        }];
                        readonly skipImportCheck: false;
                    };
                };
                readonly "@eslint-react/hooks-extra": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "no-direct-set-state-in-use-effect": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectSetStateInUseEffect", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-direct-set-state-in-use-layout-effect": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectSetStateInUseLayoutEffect", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-redundant-custom-hook": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantCustomHook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unnecessary-use-callback": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseCallback", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unnecessary-use-memo": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseMemo", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "prefer-use-state-lazy-initialization": _typescript_eslint_utils_ts_eslint.RuleModule<"preferUseStateLazyInitialization", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "ensure-custom-hooks-using-other-hooks": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantCustomHook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "ensure-use-memo-has-non-empty-deps": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseMemo", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                };
                readonly "@eslint-react/naming-convention": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "component-name": _typescript_eslint_utils_ts_eslint.RuleModule<"componentName", readonly [{
                            allowAllCaps?: boolean;
                            allowLeadingUnderscore?: boolean;
                            allowNamespace?: boolean;
                            excepts?: readonly string[];
                            rule?: "CONSTANT_CASE" | "PascalCase";
                        } | ("CONSTANT_CASE" | "PascalCase") | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly filename: _typescript_eslint_utils_ts_eslint.RuleModule<"filenameCaseMismatchSuggestion" | "filenameEmpty", readonly [{
                            excepts?: readonly string[];
                            extensions?: readonly string[];
                            rule?: "PascalCase" | "camelCase" | "kebab-case" | "snake_case";
                        } | ("PascalCase" | "camelCase" | "kebab-case" | "snake_case") | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "filename-extension": _typescript_eslint_utils_ts_eslint.RuleModule<"filenameExtensionInvalid" | "filenameExtensionUnexpected", readonly [{
                            allow?: "always" | "as-needed";
                            extensions?: readonly string[];
                        } | ("always" | "as-needed") | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "use-state": _typescript_eslint_utils_ts_eslint.RuleModule<"useState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                };
                readonly "@eslint-react/web-api": {
                    meta: {
                        name: string;
                        version: string;
                    };
                    rules: {
                        "no-leaked-event-listener": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedEventListenerInEffect" | "noLeakedEventListenerInLifecycle" | "noLeakedEventListenerOfInlineFunction", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-interval": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedIntervalInEffect" | "noLeakedIntervalInLifecycle" | "noLeakedIntervalNoIntervalId", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-resize-observer": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedResizeObserver" | "noLeakedResizeObserverInControlFlow" | "noLeakedResizeObserverNoFloatingInstance", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-timeout": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedTimeoutInEffect" | "noLeakedTimeoutInLifecycle" | "noLeakedTimeoutNoTimeoutId", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                    DEFAULT_ESLINT_REACT_SETTINGS: {
                        readonly skipImportCheck: true;
                    };
                };
            };
            readonly rules: {
                readonly "@eslint-react/hooks-extra/no-direct-set-state-in-use-effect": "warn";
                readonly "@eslint-react/hooks-extra/no-redundant-custom-hook": "warn";
                readonly "@eslint-react/hooks-extra/prefer-use-state-lazy-initialization": "warn";
                readonly "@eslint-react/web-api/no-leaked-event-listener": "warn";
                readonly "@eslint-react/web-api/no-leaked-interval": "warn";
                readonly "@eslint-react/web-api/no-leaked-resize-observer": "warn";
                readonly "@eslint-react/web-api/no-leaked-timeout": "warn";
                readonly "@eslint-react/dom/no-children-in-void-dom-elements": "warn";
                readonly "@eslint-react/dom/no-dangerously-set-innerhtml": "warn";
                readonly "@eslint-react/dom/no-dangerously-set-innerhtml-with-children": "error";
                readonly "@eslint-react/dom/no-find-dom-node": "error";
                readonly "@eslint-react/dom/no-missing-button-type": "warn";
                readonly "@eslint-react/dom/no-missing-iframe-sandbox": "warn";
                readonly "@eslint-react/dom/no-namespace": "error";
                readonly "@eslint-react/dom/no-render-return-value": "error";
                readonly "@eslint-react/dom/no-script-url": "warn";
                readonly "@eslint-react/dom/no-unknown-property": "warn";
                readonly "@eslint-react/dom/no-unsafe-iframe-sandbox": "warn";
                readonly "@eslint-react/dom/no-unsafe-target-blank": "warn";
                readonly "@eslint-react/ensure-forward-ref-using-ref": "warn";
                readonly "@eslint-react/jsx-no-duplicate-props": "warn";
                readonly "@eslint-react/jsx-uses-vars": "warn";
                readonly "@eslint-react/no-access-state-in-setstate": "error";
                readonly "@eslint-react/no-array-index-key": "warn";
                readonly "@eslint-react/no-children-count": "warn";
                readonly "@eslint-react/no-children-for-each": "warn";
                readonly "@eslint-react/no-children-map": "warn";
                readonly "@eslint-react/no-children-only": "warn";
                readonly "@eslint-react/no-children-to-array": "warn";
                readonly "@eslint-react/no-clone-element": "warn";
                readonly "@eslint-react/no-comment-textnodes": "warn";
                readonly "@eslint-react/no-component-will-mount": "error";
                readonly "@eslint-react/no-component-will-receive-props": "error";
                readonly "@eslint-react/no-component-will-update": "error";
                readonly "@eslint-react/no-create-ref": "error";
                readonly "@eslint-react/no-default-props": "error";
                readonly "@eslint-react/no-direct-mutation-state": "error";
                readonly "@eslint-react/no-duplicate-key": "error";
                readonly "@eslint-react/no-missing-key": "error";
                readonly "@eslint-react/no-nested-components": "error";
                readonly "@eslint-react/no-prop-types": "error";
                readonly "@eslint-react/no-redundant-should-component-update": "error";
                readonly "@eslint-react/no-set-state-in-component-did-mount": "warn";
                readonly "@eslint-react/no-set-state-in-component-did-update": "warn";
                readonly "@eslint-react/no-set-state-in-component-will-update": "warn";
                readonly "@eslint-react/no-string-refs": "error";
                readonly "@eslint-react/no-unsafe-component-will-mount": "warn";
                readonly "@eslint-react/no-unsafe-component-will-receive-props": "warn";
                readonly "@eslint-react/no-unsafe-component-will-update": "warn";
                readonly "@eslint-react/no-unstable-context-value": "warn";
                readonly "@eslint-react/no-unstable-default-props": "warn";
                readonly "@eslint-react/no-unused-class-component-members": "warn";
                readonly "@eslint-react/no-unused-state": "warn";
            };
            readonly settings: {
                readonly "react-x": {
                    readonly additionalHooks: {
                        readonly useLayoutEffect: ["useIsomorphicLayoutEffect"];
                    };
                    readonly polymorphicPropName: "as";
                    readonly skipImportCheck: false;
                    readonly version: "detect";
                };
            };
        };
        readonly "recommended-legacy": {
            readonly plugins: readonly ["@eslint-react"];
            readonly rules: {
                readonly "@eslint-react/hooks-extra/no-direct-set-state-in-use-effect": "warn";
                readonly "@eslint-react/hooks-extra/no-redundant-custom-hook": "warn";
                readonly "@eslint-react/hooks-extra/prefer-use-state-lazy-initialization": "warn";
                readonly "@eslint-react/web-api/no-leaked-event-listener": "warn";
                readonly "@eslint-react/web-api/no-leaked-interval": "warn";
                readonly "@eslint-react/web-api/no-leaked-resize-observer": "warn";
                readonly "@eslint-react/web-api/no-leaked-timeout": "warn";
                readonly "@eslint-react/dom/no-children-in-void-dom-elements": "warn";
                readonly "@eslint-react/dom/no-dangerously-set-innerhtml": "warn";
                readonly "@eslint-react/dom/no-dangerously-set-innerhtml-with-children": "error";
                readonly "@eslint-react/dom/no-find-dom-node": "error";
                readonly "@eslint-react/dom/no-missing-button-type": "warn";
                readonly "@eslint-react/dom/no-missing-iframe-sandbox": "warn";
                readonly "@eslint-react/dom/no-namespace": "error";
                readonly "@eslint-react/dom/no-render-return-value": "error";
                readonly "@eslint-react/dom/no-script-url": "warn";
                readonly "@eslint-react/dom/no-unknown-property": "warn";
                readonly "@eslint-react/dom/no-unsafe-iframe-sandbox": "warn";
                readonly "@eslint-react/dom/no-unsafe-target-blank": "warn";
                readonly "@eslint-react/ensure-forward-ref-using-ref": "warn";
                readonly "@eslint-react/jsx-no-duplicate-props": "warn";
                readonly "@eslint-react/jsx-uses-vars": "warn";
                readonly "@eslint-react/no-access-state-in-setstate": "error";
                readonly "@eslint-react/no-array-index-key": "warn";
                readonly "@eslint-react/no-children-count": "warn";
                readonly "@eslint-react/no-children-for-each": "warn";
                readonly "@eslint-react/no-children-map": "warn";
                readonly "@eslint-react/no-children-only": "warn";
                readonly "@eslint-react/no-children-to-array": "warn";
                readonly "@eslint-react/no-clone-element": "warn";
                readonly "@eslint-react/no-comment-textnodes": "warn";
                readonly "@eslint-react/no-component-will-mount": "error";
                readonly "@eslint-react/no-component-will-receive-props": "error";
                readonly "@eslint-react/no-component-will-update": "error";
                readonly "@eslint-react/no-create-ref": "error";
                readonly "@eslint-react/no-default-props": "error";
                readonly "@eslint-react/no-direct-mutation-state": "error";
                readonly "@eslint-react/no-duplicate-key": "error";
                readonly "@eslint-react/no-missing-key": "error";
                readonly "@eslint-react/no-nested-components": "error";
                readonly "@eslint-react/no-prop-types": "error";
                readonly "@eslint-react/no-redundant-should-component-update": "error";
                readonly "@eslint-react/no-set-state-in-component-did-mount": "warn";
                readonly "@eslint-react/no-set-state-in-component-did-update": "warn";
                readonly "@eslint-react/no-set-state-in-component-will-update": "warn";
                readonly "@eslint-react/no-string-refs": "error";
                readonly "@eslint-react/no-unsafe-component-will-mount": "warn";
                readonly "@eslint-react/no-unsafe-component-will-receive-props": "warn";
                readonly "@eslint-react/no-unsafe-component-will-update": "warn";
                readonly "@eslint-react/no-unstable-context-value": "warn";
                readonly "@eslint-react/no-unstable-default-props": "warn";
                readonly "@eslint-react/no-unused-class-component-members": "warn";
                readonly "@eslint-react/no-unused-state": "warn";
            };
            readonly settings: {
                readonly "react-x": {
                    readonly additionalHooks: {
                        readonly useLayoutEffect: ["useIsomorphicLayoutEffect"];
                    };
                    readonly polymorphicPropName: "as";
                    readonly skipImportCheck: false;
                    readonly version: "detect";
                };
            };
        };
        readonly "recommended-typescript": {
            readonly plugins: {
                readonly "@eslint-react": {
                    meta: {
                        name: string;
                        version: string;
                    };
                    rules: {
                        "avoid-shorthand-boolean": _typescript_eslint_utils_ts_eslint.RuleModule<"avoidShorthandBoolean", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "avoid-shorthand-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"avoidShorthandFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "ensure-forward-ref-using-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"ensureForwardRefUsingRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "jsx-no-duplicate-props": _typescript_eslint_utils_ts_eslint.RuleModule<"jsxNoDuplicateProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "jsx-uses-vars": _typescript_eslint_utils_ts_eslint.RuleModule<"jsxUsesVars", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-access-state-in-setstate": _typescript_eslint_utils_ts_eslint.RuleModule<"noAccessStateInSetstate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-array-index-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noArrayIndexKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-count": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenCount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-for-each": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenForEach", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-map": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenMap", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-only": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenOnly", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-prop": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenProp", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-to-array": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenToArray", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-class-component": _typescript_eslint_utils_ts_eslint.RuleModule<"noClassComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-clone-element": _typescript_eslint_utils_ts_eslint.RuleModule<"noCloneElement", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-comment-textnodes": _typescript_eslint_utils_ts_eslint.RuleModule<"noCommentTextnodes", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-complex-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noComplexConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-component-will-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-component-will-receive-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillReceiveProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-create-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"noCreateRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-default-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noDefaultProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-direct-mutation-state": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectMutationState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-duplicate-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noDuplicateKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-implicit-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noImplicitKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-missing-component-display-name": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingComponentDisplayName", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-missing-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingKey" | "noMissingKeyWithFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-nested-components": _typescript_eslint_utils_ts_eslint.RuleModule<"nestedComponent" | "nestedComponentInProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-prop-types": _typescript_eslint_utils_ts_eslint.RuleModule<"noPropTypes", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-redundant-should-component-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantShouldComponentUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-set-state-in-component-did-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentDidMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-set-state-in-component-did-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentDidUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-set-state-in-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-string-refs": _typescript_eslint_utils_ts_eslint.RuleModule<"noStringRefs", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unsafe-component-will-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unsafe-component-will-receive-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillReceiveProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unsafe-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unstable-context-value": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnstableContextValue" | "noUnstableContextValueWithFunction" | "noUnstableContextValueWithIdentifier", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unstable-default-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnstableDefaultProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unused-class-component-members": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnusedClassComponentMembers", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unused-state": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnusedState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-useless-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"noUselessFragment" | "noUselessFragmentInBuiltIn", [{
                            allowExpressions: boolean;
                        }], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-destructuring-assignment": _typescript_eslint_utils_ts_eslint.RuleModule<"preferDestructuringAssignment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-react-namespace-import": _typescript_eslint_utils_ts_eslint.RuleModule<"preferReactNamespaceImport", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-read-only-props": _typescript_eslint_utils_ts_eslint.RuleModule<"preferReadOnlyProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-shorthand-boolean": _typescript_eslint_utils_ts_eslint.RuleModule<"preferShorthandBoolean", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-shorthand-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"preferShorthandFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-complicated-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noComplexConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                    DEFAULT_ESLINT_REACT_SETTINGS: {
                        readonly additionalHooks: {
                            readonly useLayoutEffect: ["useIsomorphicLayoutEffect"];
                        };
                        readonly polymorphicPropName: "as";
                        readonly skipImportCheck: false;
                        readonly version: "detect";
                    };
                };
                readonly "@eslint-react/debug": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "class-component": _typescript_eslint_utils_ts_eslint.RuleModule<"classComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "function-component": _typescript_eslint_utils_ts_eslint.RuleModule<"functionComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly hook: _typescript_eslint_utils_ts_eslint.RuleModule<"hook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "is-from-react": _typescript_eslint_utils_ts_eslint.RuleModule<"isFromReact", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "react-hooks": _typescript_eslint_utils_ts_eslint.RuleModule<"hook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                };
                readonly "@eslint-react/dom": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "no-children-in-void-dom-elements": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenInVoidDomElements", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-dangerously-set-innerhtml": _typescript_eslint_utils_ts_eslint.RuleModule<"noDangerouslySetInnerhtml", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-dangerously-set-innerhtml-with-children": _typescript_eslint_utils_ts_eslint.RuleModule<"noDangerouslySetInnerhtmlWithChildren", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-find-dom-node": _typescript_eslint_utils_ts_eslint.RuleModule<"noFindDomNode", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-missing-button-type": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingButtonType", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-missing-iframe-sandbox": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingIframeSandbox", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-namespace": _typescript_eslint_utils_ts_eslint.RuleModule<"noNamespace", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-render-return-value": _typescript_eslint_utils_ts_eslint.RuleModule<"noRenderReturnValue", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-script-url": _typescript_eslint_utils_ts_eslint.RuleModule<"noScriptUrl", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unknown-property": _typescript_eslint_utils_ts_eslint.RuleModule<string, [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unsafe-iframe-sandbox": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeIframeSandbox", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unsafe-target-blank": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeTargetBlank", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                    readonly DEFAULT_ESLINT_REACT_SETTINGS: {
                        readonly additionalComponents: [{
                            readonly name: "Link";
                            readonly as: "a";
                            readonly attributes: [{
                                readonly name: "to";
                                readonly as: "href";
                            }];
                        }];
                        readonly skipImportCheck: false;
                    };
                };
                readonly "@eslint-react/hooks-extra": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "no-direct-set-state-in-use-effect": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectSetStateInUseEffect", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-direct-set-state-in-use-layout-effect": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectSetStateInUseLayoutEffect", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-redundant-custom-hook": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantCustomHook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unnecessary-use-callback": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseCallback", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unnecessary-use-memo": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseMemo", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "prefer-use-state-lazy-initialization": _typescript_eslint_utils_ts_eslint.RuleModule<"preferUseStateLazyInitialization", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "ensure-custom-hooks-using-other-hooks": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantCustomHook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "ensure-use-memo-has-non-empty-deps": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseMemo", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                };
                readonly "@eslint-react/naming-convention": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "component-name": _typescript_eslint_utils_ts_eslint.RuleModule<"componentName", readonly [{
                            allowAllCaps?: boolean;
                            allowLeadingUnderscore?: boolean;
                            allowNamespace?: boolean;
                            excepts?: readonly string[];
                            rule?: "CONSTANT_CASE" | "PascalCase";
                        } | ("CONSTANT_CASE" | "PascalCase") | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly filename: _typescript_eslint_utils_ts_eslint.RuleModule<"filenameCaseMismatchSuggestion" | "filenameEmpty", readonly [{
                            excepts?: readonly string[];
                            extensions?: readonly string[];
                            rule?: "PascalCase" | "camelCase" | "kebab-case" | "snake_case";
                        } | ("PascalCase" | "camelCase" | "kebab-case" | "snake_case") | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "filename-extension": _typescript_eslint_utils_ts_eslint.RuleModule<"filenameExtensionInvalid" | "filenameExtensionUnexpected", readonly [{
                            allow?: "always" | "as-needed";
                            extensions?: readonly string[];
                        } | ("always" | "as-needed") | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "use-state": _typescript_eslint_utils_ts_eslint.RuleModule<"useState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                };
                readonly "@eslint-react/web-api": {
                    meta: {
                        name: string;
                        version: string;
                    };
                    rules: {
                        "no-leaked-event-listener": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedEventListenerInEffect" | "noLeakedEventListenerInLifecycle" | "noLeakedEventListenerOfInlineFunction", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-interval": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedIntervalInEffect" | "noLeakedIntervalInLifecycle" | "noLeakedIntervalNoIntervalId", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-resize-observer": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedResizeObserver" | "noLeakedResizeObserverInControlFlow" | "noLeakedResizeObserverNoFloatingInstance", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-timeout": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedTimeoutInEffect" | "noLeakedTimeoutInLifecycle" | "noLeakedTimeoutNoTimeoutId", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                    DEFAULT_ESLINT_REACT_SETTINGS: {
                        readonly skipImportCheck: true;
                    };
                };
            };
            readonly rules: {
                readonly "@eslint-react/dom/no-unknown-property": "off";
                readonly "@eslint-react/jsx-no-duplicate-props": "off";
                readonly "@eslint-react/jsx-uses-vars": "off";
                readonly "@eslint-react/hooks-extra/no-direct-set-state-in-use-effect": "warn";
                readonly "@eslint-react/hooks-extra/no-redundant-custom-hook": "warn";
                readonly "@eslint-react/hooks-extra/prefer-use-state-lazy-initialization": "warn";
                readonly "@eslint-react/web-api/no-leaked-event-listener": "warn";
                readonly "@eslint-react/web-api/no-leaked-interval": "warn";
                readonly "@eslint-react/web-api/no-leaked-resize-observer": "warn";
                readonly "@eslint-react/web-api/no-leaked-timeout": "warn";
                readonly "@eslint-react/dom/no-children-in-void-dom-elements": "warn";
                readonly "@eslint-react/dom/no-dangerously-set-innerhtml": "warn";
                readonly "@eslint-react/dom/no-dangerously-set-innerhtml-with-children": "error";
                readonly "@eslint-react/dom/no-find-dom-node": "error";
                readonly "@eslint-react/dom/no-missing-button-type": "warn";
                readonly "@eslint-react/dom/no-missing-iframe-sandbox": "warn";
                readonly "@eslint-react/dom/no-namespace": "error";
                readonly "@eslint-react/dom/no-render-return-value": "error";
                readonly "@eslint-react/dom/no-script-url": "warn";
                readonly "@eslint-react/dom/no-unsafe-iframe-sandbox": "warn";
                readonly "@eslint-react/dom/no-unsafe-target-blank": "warn";
                readonly "@eslint-react/ensure-forward-ref-using-ref": "warn";
                readonly "@eslint-react/no-access-state-in-setstate": "error";
                readonly "@eslint-react/no-array-index-key": "warn";
                readonly "@eslint-react/no-children-count": "warn";
                readonly "@eslint-react/no-children-for-each": "warn";
                readonly "@eslint-react/no-children-map": "warn";
                readonly "@eslint-react/no-children-only": "warn";
                readonly "@eslint-react/no-children-to-array": "warn";
                readonly "@eslint-react/no-clone-element": "warn";
                readonly "@eslint-react/no-comment-textnodes": "warn";
                readonly "@eslint-react/no-component-will-mount": "error";
                readonly "@eslint-react/no-component-will-receive-props": "error";
                readonly "@eslint-react/no-component-will-update": "error";
                readonly "@eslint-react/no-create-ref": "error";
                readonly "@eslint-react/no-default-props": "error";
                readonly "@eslint-react/no-direct-mutation-state": "error";
                readonly "@eslint-react/no-duplicate-key": "error";
                readonly "@eslint-react/no-missing-key": "error";
                readonly "@eslint-react/no-nested-components": "error";
                readonly "@eslint-react/no-prop-types": "error";
                readonly "@eslint-react/no-redundant-should-component-update": "error";
                readonly "@eslint-react/no-set-state-in-component-did-mount": "warn";
                readonly "@eslint-react/no-set-state-in-component-did-update": "warn";
                readonly "@eslint-react/no-set-state-in-component-will-update": "warn";
                readonly "@eslint-react/no-string-refs": "error";
                readonly "@eslint-react/no-unsafe-component-will-mount": "warn";
                readonly "@eslint-react/no-unsafe-component-will-receive-props": "warn";
                readonly "@eslint-react/no-unsafe-component-will-update": "warn";
                readonly "@eslint-react/no-unstable-context-value": "warn";
                readonly "@eslint-react/no-unstable-default-props": "warn";
                readonly "@eslint-react/no-unused-class-component-members": "warn";
                readonly "@eslint-react/no-unused-state": "warn";
            };
            readonly settings: {
                readonly "react-x": {
                    readonly additionalHooks: {
                        readonly useLayoutEffect: ["useIsomorphicLayoutEffect"];
                    };
                    readonly polymorphicPropName: "as";
                    readonly skipImportCheck: false;
                    readonly version: "detect";
                };
            };
        };
        readonly "recommended-typescript-legacy": {
            readonly plugins: readonly ["@eslint-react"];
            readonly rules: {
                readonly "@eslint-react/dom/no-unknown-property": "off";
                readonly "@eslint-react/jsx-no-duplicate-props": "off";
                readonly "@eslint-react/jsx-uses-vars": "off";
                readonly "@eslint-react/hooks-extra/no-direct-set-state-in-use-effect": "warn";
                readonly "@eslint-react/hooks-extra/no-redundant-custom-hook": "warn";
                readonly "@eslint-react/hooks-extra/prefer-use-state-lazy-initialization": "warn";
                readonly "@eslint-react/web-api/no-leaked-event-listener": "warn";
                readonly "@eslint-react/web-api/no-leaked-interval": "warn";
                readonly "@eslint-react/web-api/no-leaked-resize-observer": "warn";
                readonly "@eslint-react/web-api/no-leaked-timeout": "warn";
                readonly "@eslint-react/dom/no-children-in-void-dom-elements": "warn";
                readonly "@eslint-react/dom/no-dangerously-set-innerhtml": "warn";
                readonly "@eslint-react/dom/no-dangerously-set-innerhtml-with-children": "error";
                readonly "@eslint-react/dom/no-find-dom-node": "error";
                readonly "@eslint-react/dom/no-missing-button-type": "warn";
                readonly "@eslint-react/dom/no-missing-iframe-sandbox": "warn";
                readonly "@eslint-react/dom/no-namespace": "error";
                readonly "@eslint-react/dom/no-render-return-value": "error";
                readonly "@eslint-react/dom/no-script-url": "warn";
                readonly "@eslint-react/dom/no-unsafe-iframe-sandbox": "warn";
                readonly "@eslint-react/dom/no-unsafe-target-blank": "warn";
                readonly "@eslint-react/ensure-forward-ref-using-ref": "warn";
                readonly "@eslint-react/no-access-state-in-setstate": "error";
                readonly "@eslint-react/no-array-index-key": "warn";
                readonly "@eslint-react/no-children-count": "warn";
                readonly "@eslint-react/no-children-for-each": "warn";
                readonly "@eslint-react/no-children-map": "warn";
                readonly "@eslint-react/no-children-only": "warn";
                readonly "@eslint-react/no-children-to-array": "warn";
                readonly "@eslint-react/no-clone-element": "warn";
                readonly "@eslint-react/no-comment-textnodes": "warn";
                readonly "@eslint-react/no-component-will-mount": "error";
                readonly "@eslint-react/no-component-will-receive-props": "error";
                readonly "@eslint-react/no-component-will-update": "error";
                readonly "@eslint-react/no-create-ref": "error";
                readonly "@eslint-react/no-default-props": "error";
                readonly "@eslint-react/no-direct-mutation-state": "error";
                readonly "@eslint-react/no-duplicate-key": "error";
                readonly "@eslint-react/no-missing-key": "error";
                readonly "@eslint-react/no-nested-components": "error";
                readonly "@eslint-react/no-prop-types": "error";
                readonly "@eslint-react/no-redundant-should-component-update": "error";
                readonly "@eslint-react/no-set-state-in-component-did-mount": "warn";
                readonly "@eslint-react/no-set-state-in-component-did-update": "warn";
                readonly "@eslint-react/no-set-state-in-component-will-update": "warn";
                readonly "@eslint-react/no-string-refs": "error";
                readonly "@eslint-react/no-unsafe-component-will-mount": "warn";
                readonly "@eslint-react/no-unsafe-component-will-receive-props": "warn";
                readonly "@eslint-react/no-unsafe-component-will-update": "warn";
                readonly "@eslint-react/no-unstable-context-value": "warn";
                readonly "@eslint-react/no-unstable-default-props": "warn";
                readonly "@eslint-react/no-unused-class-component-members": "warn";
                readonly "@eslint-react/no-unused-state": "warn";
            };
            readonly settings: {
                readonly "react-x": {
                    readonly additionalHooks: {
                        readonly useLayoutEffect: ["useIsomorphicLayoutEffect"];
                    };
                    readonly polymorphicPropName: "as";
                    readonly skipImportCheck: false;
                    readonly version: "detect";
                };
            };
        };
        readonly "recommended-type-checked": {
            readonly plugins: {
                readonly "@eslint-react": {
                    meta: {
                        name: string;
                        version: string;
                    };
                    rules: {
                        "avoid-shorthand-boolean": _typescript_eslint_utils_ts_eslint.RuleModule<"avoidShorthandBoolean", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "avoid-shorthand-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"avoidShorthandFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "ensure-forward-ref-using-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"ensureForwardRefUsingRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "jsx-no-duplicate-props": _typescript_eslint_utils_ts_eslint.RuleModule<"jsxNoDuplicateProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "jsx-uses-vars": _typescript_eslint_utils_ts_eslint.RuleModule<"jsxUsesVars", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-access-state-in-setstate": _typescript_eslint_utils_ts_eslint.RuleModule<"noAccessStateInSetstate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-array-index-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noArrayIndexKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-count": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenCount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-for-each": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenForEach", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-map": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenMap", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-only": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenOnly", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-prop": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenProp", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-to-array": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenToArray", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-class-component": _typescript_eslint_utils_ts_eslint.RuleModule<"noClassComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-clone-element": _typescript_eslint_utils_ts_eslint.RuleModule<"noCloneElement", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-comment-textnodes": _typescript_eslint_utils_ts_eslint.RuleModule<"noCommentTextnodes", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-complex-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noComplexConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-component-will-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-component-will-receive-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillReceiveProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-create-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"noCreateRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-default-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noDefaultProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-direct-mutation-state": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectMutationState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-duplicate-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noDuplicateKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-implicit-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noImplicitKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-missing-component-display-name": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingComponentDisplayName", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-missing-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingKey" | "noMissingKeyWithFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-nested-components": _typescript_eslint_utils_ts_eslint.RuleModule<"nestedComponent" | "nestedComponentInProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-prop-types": _typescript_eslint_utils_ts_eslint.RuleModule<"noPropTypes", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-redundant-should-component-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantShouldComponentUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-set-state-in-component-did-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentDidMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-set-state-in-component-did-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentDidUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-set-state-in-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-string-refs": _typescript_eslint_utils_ts_eslint.RuleModule<"noStringRefs", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unsafe-component-will-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unsafe-component-will-receive-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillReceiveProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unsafe-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unstable-context-value": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnstableContextValue" | "noUnstableContextValueWithFunction" | "noUnstableContextValueWithIdentifier", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unstable-default-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnstableDefaultProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unused-class-component-members": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnusedClassComponentMembers", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unused-state": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnusedState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-useless-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"noUselessFragment" | "noUselessFragmentInBuiltIn", [{
                            allowExpressions: boolean;
                        }], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-destructuring-assignment": _typescript_eslint_utils_ts_eslint.RuleModule<"preferDestructuringAssignment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-react-namespace-import": _typescript_eslint_utils_ts_eslint.RuleModule<"preferReactNamespaceImport", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-read-only-props": _typescript_eslint_utils_ts_eslint.RuleModule<"preferReadOnlyProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-shorthand-boolean": _typescript_eslint_utils_ts_eslint.RuleModule<"preferShorthandBoolean", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-shorthand-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"preferShorthandFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-complicated-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noComplexConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                    DEFAULT_ESLINT_REACT_SETTINGS: {
                        readonly additionalHooks: {
                            readonly useLayoutEffect: ["useIsomorphicLayoutEffect"];
                        };
                        readonly polymorphicPropName: "as";
                        readonly skipImportCheck: false;
                        readonly version: "detect";
                    };
                };
                readonly "@eslint-react/debug": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "class-component": _typescript_eslint_utils_ts_eslint.RuleModule<"classComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "function-component": _typescript_eslint_utils_ts_eslint.RuleModule<"functionComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly hook: _typescript_eslint_utils_ts_eslint.RuleModule<"hook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "is-from-react": _typescript_eslint_utils_ts_eslint.RuleModule<"isFromReact", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "react-hooks": _typescript_eslint_utils_ts_eslint.RuleModule<"hook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                };
                readonly "@eslint-react/dom": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "no-children-in-void-dom-elements": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenInVoidDomElements", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-dangerously-set-innerhtml": _typescript_eslint_utils_ts_eslint.RuleModule<"noDangerouslySetInnerhtml", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-dangerously-set-innerhtml-with-children": _typescript_eslint_utils_ts_eslint.RuleModule<"noDangerouslySetInnerhtmlWithChildren", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-find-dom-node": _typescript_eslint_utils_ts_eslint.RuleModule<"noFindDomNode", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-missing-button-type": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingButtonType", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-missing-iframe-sandbox": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingIframeSandbox", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-namespace": _typescript_eslint_utils_ts_eslint.RuleModule<"noNamespace", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-render-return-value": _typescript_eslint_utils_ts_eslint.RuleModule<"noRenderReturnValue", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-script-url": _typescript_eslint_utils_ts_eslint.RuleModule<"noScriptUrl", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unknown-property": _typescript_eslint_utils_ts_eslint.RuleModule<string, [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unsafe-iframe-sandbox": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeIframeSandbox", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unsafe-target-blank": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeTargetBlank", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                    readonly DEFAULT_ESLINT_REACT_SETTINGS: {
                        readonly additionalComponents: [{
                            readonly name: "Link";
                            readonly as: "a";
                            readonly attributes: [{
                                readonly name: "to";
                                readonly as: "href";
                            }];
                        }];
                        readonly skipImportCheck: false;
                    };
                };
                readonly "@eslint-react/hooks-extra": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "no-direct-set-state-in-use-effect": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectSetStateInUseEffect", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-direct-set-state-in-use-layout-effect": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectSetStateInUseLayoutEffect", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-redundant-custom-hook": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantCustomHook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unnecessary-use-callback": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseCallback", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unnecessary-use-memo": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseMemo", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "prefer-use-state-lazy-initialization": _typescript_eslint_utils_ts_eslint.RuleModule<"preferUseStateLazyInitialization", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "ensure-custom-hooks-using-other-hooks": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantCustomHook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "ensure-use-memo-has-non-empty-deps": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseMemo", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                };
                readonly "@eslint-react/naming-convention": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "component-name": _typescript_eslint_utils_ts_eslint.RuleModule<"componentName", readonly [{
                            allowAllCaps?: boolean;
                            allowLeadingUnderscore?: boolean;
                            allowNamespace?: boolean;
                            excepts?: readonly string[];
                            rule?: "CONSTANT_CASE" | "PascalCase";
                        } | ("CONSTANT_CASE" | "PascalCase") | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly filename: _typescript_eslint_utils_ts_eslint.RuleModule<"filenameCaseMismatchSuggestion" | "filenameEmpty", readonly [{
                            excepts?: readonly string[];
                            extensions?: readonly string[];
                            rule?: "PascalCase" | "camelCase" | "kebab-case" | "snake_case";
                        } | ("PascalCase" | "camelCase" | "kebab-case" | "snake_case") | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "filename-extension": _typescript_eslint_utils_ts_eslint.RuleModule<"filenameExtensionInvalid" | "filenameExtensionUnexpected", readonly [{
                            allow?: "always" | "as-needed";
                            extensions?: readonly string[];
                        } | ("always" | "as-needed") | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "use-state": _typescript_eslint_utils_ts_eslint.RuleModule<"useState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                };
                readonly "@eslint-react/web-api": {
                    meta: {
                        name: string;
                        version: string;
                    };
                    rules: {
                        "no-leaked-event-listener": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedEventListenerInEffect" | "noLeakedEventListenerInLifecycle" | "noLeakedEventListenerOfInlineFunction", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-interval": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedIntervalInEffect" | "noLeakedIntervalInLifecycle" | "noLeakedIntervalNoIntervalId", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-resize-observer": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedResizeObserver" | "noLeakedResizeObserverInControlFlow" | "noLeakedResizeObserverNoFloatingInstance", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-timeout": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedTimeoutInEffect" | "noLeakedTimeoutInLifecycle" | "noLeakedTimeoutNoTimeoutId", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                    DEFAULT_ESLINT_REACT_SETTINGS: {
                        readonly skipImportCheck: true;
                    };
                };
            };
            readonly rules: {
                readonly "@eslint-react/no-leaked-conditional-rendering": "warn";
                readonly "@eslint-react/dom/no-unknown-property": "off";
                readonly "@eslint-react/jsx-no-duplicate-props": "off";
                readonly "@eslint-react/jsx-uses-vars": "off";
                readonly "@eslint-react/hooks-extra/no-direct-set-state-in-use-effect": "warn";
                readonly "@eslint-react/hooks-extra/no-redundant-custom-hook": "warn";
                readonly "@eslint-react/hooks-extra/prefer-use-state-lazy-initialization": "warn";
                readonly "@eslint-react/web-api/no-leaked-event-listener": "warn";
                readonly "@eslint-react/web-api/no-leaked-interval": "warn";
                readonly "@eslint-react/web-api/no-leaked-resize-observer": "warn";
                readonly "@eslint-react/web-api/no-leaked-timeout": "warn";
                readonly "@eslint-react/dom/no-children-in-void-dom-elements": "warn";
                readonly "@eslint-react/dom/no-dangerously-set-innerhtml": "warn";
                readonly "@eslint-react/dom/no-dangerously-set-innerhtml-with-children": "error";
                readonly "@eslint-react/dom/no-find-dom-node": "error";
                readonly "@eslint-react/dom/no-missing-button-type": "warn";
                readonly "@eslint-react/dom/no-missing-iframe-sandbox": "warn";
                readonly "@eslint-react/dom/no-namespace": "error";
                readonly "@eslint-react/dom/no-render-return-value": "error";
                readonly "@eslint-react/dom/no-script-url": "warn";
                readonly "@eslint-react/dom/no-unsafe-iframe-sandbox": "warn";
                readonly "@eslint-react/dom/no-unsafe-target-blank": "warn";
                readonly "@eslint-react/ensure-forward-ref-using-ref": "warn";
                readonly "@eslint-react/no-access-state-in-setstate": "error";
                readonly "@eslint-react/no-array-index-key": "warn";
                readonly "@eslint-react/no-children-count": "warn";
                readonly "@eslint-react/no-children-for-each": "warn";
                readonly "@eslint-react/no-children-map": "warn";
                readonly "@eslint-react/no-children-only": "warn";
                readonly "@eslint-react/no-children-to-array": "warn";
                readonly "@eslint-react/no-clone-element": "warn";
                readonly "@eslint-react/no-comment-textnodes": "warn";
                readonly "@eslint-react/no-component-will-mount": "error";
                readonly "@eslint-react/no-component-will-receive-props": "error";
                readonly "@eslint-react/no-component-will-update": "error";
                readonly "@eslint-react/no-create-ref": "error";
                readonly "@eslint-react/no-default-props": "error";
                readonly "@eslint-react/no-direct-mutation-state": "error";
                readonly "@eslint-react/no-duplicate-key": "error";
                readonly "@eslint-react/no-missing-key": "error";
                readonly "@eslint-react/no-nested-components": "error";
                readonly "@eslint-react/no-prop-types": "error";
                readonly "@eslint-react/no-redundant-should-component-update": "error";
                readonly "@eslint-react/no-set-state-in-component-did-mount": "warn";
                readonly "@eslint-react/no-set-state-in-component-did-update": "warn";
                readonly "@eslint-react/no-set-state-in-component-will-update": "warn";
                readonly "@eslint-react/no-string-refs": "error";
                readonly "@eslint-react/no-unsafe-component-will-mount": "warn";
                readonly "@eslint-react/no-unsafe-component-will-receive-props": "warn";
                readonly "@eslint-react/no-unsafe-component-will-update": "warn";
                readonly "@eslint-react/no-unstable-context-value": "warn";
                readonly "@eslint-react/no-unstable-default-props": "warn";
                readonly "@eslint-react/no-unused-class-component-members": "warn";
                readonly "@eslint-react/no-unused-state": "warn";
            };
            readonly settings: {
                readonly "react-x": {
                    readonly additionalHooks: {
                        readonly useLayoutEffect: ["useIsomorphicLayoutEffect"];
                    };
                    readonly polymorphicPropName: "as";
                    readonly skipImportCheck: false;
                    readonly version: "detect";
                };
            };
        };
        readonly "recommended-type-checked-legacy": {
            readonly plugins: readonly ["@eslint-react"];
            readonly rules: {
                readonly "@eslint-react/no-leaked-conditional-rendering": "warn";
                readonly "@eslint-react/dom/no-unknown-property": "off";
                readonly "@eslint-react/jsx-no-duplicate-props": "off";
                readonly "@eslint-react/jsx-uses-vars": "off";
                readonly "@eslint-react/hooks-extra/no-direct-set-state-in-use-effect": "warn";
                readonly "@eslint-react/hooks-extra/no-redundant-custom-hook": "warn";
                readonly "@eslint-react/hooks-extra/prefer-use-state-lazy-initialization": "warn";
                readonly "@eslint-react/web-api/no-leaked-event-listener": "warn";
                readonly "@eslint-react/web-api/no-leaked-interval": "warn";
                readonly "@eslint-react/web-api/no-leaked-resize-observer": "warn";
                readonly "@eslint-react/web-api/no-leaked-timeout": "warn";
                readonly "@eslint-react/dom/no-children-in-void-dom-elements": "warn";
                readonly "@eslint-react/dom/no-dangerously-set-innerhtml": "warn";
                readonly "@eslint-react/dom/no-dangerously-set-innerhtml-with-children": "error";
                readonly "@eslint-react/dom/no-find-dom-node": "error";
                readonly "@eslint-react/dom/no-missing-button-type": "warn";
                readonly "@eslint-react/dom/no-missing-iframe-sandbox": "warn";
                readonly "@eslint-react/dom/no-namespace": "error";
                readonly "@eslint-react/dom/no-render-return-value": "error";
                readonly "@eslint-react/dom/no-script-url": "warn";
                readonly "@eslint-react/dom/no-unsafe-iframe-sandbox": "warn";
                readonly "@eslint-react/dom/no-unsafe-target-blank": "warn";
                readonly "@eslint-react/ensure-forward-ref-using-ref": "warn";
                readonly "@eslint-react/no-access-state-in-setstate": "error";
                readonly "@eslint-react/no-array-index-key": "warn";
                readonly "@eslint-react/no-children-count": "warn";
                readonly "@eslint-react/no-children-for-each": "warn";
                readonly "@eslint-react/no-children-map": "warn";
                readonly "@eslint-react/no-children-only": "warn";
                readonly "@eslint-react/no-children-to-array": "warn";
                readonly "@eslint-react/no-clone-element": "warn";
                readonly "@eslint-react/no-comment-textnodes": "warn";
                readonly "@eslint-react/no-component-will-mount": "error";
                readonly "@eslint-react/no-component-will-receive-props": "error";
                readonly "@eslint-react/no-component-will-update": "error";
                readonly "@eslint-react/no-create-ref": "error";
                readonly "@eslint-react/no-default-props": "error";
                readonly "@eslint-react/no-direct-mutation-state": "error";
                readonly "@eslint-react/no-duplicate-key": "error";
                readonly "@eslint-react/no-missing-key": "error";
                readonly "@eslint-react/no-nested-components": "error";
                readonly "@eslint-react/no-prop-types": "error";
                readonly "@eslint-react/no-redundant-should-component-update": "error";
                readonly "@eslint-react/no-set-state-in-component-did-mount": "warn";
                readonly "@eslint-react/no-set-state-in-component-did-update": "warn";
                readonly "@eslint-react/no-set-state-in-component-will-update": "warn";
                readonly "@eslint-react/no-string-refs": "error";
                readonly "@eslint-react/no-unsafe-component-will-mount": "warn";
                readonly "@eslint-react/no-unsafe-component-will-receive-props": "warn";
                readonly "@eslint-react/no-unsafe-component-will-update": "warn";
                readonly "@eslint-react/no-unstable-context-value": "warn";
                readonly "@eslint-react/no-unstable-default-props": "warn";
                readonly "@eslint-react/no-unused-class-component-members": "warn";
                readonly "@eslint-react/no-unused-state": "warn";
            };
            readonly settings: {
                readonly "react-x": {
                    readonly additionalHooks: {
                        readonly useLayoutEffect: ["useIsomorphicLayoutEffect"];
                    };
                    readonly polymorphicPropName: "as";
                    readonly skipImportCheck: false;
                    readonly version: "detect";
                };
            };
        };
        readonly "disable-dom": {
            readonly plugins: {
                readonly "@eslint-react": {
                    meta: {
                        name: string;
                        version: string;
                    };
                    rules: {
                        "avoid-shorthand-boolean": _typescript_eslint_utils_ts_eslint.RuleModule<"avoidShorthandBoolean", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "avoid-shorthand-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"avoidShorthandFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "ensure-forward-ref-using-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"ensureForwardRefUsingRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "jsx-no-duplicate-props": _typescript_eslint_utils_ts_eslint.RuleModule<"jsxNoDuplicateProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "jsx-uses-vars": _typescript_eslint_utils_ts_eslint.RuleModule<"jsxUsesVars", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-access-state-in-setstate": _typescript_eslint_utils_ts_eslint.RuleModule<"noAccessStateInSetstate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-array-index-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noArrayIndexKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-count": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenCount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-for-each": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenForEach", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-map": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenMap", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-only": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenOnly", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-prop": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenProp", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-to-array": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenToArray", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-class-component": _typescript_eslint_utils_ts_eslint.RuleModule<"noClassComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-clone-element": _typescript_eslint_utils_ts_eslint.RuleModule<"noCloneElement", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-comment-textnodes": _typescript_eslint_utils_ts_eslint.RuleModule<"noCommentTextnodes", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-complex-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noComplexConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-component-will-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-component-will-receive-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillReceiveProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-create-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"noCreateRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-default-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noDefaultProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-direct-mutation-state": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectMutationState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-duplicate-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noDuplicateKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-implicit-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noImplicitKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-missing-component-display-name": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingComponentDisplayName", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-missing-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingKey" | "noMissingKeyWithFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-nested-components": _typescript_eslint_utils_ts_eslint.RuleModule<"nestedComponent" | "nestedComponentInProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-prop-types": _typescript_eslint_utils_ts_eslint.RuleModule<"noPropTypes", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-redundant-should-component-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantShouldComponentUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-set-state-in-component-did-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentDidMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-set-state-in-component-did-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentDidUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-set-state-in-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-string-refs": _typescript_eslint_utils_ts_eslint.RuleModule<"noStringRefs", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unsafe-component-will-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unsafe-component-will-receive-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillReceiveProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unsafe-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unstable-context-value": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnstableContextValue" | "noUnstableContextValueWithFunction" | "noUnstableContextValueWithIdentifier", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unstable-default-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnstableDefaultProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unused-class-component-members": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnusedClassComponentMembers", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unused-state": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnusedState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-useless-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"noUselessFragment" | "noUselessFragmentInBuiltIn", [{
                            allowExpressions: boolean;
                        }], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-destructuring-assignment": _typescript_eslint_utils_ts_eslint.RuleModule<"preferDestructuringAssignment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-react-namespace-import": _typescript_eslint_utils_ts_eslint.RuleModule<"preferReactNamespaceImport", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-read-only-props": _typescript_eslint_utils_ts_eslint.RuleModule<"preferReadOnlyProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-shorthand-boolean": _typescript_eslint_utils_ts_eslint.RuleModule<"preferShorthandBoolean", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-shorthand-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"preferShorthandFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-complicated-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noComplexConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                    DEFAULT_ESLINT_REACT_SETTINGS: {
                        readonly additionalHooks: {
                            readonly useLayoutEffect: ["useIsomorphicLayoutEffect"];
                        };
                        readonly polymorphicPropName: "as";
                        readonly skipImportCheck: false;
                        readonly version: "detect";
                    };
                };
                readonly "@eslint-react/debug": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "class-component": _typescript_eslint_utils_ts_eslint.RuleModule<"classComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "function-component": _typescript_eslint_utils_ts_eslint.RuleModule<"functionComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly hook: _typescript_eslint_utils_ts_eslint.RuleModule<"hook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "is-from-react": _typescript_eslint_utils_ts_eslint.RuleModule<"isFromReact", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "react-hooks": _typescript_eslint_utils_ts_eslint.RuleModule<"hook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                };
                readonly "@eslint-react/dom": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "no-children-in-void-dom-elements": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenInVoidDomElements", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-dangerously-set-innerhtml": _typescript_eslint_utils_ts_eslint.RuleModule<"noDangerouslySetInnerhtml", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-dangerously-set-innerhtml-with-children": _typescript_eslint_utils_ts_eslint.RuleModule<"noDangerouslySetInnerhtmlWithChildren", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-find-dom-node": _typescript_eslint_utils_ts_eslint.RuleModule<"noFindDomNode", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-missing-button-type": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingButtonType", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-missing-iframe-sandbox": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingIframeSandbox", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-namespace": _typescript_eslint_utils_ts_eslint.RuleModule<"noNamespace", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-render-return-value": _typescript_eslint_utils_ts_eslint.RuleModule<"noRenderReturnValue", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-script-url": _typescript_eslint_utils_ts_eslint.RuleModule<"noScriptUrl", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unknown-property": _typescript_eslint_utils_ts_eslint.RuleModule<string, [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unsafe-iframe-sandbox": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeIframeSandbox", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unsafe-target-blank": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeTargetBlank", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                    readonly DEFAULT_ESLINT_REACT_SETTINGS: {
                        readonly additionalComponents: [{
                            readonly name: "Link";
                            readonly as: "a";
                            readonly attributes: [{
                                readonly name: "to";
                                readonly as: "href";
                            }];
                        }];
                        readonly skipImportCheck: false;
                    };
                };
                readonly "@eslint-react/hooks-extra": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "no-direct-set-state-in-use-effect": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectSetStateInUseEffect", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-direct-set-state-in-use-layout-effect": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectSetStateInUseLayoutEffect", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-redundant-custom-hook": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantCustomHook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unnecessary-use-callback": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseCallback", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unnecessary-use-memo": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseMemo", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "prefer-use-state-lazy-initialization": _typescript_eslint_utils_ts_eslint.RuleModule<"preferUseStateLazyInitialization", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "ensure-custom-hooks-using-other-hooks": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantCustomHook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "ensure-use-memo-has-non-empty-deps": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseMemo", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                };
                readonly "@eslint-react/naming-convention": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "component-name": _typescript_eslint_utils_ts_eslint.RuleModule<"componentName", readonly [{
                            allowAllCaps?: boolean;
                            allowLeadingUnderscore?: boolean;
                            allowNamespace?: boolean;
                            excepts?: readonly string[];
                            rule?: "CONSTANT_CASE" | "PascalCase";
                        } | ("CONSTANT_CASE" | "PascalCase") | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly filename: _typescript_eslint_utils_ts_eslint.RuleModule<"filenameCaseMismatchSuggestion" | "filenameEmpty", readonly [{
                            excepts?: readonly string[];
                            extensions?: readonly string[];
                            rule?: "PascalCase" | "camelCase" | "kebab-case" | "snake_case";
                        } | ("PascalCase" | "camelCase" | "kebab-case" | "snake_case") | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "filename-extension": _typescript_eslint_utils_ts_eslint.RuleModule<"filenameExtensionInvalid" | "filenameExtensionUnexpected", readonly [{
                            allow?: "always" | "as-needed";
                            extensions?: readonly string[];
                        } | ("always" | "as-needed") | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "use-state": _typescript_eslint_utils_ts_eslint.RuleModule<"useState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                };
                readonly "@eslint-react/web-api": {
                    meta: {
                        name: string;
                        version: string;
                    };
                    rules: {
                        "no-leaked-event-listener": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedEventListenerInEffect" | "noLeakedEventListenerInLifecycle" | "noLeakedEventListenerOfInlineFunction", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-interval": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedIntervalInEffect" | "noLeakedIntervalInLifecycle" | "noLeakedIntervalNoIntervalId", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-resize-observer": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedResizeObserver" | "noLeakedResizeObserverInControlFlow" | "noLeakedResizeObserverNoFloatingInstance", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-timeout": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedTimeoutInEffect" | "noLeakedTimeoutInLifecycle" | "noLeakedTimeoutNoTimeoutId", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                    DEFAULT_ESLINT_REACT_SETTINGS: {
                        readonly skipImportCheck: true;
                    };
                };
            };
            readonly rules: {
                "@eslint-react/dom/no-children-in-void-dom-elements"?: "off";
                "@eslint-react/dom/no-dangerously-set-innerhtml"?: "off";
                "@eslint-react/dom/no-dangerously-set-innerhtml-with-children"?: "off";
                "@eslint-react/dom/no-find-dom-node"?: "off";
                "@eslint-react/dom/no-missing-button-type"?: "off";
                "@eslint-react/dom/no-missing-iframe-sandbox"?: "off";
                "@eslint-react/dom/no-namespace"?: "off";
                "@eslint-react/dom/no-render-return-value"?: "off";
                "@eslint-react/dom/no-script-url"?: "off";
                "@eslint-react/dom/no-unknown-property"?: "off";
                "@eslint-react/dom/no-unsafe-iframe-sandbox"?: "off";
                "@eslint-react/dom/no-unsafe-target-blank"?: "off";
            };
            readonly settings: {
                readonly "react-x": {
                    readonly additionalHooks: {
                        readonly useLayoutEffect: ["useIsomorphicLayoutEffect"];
                    };
                    readonly polymorphicPropName: "as";
                    readonly skipImportCheck: false;
                    readonly version: "detect";
                };
            };
        };
        readonly "disable-dom-legacy": {
            readonly plugins: readonly ["@eslint-react"];
            readonly rules: {
                "@eslint-react/dom/no-children-in-void-dom-elements"?: "off";
                "@eslint-react/dom/no-dangerously-set-innerhtml"?: "off";
                "@eslint-react/dom/no-dangerously-set-innerhtml-with-children"?: "off";
                "@eslint-react/dom/no-find-dom-node"?: "off";
                "@eslint-react/dom/no-missing-button-type"?: "off";
                "@eslint-react/dom/no-missing-iframe-sandbox"?: "off";
                "@eslint-react/dom/no-namespace"?: "off";
                "@eslint-react/dom/no-render-return-value"?: "off";
                "@eslint-react/dom/no-script-url"?: "off";
                "@eslint-react/dom/no-unknown-property"?: "off";
                "@eslint-react/dom/no-unsafe-iframe-sandbox"?: "off";
                "@eslint-react/dom/no-unsafe-target-blank"?: "off";
            };
            readonly settings: {
                readonly "react-x": {
                    readonly additionalHooks: {
                        readonly useLayoutEffect: ["useIsomorphicLayoutEffect"];
                    };
                    readonly polymorphicPropName: "as";
                    readonly skipImportCheck: false;
                    readonly version: "detect";
                };
            };
        };
        readonly "disable-web-api": {
            readonly plugins: {
                readonly "@eslint-react": {
                    meta: {
                        name: string;
                        version: string;
                    };
                    rules: {
                        "avoid-shorthand-boolean": _typescript_eslint_utils_ts_eslint.RuleModule<"avoidShorthandBoolean", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "avoid-shorthand-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"avoidShorthandFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "ensure-forward-ref-using-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"ensureForwardRefUsingRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "jsx-no-duplicate-props": _typescript_eslint_utils_ts_eslint.RuleModule<"jsxNoDuplicateProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "jsx-uses-vars": _typescript_eslint_utils_ts_eslint.RuleModule<"jsxUsesVars", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-access-state-in-setstate": _typescript_eslint_utils_ts_eslint.RuleModule<"noAccessStateInSetstate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-array-index-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noArrayIndexKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-count": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenCount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-for-each": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenForEach", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-map": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenMap", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-only": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenOnly", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-prop": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenProp", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-to-array": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenToArray", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-class-component": _typescript_eslint_utils_ts_eslint.RuleModule<"noClassComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-clone-element": _typescript_eslint_utils_ts_eslint.RuleModule<"noCloneElement", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-comment-textnodes": _typescript_eslint_utils_ts_eslint.RuleModule<"noCommentTextnodes", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-complex-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noComplexConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-component-will-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-component-will-receive-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillReceiveProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-create-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"noCreateRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-default-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noDefaultProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-direct-mutation-state": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectMutationState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-duplicate-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noDuplicateKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-implicit-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noImplicitKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-missing-component-display-name": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingComponentDisplayName", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-missing-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingKey" | "noMissingKeyWithFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-nested-components": _typescript_eslint_utils_ts_eslint.RuleModule<"nestedComponent" | "nestedComponentInProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-prop-types": _typescript_eslint_utils_ts_eslint.RuleModule<"noPropTypes", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-redundant-should-component-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantShouldComponentUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-set-state-in-component-did-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentDidMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-set-state-in-component-did-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentDidUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-set-state-in-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-string-refs": _typescript_eslint_utils_ts_eslint.RuleModule<"noStringRefs", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unsafe-component-will-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unsafe-component-will-receive-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillReceiveProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unsafe-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unstable-context-value": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnstableContextValue" | "noUnstableContextValueWithFunction" | "noUnstableContextValueWithIdentifier", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unstable-default-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnstableDefaultProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unused-class-component-members": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnusedClassComponentMembers", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unused-state": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnusedState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-useless-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"noUselessFragment" | "noUselessFragmentInBuiltIn", [{
                            allowExpressions: boolean;
                        }], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-destructuring-assignment": _typescript_eslint_utils_ts_eslint.RuleModule<"preferDestructuringAssignment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-react-namespace-import": _typescript_eslint_utils_ts_eslint.RuleModule<"preferReactNamespaceImport", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-read-only-props": _typescript_eslint_utils_ts_eslint.RuleModule<"preferReadOnlyProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-shorthand-boolean": _typescript_eslint_utils_ts_eslint.RuleModule<"preferShorthandBoolean", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-shorthand-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"preferShorthandFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-complicated-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noComplexConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                    DEFAULT_ESLINT_REACT_SETTINGS: {
                        readonly additionalHooks: {
                            readonly useLayoutEffect: ["useIsomorphicLayoutEffect"];
                        };
                        readonly polymorphicPropName: "as";
                        readonly skipImportCheck: false;
                        readonly version: "detect";
                    };
                };
                readonly "@eslint-react/debug": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "class-component": _typescript_eslint_utils_ts_eslint.RuleModule<"classComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "function-component": _typescript_eslint_utils_ts_eslint.RuleModule<"functionComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly hook: _typescript_eslint_utils_ts_eslint.RuleModule<"hook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "is-from-react": _typescript_eslint_utils_ts_eslint.RuleModule<"isFromReact", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "react-hooks": _typescript_eslint_utils_ts_eslint.RuleModule<"hook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                };
                readonly "@eslint-react/dom": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "no-children-in-void-dom-elements": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenInVoidDomElements", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-dangerously-set-innerhtml": _typescript_eslint_utils_ts_eslint.RuleModule<"noDangerouslySetInnerhtml", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-dangerously-set-innerhtml-with-children": _typescript_eslint_utils_ts_eslint.RuleModule<"noDangerouslySetInnerhtmlWithChildren", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-find-dom-node": _typescript_eslint_utils_ts_eslint.RuleModule<"noFindDomNode", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-missing-button-type": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingButtonType", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-missing-iframe-sandbox": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingIframeSandbox", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-namespace": _typescript_eslint_utils_ts_eslint.RuleModule<"noNamespace", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-render-return-value": _typescript_eslint_utils_ts_eslint.RuleModule<"noRenderReturnValue", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-script-url": _typescript_eslint_utils_ts_eslint.RuleModule<"noScriptUrl", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unknown-property": _typescript_eslint_utils_ts_eslint.RuleModule<string, [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unsafe-iframe-sandbox": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeIframeSandbox", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unsafe-target-blank": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeTargetBlank", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                    readonly DEFAULT_ESLINT_REACT_SETTINGS: {
                        readonly additionalComponents: [{
                            readonly name: "Link";
                            readonly as: "a";
                            readonly attributes: [{
                                readonly name: "to";
                                readonly as: "href";
                            }];
                        }];
                        readonly skipImportCheck: false;
                    };
                };
                readonly "@eslint-react/hooks-extra": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "no-direct-set-state-in-use-effect": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectSetStateInUseEffect", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-direct-set-state-in-use-layout-effect": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectSetStateInUseLayoutEffect", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-redundant-custom-hook": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantCustomHook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unnecessary-use-callback": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseCallback", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unnecessary-use-memo": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseMemo", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "prefer-use-state-lazy-initialization": _typescript_eslint_utils_ts_eslint.RuleModule<"preferUseStateLazyInitialization", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "ensure-custom-hooks-using-other-hooks": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantCustomHook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "ensure-use-memo-has-non-empty-deps": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseMemo", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                };
                readonly "@eslint-react/naming-convention": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "component-name": _typescript_eslint_utils_ts_eslint.RuleModule<"componentName", readonly [{
                            allowAllCaps?: boolean;
                            allowLeadingUnderscore?: boolean;
                            allowNamespace?: boolean;
                            excepts?: readonly string[];
                            rule?: "CONSTANT_CASE" | "PascalCase";
                        } | ("CONSTANT_CASE" | "PascalCase") | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly filename: _typescript_eslint_utils_ts_eslint.RuleModule<"filenameCaseMismatchSuggestion" | "filenameEmpty", readonly [{
                            excepts?: readonly string[];
                            extensions?: readonly string[];
                            rule?: "PascalCase" | "camelCase" | "kebab-case" | "snake_case";
                        } | ("PascalCase" | "camelCase" | "kebab-case" | "snake_case") | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "filename-extension": _typescript_eslint_utils_ts_eslint.RuleModule<"filenameExtensionInvalid" | "filenameExtensionUnexpected", readonly [{
                            allow?: "always" | "as-needed";
                            extensions?: readonly string[];
                        } | ("always" | "as-needed") | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "use-state": _typescript_eslint_utils_ts_eslint.RuleModule<"useState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                };
                readonly "@eslint-react/web-api": {
                    meta: {
                        name: string;
                        version: string;
                    };
                    rules: {
                        "no-leaked-event-listener": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedEventListenerInEffect" | "noLeakedEventListenerInLifecycle" | "noLeakedEventListenerOfInlineFunction", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-interval": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedIntervalInEffect" | "noLeakedIntervalInLifecycle" | "noLeakedIntervalNoIntervalId", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-resize-observer": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedResizeObserver" | "noLeakedResizeObserverInControlFlow" | "noLeakedResizeObserverNoFloatingInstance", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-timeout": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedTimeoutInEffect" | "noLeakedTimeoutInLifecycle" | "noLeakedTimeoutNoTimeoutId", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                    DEFAULT_ESLINT_REACT_SETTINGS: {
                        readonly skipImportCheck: true;
                    };
                };
            };
            readonly rules: {
                "@eslint-react/web-api/no-leaked-event-listener"?: "off";
                "@eslint-react/web-api/no-leaked-interval"?: "off";
                "@eslint-react/web-api/no-leaked-resize-observer"?: "off";
                "@eslint-react/web-api/no-leaked-timeout"?: "off";
            };
            readonly settings: {
                readonly "react-x": {
                    readonly additionalHooks: {
                        readonly useLayoutEffect: ["useIsomorphicLayoutEffect"];
                    };
                    readonly polymorphicPropName: "as";
                    readonly skipImportCheck: false;
                    readonly version: "detect";
                };
            };
        };
        readonly "disable-web-api-legacy": {
            readonly plugins: readonly ["@eslint-react"];
            readonly rules: {
                "@eslint-react/web-api/no-leaked-event-listener"?: "off";
                "@eslint-react/web-api/no-leaked-interval"?: "off";
                "@eslint-react/web-api/no-leaked-resize-observer"?: "off";
                "@eslint-react/web-api/no-leaked-timeout"?: "off";
            };
            readonly settings: {
                readonly "react-x": {
                    readonly additionalHooks: {
                        readonly useLayoutEffect: ["useIsomorphicLayoutEffect"];
                    };
                    readonly polymorphicPropName: "as";
                    readonly skipImportCheck: false;
                    readonly version: "detect";
                };
            };
        };
        readonly "disable-type-checked": {
            readonly plugins: {
                readonly "@eslint-react": {
                    meta: {
                        name: string;
                        version: string;
                    };
                    rules: {
                        "avoid-shorthand-boolean": _typescript_eslint_utils_ts_eslint.RuleModule<"avoidShorthandBoolean", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "avoid-shorthand-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"avoidShorthandFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "ensure-forward-ref-using-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"ensureForwardRefUsingRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "jsx-no-duplicate-props": _typescript_eslint_utils_ts_eslint.RuleModule<"jsxNoDuplicateProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "jsx-uses-vars": _typescript_eslint_utils_ts_eslint.RuleModule<"jsxUsesVars", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-access-state-in-setstate": _typescript_eslint_utils_ts_eslint.RuleModule<"noAccessStateInSetstate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-array-index-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noArrayIndexKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-count": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenCount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-for-each": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenForEach", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-map": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenMap", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-only": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenOnly", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-prop": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenProp", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-to-array": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenToArray", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-class-component": _typescript_eslint_utils_ts_eslint.RuleModule<"noClassComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-clone-element": _typescript_eslint_utils_ts_eslint.RuleModule<"noCloneElement", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-comment-textnodes": _typescript_eslint_utils_ts_eslint.RuleModule<"noCommentTextnodes", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-complex-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noComplexConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-component-will-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-component-will-receive-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillReceiveProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-create-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"noCreateRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-default-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noDefaultProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-direct-mutation-state": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectMutationState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-duplicate-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noDuplicateKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-implicit-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noImplicitKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-missing-component-display-name": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingComponentDisplayName", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-missing-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingKey" | "noMissingKeyWithFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-nested-components": _typescript_eslint_utils_ts_eslint.RuleModule<"nestedComponent" | "nestedComponentInProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-prop-types": _typescript_eslint_utils_ts_eslint.RuleModule<"noPropTypes", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-redundant-should-component-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantShouldComponentUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-set-state-in-component-did-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentDidMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-set-state-in-component-did-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentDidUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-set-state-in-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-string-refs": _typescript_eslint_utils_ts_eslint.RuleModule<"noStringRefs", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unsafe-component-will-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unsafe-component-will-receive-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillReceiveProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unsafe-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unstable-context-value": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnstableContextValue" | "noUnstableContextValueWithFunction" | "noUnstableContextValueWithIdentifier", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unstable-default-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnstableDefaultProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unused-class-component-members": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnusedClassComponentMembers", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unused-state": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnusedState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-useless-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"noUselessFragment" | "noUselessFragmentInBuiltIn", [{
                            allowExpressions: boolean;
                        }], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-destructuring-assignment": _typescript_eslint_utils_ts_eslint.RuleModule<"preferDestructuringAssignment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-react-namespace-import": _typescript_eslint_utils_ts_eslint.RuleModule<"preferReactNamespaceImport", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-read-only-props": _typescript_eslint_utils_ts_eslint.RuleModule<"preferReadOnlyProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-shorthand-boolean": _typescript_eslint_utils_ts_eslint.RuleModule<"preferShorthandBoolean", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-shorthand-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"preferShorthandFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-complicated-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noComplexConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                    DEFAULT_ESLINT_REACT_SETTINGS: {
                        readonly additionalHooks: {
                            readonly useLayoutEffect: ["useIsomorphicLayoutEffect"];
                        };
                        readonly polymorphicPropName: "as";
                        readonly skipImportCheck: false;
                        readonly version: "detect";
                    };
                };
                readonly "@eslint-react/debug": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "class-component": _typescript_eslint_utils_ts_eslint.RuleModule<"classComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "function-component": _typescript_eslint_utils_ts_eslint.RuleModule<"functionComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly hook: _typescript_eslint_utils_ts_eslint.RuleModule<"hook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "is-from-react": _typescript_eslint_utils_ts_eslint.RuleModule<"isFromReact", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "react-hooks": _typescript_eslint_utils_ts_eslint.RuleModule<"hook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                };
                readonly "@eslint-react/dom": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "no-children-in-void-dom-elements": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenInVoidDomElements", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-dangerously-set-innerhtml": _typescript_eslint_utils_ts_eslint.RuleModule<"noDangerouslySetInnerhtml", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-dangerously-set-innerhtml-with-children": _typescript_eslint_utils_ts_eslint.RuleModule<"noDangerouslySetInnerhtmlWithChildren", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-find-dom-node": _typescript_eslint_utils_ts_eslint.RuleModule<"noFindDomNode", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-missing-button-type": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingButtonType", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-missing-iframe-sandbox": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingIframeSandbox", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-namespace": _typescript_eslint_utils_ts_eslint.RuleModule<"noNamespace", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-render-return-value": _typescript_eslint_utils_ts_eslint.RuleModule<"noRenderReturnValue", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-script-url": _typescript_eslint_utils_ts_eslint.RuleModule<"noScriptUrl", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unknown-property": _typescript_eslint_utils_ts_eslint.RuleModule<string, [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unsafe-iframe-sandbox": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeIframeSandbox", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unsafe-target-blank": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeTargetBlank", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                    readonly DEFAULT_ESLINT_REACT_SETTINGS: {
                        readonly additionalComponents: [{
                            readonly name: "Link";
                            readonly as: "a";
                            readonly attributes: [{
                                readonly name: "to";
                                readonly as: "href";
                            }];
                        }];
                        readonly skipImportCheck: false;
                    };
                };
                readonly "@eslint-react/hooks-extra": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "no-direct-set-state-in-use-effect": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectSetStateInUseEffect", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-direct-set-state-in-use-layout-effect": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectSetStateInUseLayoutEffect", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-redundant-custom-hook": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantCustomHook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unnecessary-use-callback": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseCallback", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unnecessary-use-memo": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseMemo", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "prefer-use-state-lazy-initialization": _typescript_eslint_utils_ts_eslint.RuleModule<"preferUseStateLazyInitialization", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "ensure-custom-hooks-using-other-hooks": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantCustomHook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "ensure-use-memo-has-non-empty-deps": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseMemo", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                };
                readonly "@eslint-react/naming-convention": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "component-name": _typescript_eslint_utils_ts_eslint.RuleModule<"componentName", readonly [{
                            allowAllCaps?: boolean;
                            allowLeadingUnderscore?: boolean;
                            allowNamespace?: boolean;
                            excepts?: readonly string[];
                            rule?: "CONSTANT_CASE" | "PascalCase";
                        } | ("CONSTANT_CASE" | "PascalCase") | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly filename: _typescript_eslint_utils_ts_eslint.RuleModule<"filenameCaseMismatchSuggestion" | "filenameEmpty", readonly [{
                            excepts?: readonly string[];
                            extensions?: readonly string[];
                            rule?: "PascalCase" | "camelCase" | "kebab-case" | "snake_case";
                        } | ("PascalCase" | "camelCase" | "kebab-case" | "snake_case") | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "filename-extension": _typescript_eslint_utils_ts_eslint.RuleModule<"filenameExtensionInvalid" | "filenameExtensionUnexpected", readonly [{
                            allow?: "always" | "as-needed";
                            extensions?: readonly string[];
                        } | ("always" | "as-needed") | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "use-state": _typescript_eslint_utils_ts_eslint.RuleModule<"useState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                };
                readonly "@eslint-react/web-api": {
                    meta: {
                        name: string;
                        version: string;
                    };
                    rules: {
                        "no-leaked-event-listener": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedEventListenerInEffect" | "noLeakedEventListenerInLifecycle" | "noLeakedEventListenerOfInlineFunction", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-interval": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedIntervalInEffect" | "noLeakedIntervalInLifecycle" | "noLeakedIntervalNoIntervalId", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-resize-observer": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedResizeObserver" | "noLeakedResizeObserverInControlFlow" | "noLeakedResizeObserverNoFloatingInstance", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-timeout": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedTimeoutInEffect" | "noLeakedTimeoutInLifecycle" | "noLeakedTimeoutNoTimeoutId", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                    DEFAULT_ESLINT_REACT_SETTINGS: {
                        readonly skipImportCheck: true;
                    };
                };
            };
            readonly rules: {
                [x: `@eslint-react/${string}`]: _eslint_react_types.RuleDeclaration;
            };
            readonly settings: {
                readonly "react-x": {
                    readonly additionalHooks: {
                        readonly useLayoutEffect: ["useIsomorphicLayoutEffect"];
                    };
                    readonly polymorphicPropName: "as";
                    readonly skipImportCheck: false;
                    readonly version: "detect";
                };
            };
        };
        readonly "disable-type-checked-legacy": {
            readonly plugins: readonly ["@eslint-react"];
            readonly rules: {
                [x: `@eslint-react/${string}`]: _eslint_react_types.RuleDeclaration;
            };
            readonly settings: {
                readonly "react-x": {
                    readonly additionalHooks: {
                        readonly useLayoutEffect: ["useIsomorphicLayoutEffect"];
                    };
                    readonly polymorphicPropName: "as";
                    readonly skipImportCheck: false;
                    readonly version: "detect";
                };
            };
        };
        readonly all: {
            readonly plugins: {
                readonly "@eslint-react": {
                    meta: {
                        name: string;
                        version: string;
                    };
                    rules: {
                        "avoid-shorthand-boolean": _typescript_eslint_utils_ts_eslint.RuleModule<"avoidShorthandBoolean", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "avoid-shorthand-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"avoidShorthandFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "ensure-forward-ref-using-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"ensureForwardRefUsingRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "jsx-no-duplicate-props": _typescript_eslint_utils_ts_eslint.RuleModule<"jsxNoDuplicateProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "jsx-uses-vars": _typescript_eslint_utils_ts_eslint.RuleModule<"jsxUsesVars", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-access-state-in-setstate": _typescript_eslint_utils_ts_eslint.RuleModule<"noAccessStateInSetstate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-array-index-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noArrayIndexKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-count": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenCount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-for-each": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenForEach", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-map": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenMap", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-only": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenOnly", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-prop": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenProp", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-to-array": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenToArray", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-class-component": _typescript_eslint_utils_ts_eslint.RuleModule<"noClassComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-clone-element": _typescript_eslint_utils_ts_eslint.RuleModule<"noCloneElement", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-comment-textnodes": _typescript_eslint_utils_ts_eslint.RuleModule<"noCommentTextnodes", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-complex-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noComplexConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-component-will-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-component-will-receive-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillReceiveProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-create-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"noCreateRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-default-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noDefaultProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-direct-mutation-state": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectMutationState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-duplicate-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noDuplicateKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-implicit-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noImplicitKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-missing-component-display-name": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingComponentDisplayName", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-missing-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingKey" | "noMissingKeyWithFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-nested-components": _typescript_eslint_utils_ts_eslint.RuleModule<"nestedComponent" | "nestedComponentInProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-prop-types": _typescript_eslint_utils_ts_eslint.RuleModule<"noPropTypes", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-redundant-should-component-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantShouldComponentUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-set-state-in-component-did-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentDidMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-set-state-in-component-did-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentDidUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-set-state-in-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-string-refs": _typescript_eslint_utils_ts_eslint.RuleModule<"noStringRefs", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unsafe-component-will-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unsafe-component-will-receive-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillReceiveProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unsafe-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unstable-context-value": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnstableContextValue" | "noUnstableContextValueWithFunction" | "noUnstableContextValueWithIdentifier", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unstable-default-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnstableDefaultProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unused-class-component-members": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnusedClassComponentMembers", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unused-state": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnusedState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-useless-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"noUselessFragment" | "noUselessFragmentInBuiltIn", [{
                            allowExpressions: boolean;
                        }], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-destructuring-assignment": _typescript_eslint_utils_ts_eslint.RuleModule<"preferDestructuringAssignment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-react-namespace-import": _typescript_eslint_utils_ts_eslint.RuleModule<"preferReactNamespaceImport", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-read-only-props": _typescript_eslint_utils_ts_eslint.RuleModule<"preferReadOnlyProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-shorthand-boolean": _typescript_eslint_utils_ts_eslint.RuleModule<"preferShorthandBoolean", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-shorthand-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"preferShorthandFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-complicated-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noComplexConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                    DEFAULT_ESLINT_REACT_SETTINGS: {
                        readonly additionalHooks: {
                            readonly useLayoutEffect: ["useIsomorphicLayoutEffect"];
                        };
                        readonly polymorphicPropName: "as";
                        readonly skipImportCheck: false;
                        readonly version: "detect";
                    };
                };
                readonly "@eslint-react/debug": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "class-component": _typescript_eslint_utils_ts_eslint.RuleModule<"classComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "function-component": _typescript_eslint_utils_ts_eslint.RuleModule<"functionComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly hook: _typescript_eslint_utils_ts_eslint.RuleModule<"hook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "is-from-react": _typescript_eslint_utils_ts_eslint.RuleModule<"isFromReact", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "react-hooks": _typescript_eslint_utils_ts_eslint.RuleModule<"hook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                };
                readonly "@eslint-react/dom": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "no-children-in-void-dom-elements": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenInVoidDomElements", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-dangerously-set-innerhtml": _typescript_eslint_utils_ts_eslint.RuleModule<"noDangerouslySetInnerhtml", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-dangerously-set-innerhtml-with-children": _typescript_eslint_utils_ts_eslint.RuleModule<"noDangerouslySetInnerhtmlWithChildren", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-find-dom-node": _typescript_eslint_utils_ts_eslint.RuleModule<"noFindDomNode", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-missing-button-type": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingButtonType", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-missing-iframe-sandbox": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingIframeSandbox", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-namespace": _typescript_eslint_utils_ts_eslint.RuleModule<"noNamespace", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-render-return-value": _typescript_eslint_utils_ts_eslint.RuleModule<"noRenderReturnValue", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-script-url": _typescript_eslint_utils_ts_eslint.RuleModule<"noScriptUrl", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unknown-property": _typescript_eslint_utils_ts_eslint.RuleModule<string, [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unsafe-iframe-sandbox": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeIframeSandbox", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unsafe-target-blank": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeTargetBlank", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                    readonly DEFAULT_ESLINT_REACT_SETTINGS: {
                        readonly additionalComponents: [{
                            readonly name: "Link";
                            readonly as: "a";
                            readonly attributes: [{
                                readonly name: "to";
                                readonly as: "href";
                            }];
                        }];
                        readonly skipImportCheck: false;
                    };
                };
                readonly "@eslint-react/hooks-extra": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "no-direct-set-state-in-use-effect": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectSetStateInUseEffect", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-direct-set-state-in-use-layout-effect": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectSetStateInUseLayoutEffect", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-redundant-custom-hook": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantCustomHook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unnecessary-use-callback": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseCallback", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unnecessary-use-memo": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseMemo", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "prefer-use-state-lazy-initialization": _typescript_eslint_utils_ts_eslint.RuleModule<"preferUseStateLazyInitialization", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "ensure-custom-hooks-using-other-hooks": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantCustomHook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "ensure-use-memo-has-non-empty-deps": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseMemo", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                };
                readonly "@eslint-react/naming-convention": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "component-name": _typescript_eslint_utils_ts_eslint.RuleModule<"componentName", readonly [{
                            allowAllCaps?: boolean;
                            allowLeadingUnderscore?: boolean;
                            allowNamespace?: boolean;
                            excepts?: readonly string[];
                            rule?: "CONSTANT_CASE" | "PascalCase";
                        } | ("CONSTANT_CASE" | "PascalCase") | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly filename: _typescript_eslint_utils_ts_eslint.RuleModule<"filenameCaseMismatchSuggestion" | "filenameEmpty", readonly [{
                            excepts?: readonly string[];
                            extensions?: readonly string[];
                            rule?: "PascalCase" | "camelCase" | "kebab-case" | "snake_case";
                        } | ("PascalCase" | "camelCase" | "kebab-case" | "snake_case") | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "filename-extension": _typescript_eslint_utils_ts_eslint.RuleModule<"filenameExtensionInvalid" | "filenameExtensionUnexpected", readonly [{
                            allow?: "always" | "as-needed";
                            extensions?: readonly string[];
                        } | ("always" | "as-needed") | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "use-state": _typescript_eslint_utils_ts_eslint.RuleModule<"useState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                };
                readonly "@eslint-react/web-api": {
                    meta: {
                        name: string;
                        version: string;
                    };
                    rules: {
                        "no-leaked-event-listener": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedEventListenerInEffect" | "noLeakedEventListenerInLifecycle" | "noLeakedEventListenerOfInlineFunction", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-interval": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedIntervalInEffect" | "noLeakedIntervalInLifecycle" | "noLeakedIntervalNoIntervalId", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-resize-observer": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedResizeObserver" | "noLeakedResizeObserverInControlFlow" | "noLeakedResizeObserverNoFloatingInstance", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-timeout": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedTimeoutInEffect" | "noLeakedTimeoutInLifecycle" | "noLeakedTimeoutNoTimeoutId", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                    DEFAULT_ESLINT_REACT_SETTINGS: {
                        readonly skipImportCheck: true;
                    };
                };
            };
            readonly rules: {
                readonly "@eslint-react/avoid-shorthand-boolean": "warn";
                readonly "@eslint-react/avoid-shorthand-fragment": "warn";
                readonly "@eslint-react/ensure-forward-ref-using-ref": "warn";
                readonly "@eslint-react/jsx-no-duplicate-props": "warn";
                readonly "@eslint-react/jsx-uses-vars": "warn";
                readonly "@eslint-react/no-access-state-in-setstate": "error";
                readonly "@eslint-react/no-array-index-key": "warn";
                readonly "@eslint-react/no-children-count": "warn";
                readonly "@eslint-react/no-children-for-each": "warn";
                readonly "@eslint-react/no-children-map": "warn";
                readonly "@eslint-react/no-children-only": "warn";
                readonly "@eslint-react/no-children-prop": "warn";
                readonly "@eslint-react/no-children-to-array": "warn";
                readonly "@eslint-react/no-class-component": "warn";
                readonly "@eslint-react/no-clone-element": "warn";
                readonly "@eslint-react/no-comment-textnodes": "warn";
                readonly "@eslint-react/no-complex-conditional-rendering": "warn";
                readonly "@eslint-react/no-component-will-mount": "error";
                readonly "@eslint-react/no-component-will-receive-props": "error";
                readonly "@eslint-react/no-component-will-update": "error";
                readonly "@eslint-react/no-create-ref": "error";
                readonly "@eslint-react/no-default-props": "error";
                readonly "@eslint-react/no-direct-mutation-state": "error";
                readonly "@eslint-react/no-duplicate-key": "error";
                readonly "@eslint-react/no-implicit-key": "warn";
                readonly "@eslint-react/no-missing-component-display-name": "warn";
                readonly "@eslint-react/no-missing-key": "error";
                readonly "@eslint-react/no-nested-components": "error";
                readonly "@eslint-react/no-prop-types": "error";
                readonly "@eslint-react/no-redundant-should-component-update": "error";
                readonly "@eslint-react/no-set-state-in-component-did-mount": "warn";
                readonly "@eslint-react/no-set-state-in-component-did-update": "warn";
                readonly "@eslint-react/no-set-state-in-component-will-update": "warn";
                readonly "@eslint-react/no-string-refs": "error";
                readonly "@eslint-react/no-unsafe-component-will-mount": "warn";
                readonly "@eslint-react/no-unsafe-component-will-receive-props": "warn";
                readonly "@eslint-react/no-unsafe-component-will-update": "warn";
                readonly "@eslint-react/no-unstable-context-value": "warn";
                readonly "@eslint-react/no-unstable-default-props": "warn";
                readonly "@eslint-react/no-unused-class-component-members": "warn";
                readonly "@eslint-react/no-unused-state": "warn";
                readonly "@eslint-react/no-useless-fragment": "warn";
                readonly "@eslint-react/prefer-destructuring-assignment": "warn";
                readonly "@eslint-react/prefer-shorthand-boolean": "warn";
                readonly "@eslint-react/prefer-shorthand-fragment": "warn";
                readonly "@eslint-react/dom/no-children-in-void-dom-elements": "warn";
                readonly "@eslint-react/dom/no-dangerously-set-innerhtml": "warn";
                readonly "@eslint-react/dom/no-dangerously-set-innerhtml-with-children": "error";
                readonly "@eslint-react/dom/no-find-dom-node": "error";
                readonly "@eslint-react/dom/no-missing-button-type": "warn";
                readonly "@eslint-react/dom/no-missing-iframe-sandbox": "warn";
                readonly "@eslint-react/dom/no-namespace": "error";
                readonly "@eslint-react/dom/no-render-return-value": "error";
                readonly "@eslint-react/dom/no-script-url": "warn";
                readonly "@eslint-react/dom/no-unknown-property": "warn";
                readonly "@eslint-react/dom/no-unsafe-iframe-sandbox": "warn";
                readonly "@eslint-react/dom/no-unsafe-target-blank": "warn";
                readonly "@eslint-react/web-api/no-leaked-event-listener": "warn";
                readonly "@eslint-react/web-api/no-leaked-interval": "warn";
                readonly "@eslint-react/web-api/no-leaked-resize-observer": "warn";
                readonly "@eslint-react/web-api/no-leaked-timeout": "warn";
                readonly "@eslint-react/hooks-extra/no-direct-set-state-in-use-effect": "warn";
                readonly "@eslint-react/hooks-extra/no-direct-set-state-in-use-layout-effect": "warn";
                readonly "@eslint-react/hooks-extra/no-redundant-custom-hook": "warn";
                readonly "@eslint-react/hooks-extra/no-unnecessary-use-callback": "warn";
                readonly "@eslint-react/hooks-extra/no-unnecessary-use-memo": "warn";
                readonly "@eslint-react/hooks-extra/prefer-use-state-lazy-initialization": "warn";
                readonly "@eslint-react/naming-convention/component-name": "warn";
                readonly "@eslint-react/naming-convention/filename": "warn";
                readonly "@eslint-react/naming-convention/filename-extension": "warn";
                readonly "@eslint-react/naming-convention/use-state": "warn";
            };
            readonly settings: {
                readonly "react-x": {
                    readonly additionalHooks: {
                        readonly useLayoutEffect: ["useIsomorphicLayoutEffect"];
                    };
                    readonly polymorphicPropName: "as";
                    readonly skipImportCheck: false;
                    readonly version: "detect";
                };
            };
        };
        readonly "all-legacy": {
            readonly plugins: readonly ["@eslint-react"];
            readonly rules: {
                readonly "@eslint-react/avoid-shorthand-boolean": "warn";
                readonly "@eslint-react/avoid-shorthand-fragment": "warn";
                readonly "@eslint-react/ensure-forward-ref-using-ref": "warn";
                readonly "@eslint-react/jsx-no-duplicate-props": "warn";
                readonly "@eslint-react/jsx-uses-vars": "warn";
                readonly "@eslint-react/no-access-state-in-setstate": "error";
                readonly "@eslint-react/no-array-index-key": "warn";
                readonly "@eslint-react/no-children-count": "warn";
                readonly "@eslint-react/no-children-for-each": "warn";
                readonly "@eslint-react/no-children-map": "warn";
                readonly "@eslint-react/no-children-only": "warn";
                readonly "@eslint-react/no-children-prop": "warn";
                readonly "@eslint-react/no-children-to-array": "warn";
                readonly "@eslint-react/no-class-component": "warn";
                readonly "@eslint-react/no-clone-element": "warn";
                readonly "@eslint-react/no-comment-textnodes": "warn";
                readonly "@eslint-react/no-complex-conditional-rendering": "warn";
                readonly "@eslint-react/no-component-will-mount": "error";
                readonly "@eslint-react/no-component-will-receive-props": "error";
                readonly "@eslint-react/no-component-will-update": "error";
                readonly "@eslint-react/no-create-ref": "error";
                readonly "@eslint-react/no-default-props": "error";
                readonly "@eslint-react/no-direct-mutation-state": "error";
                readonly "@eslint-react/no-duplicate-key": "error";
                readonly "@eslint-react/no-implicit-key": "warn";
                readonly "@eslint-react/no-missing-component-display-name": "warn";
                readonly "@eslint-react/no-missing-key": "error";
                readonly "@eslint-react/no-nested-components": "error";
                readonly "@eslint-react/no-prop-types": "error";
                readonly "@eslint-react/no-redundant-should-component-update": "error";
                readonly "@eslint-react/no-set-state-in-component-did-mount": "warn";
                readonly "@eslint-react/no-set-state-in-component-did-update": "warn";
                readonly "@eslint-react/no-set-state-in-component-will-update": "warn";
                readonly "@eslint-react/no-string-refs": "error";
                readonly "@eslint-react/no-unsafe-component-will-mount": "warn";
                readonly "@eslint-react/no-unsafe-component-will-receive-props": "warn";
                readonly "@eslint-react/no-unsafe-component-will-update": "warn";
                readonly "@eslint-react/no-unstable-context-value": "warn";
                readonly "@eslint-react/no-unstable-default-props": "warn";
                readonly "@eslint-react/no-unused-class-component-members": "warn";
                readonly "@eslint-react/no-unused-state": "warn";
                readonly "@eslint-react/no-useless-fragment": "warn";
                readonly "@eslint-react/prefer-destructuring-assignment": "warn";
                readonly "@eslint-react/prefer-shorthand-boolean": "warn";
                readonly "@eslint-react/prefer-shorthand-fragment": "warn";
                readonly "@eslint-react/dom/no-children-in-void-dom-elements": "warn";
                readonly "@eslint-react/dom/no-dangerously-set-innerhtml": "warn";
                readonly "@eslint-react/dom/no-dangerously-set-innerhtml-with-children": "error";
                readonly "@eslint-react/dom/no-find-dom-node": "error";
                readonly "@eslint-react/dom/no-missing-button-type": "warn";
                readonly "@eslint-react/dom/no-missing-iframe-sandbox": "warn";
                readonly "@eslint-react/dom/no-namespace": "error";
                readonly "@eslint-react/dom/no-render-return-value": "error";
                readonly "@eslint-react/dom/no-script-url": "warn";
                readonly "@eslint-react/dom/no-unknown-property": "warn";
                readonly "@eslint-react/dom/no-unsafe-iframe-sandbox": "warn";
                readonly "@eslint-react/dom/no-unsafe-target-blank": "warn";
                readonly "@eslint-react/web-api/no-leaked-event-listener": "warn";
                readonly "@eslint-react/web-api/no-leaked-interval": "warn";
                readonly "@eslint-react/web-api/no-leaked-resize-observer": "warn";
                readonly "@eslint-react/web-api/no-leaked-timeout": "warn";
                readonly "@eslint-react/hooks-extra/no-direct-set-state-in-use-effect": "warn";
                readonly "@eslint-react/hooks-extra/no-direct-set-state-in-use-layout-effect": "warn";
                readonly "@eslint-react/hooks-extra/no-redundant-custom-hook": "warn";
                readonly "@eslint-react/hooks-extra/no-unnecessary-use-callback": "warn";
                readonly "@eslint-react/hooks-extra/no-unnecessary-use-memo": "warn";
                readonly "@eslint-react/hooks-extra/prefer-use-state-lazy-initialization": "warn";
                readonly "@eslint-react/naming-convention/component-name": "warn";
                readonly "@eslint-react/naming-convention/filename": "warn";
                readonly "@eslint-react/naming-convention/filename-extension": "warn";
                readonly "@eslint-react/naming-convention/use-state": "warn";
            };
            readonly settings: {
                readonly "react-x": {
                    readonly additionalHooks: {
                        readonly useLayoutEffect: ["useIsomorphicLayoutEffect"];
                    };
                    readonly polymorphicPropName: "as";
                    readonly skipImportCheck: false;
                    readonly version: "detect";
                };
            };
        };
        readonly off: {
            readonly plugins: {
                readonly "@eslint-react": {
                    meta: {
                        name: string;
                        version: string;
                    };
                    rules: {
                        "avoid-shorthand-boolean": _typescript_eslint_utils_ts_eslint.RuleModule<"avoidShorthandBoolean", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "avoid-shorthand-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"avoidShorthandFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "ensure-forward-ref-using-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"ensureForwardRefUsingRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "jsx-no-duplicate-props": _typescript_eslint_utils_ts_eslint.RuleModule<"jsxNoDuplicateProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "jsx-uses-vars": _typescript_eslint_utils_ts_eslint.RuleModule<"jsxUsesVars", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-access-state-in-setstate": _typescript_eslint_utils_ts_eslint.RuleModule<"noAccessStateInSetstate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-array-index-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noArrayIndexKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-count": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenCount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-for-each": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenForEach", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-map": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenMap", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-only": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenOnly", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-prop": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenProp", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-to-array": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenToArray", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-class-component": _typescript_eslint_utils_ts_eslint.RuleModule<"noClassComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-clone-element": _typescript_eslint_utils_ts_eslint.RuleModule<"noCloneElement", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-comment-textnodes": _typescript_eslint_utils_ts_eslint.RuleModule<"noCommentTextnodes", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-complex-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noComplexConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-component-will-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-component-will-receive-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillReceiveProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-create-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"noCreateRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-default-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noDefaultProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-direct-mutation-state": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectMutationState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-duplicate-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noDuplicateKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-implicit-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noImplicitKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-missing-component-display-name": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingComponentDisplayName", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-missing-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingKey" | "noMissingKeyWithFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-nested-components": _typescript_eslint_utils_ts_eslint.RuleModule<"nestedComponent" | "nestedComponentInProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-prop-types": _typescript_eslint_utils_ts_eslint.RuleModule<"noPropTypes", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-redundant-should-component-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantShouldComponentUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-set-state-in-component-did-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentDidMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-set-state-in-component-did-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentDidUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-set-state-in-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-string-refs": _typescript_eslint_utils_ts_eslint.RuleModule<"noStringRefs", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unsafe-component-will-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unsafe-component-will-receive-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillReceiveProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unsafe-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unstable-context-value": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnstableContextValue" | "noUnstableContextValueWithFunction" | "noUnstableContextValueWithIdentifier", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unstable-default-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnstableDefaultProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unused-class-component-members": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnusedClassComponentMembers", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unused-state": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnusedState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-useless-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"noUselessFragment" | "noUselessFragmentInBuiltIn", [{
                            allowExpressions: boolean;
                        }], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-destructuring-assignment": _typescript_eslint_utils_ts_eslint.RuleModule<"preferDestructuringAssignment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-react-namespace-import": _typescript_eslint_utils_ts_eslint.RuleModule<"preferReactNamespaceImport", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-read-only-props": _typescript_eslint_utils_ts_eslint.RuleModule<"preferReadOnlyProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-shorthand-boolean": _typescript_eslint_utils_ts_eslint.RuleModule<"preferShorthandBoolean", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-shorthand-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"preferShorthandFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-complicated-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noComplexConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                    DEFAULT_ESLINT_REACT_SETTINGS: {
                        readonly additionalHooks: {
                            readonly useLayoutEffect: ["useIsomorphicLayoutEffect"];
                        };
                        readonly polymorphicPropName: "as";
                        readonly skipImportCheck: false;
                        readonly version: "detect";
                    };
                };
                readonly "@eslint-react/debug": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "class-component": _typescript_eslint_utils_ts_eslint.RuleModule<"classComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "function-component": _typescript_eslint_utils_ts_eslint.RuleModule<"functionComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly hook: _typescript_eslint_utils_ts_eslint.RuleModule<"hook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "is-from-react": _typescript_eslint_utils_ts_eslint.RuleModule<"isFromReact", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "react-hooks": _typescript_eslint_utils_ts_eslint.RuleModule<"hook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                };
                readonly "@eslint-react/dom": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "no-children-in-void-dom-elements": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenInVoidDomElements", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-dangerously-set-innerhtml": _typescript_eslint_utils_ts_eslint.RuleModule<"noDangerouslySetInnerhtml", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-dangerously-set-innerhtml-with-children": _typescript_eslint_utils_ts_eslint.RuleModule<"noDangerouslySetInnerhtmlWithChildren", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-find-dom-node": _typescript_eslint_utils_ts_eslint.RuleModule<"noFindDomNode", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-missing-button-type": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingButtonType", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-missing-iframe-sandbox": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingIframeSandbox", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-namespace": _typescript_eslint_utils_ts_eslint.RuleModule<"noNamespace", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-render-return-value": _typescript_eslint_utils_ts_eslint.RuleModule<"noRenderReturnValue", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-script-url": _typescript_eslint_utils_ts_eslint.RuleModule<"noScriptUrl", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unknown-property": _typescript_eslint_utils_ts_eslint.RuleModule<string, [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unsafe-iframe-sandbox": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeIframeSandbox", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unsafe-target-blank": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeTargetBlank", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                    readonly DEFAULT_ESLINT_REACT_SETTINGS: {
                        readonly additionalComponents: [{
                            readonly name: "Link";
                            readonly as: "a";
                            readonly attributes: [{
                                readonly name: "to";
                                readonly as: "href";
                            }];
                        }];
                        readonly skipImportCheck: false;
                    };
                };
                readonly "@eslint-react/hooks-extra": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "no-direct-set-state-in-use-effect": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectSetStateInUseEffect", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-direct-set-state-in-use-layout-effect": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectSetStateInUseLayoutEffect", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-redundant-custom-hook": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantCustomHook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unnecessary-use-callback": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseCallback", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unnecessary-use-memo": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseMemo", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "prefer-use-state-lazy-initialization": _typescript_eslint_utils_ts_eslint.RuleModule<"preferUseStateLazyInitialization", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "ensure-custom-hooks-using-other-hooks": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantCustomHook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "ensure-use-memo-has-non-empty-deps": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseMemo", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                };
                readonly "@eslint-react/naming-convention": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "component-name": _typescript_eslint_utils_ts_eslint.RuleModule<"componentName", readonly [{
                            allowAllCaps?: boolean;
                            allowLeadingUnderscore?: boolean;
                            allowNamespace?: boolean;
                            excepts?: readonly string[];
                            rule?: "CONSTANT_CASE" | "PascalCase";
                        } | ("CONSTANT_CASE" | "PascalCase") | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly filename: _typescript_eslint_utils_ts_eslint.RuleModule<"filenameCaseMismatchSuggestion" | "filenameEmpty", readonly [{
                            excepts?: readonly string[];
                            extensions?: readonly string[];
                            rule?: "PascalCase" | "camelCase" | "kebab-case" | "snake_case";
                        } | ("PascalCase" | "camelCase" | "kebab-case" | "snake_case") | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "filename-extension": _typescript_eslint_utils_ts_eslint.RuleModule<"filenameExtensionInvalid" | "filenameExtensionUnexpected", readonly [{
                            allow?: "always" | "as-needed";
                            extensions?: readonly string[];
                        } | ("always" | "as-needed") | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "use-state": _typescript_eslint_utils_ts_eslint.RuleModule<"useState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                };
                readonly "@eslint-react/web-api": {
                    meta: {
                        name: string;
                        version: string;
                    };
                    rules: {
                        "no-leaked-event-listener": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedEventListenerInEffect" | "noLeakedEventListenerInLifecycle" | "noLeakedEventListenerOfInlineFunction", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-interval": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedIntervalInEffect" | "noLeakedIntervalInLifecycle" | "noLeakedIntervalNoIntervalId", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-resize-observer": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedResizeObserver" | "noLeakedResizeObserverInControlFlow" | "noLeakedResizeObserverNoFloatingInstance", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-timeout": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedTimeoutInEffect" | "noLeakedTimeoutInLifecycle" | "noLeakedTimeoutNoTimeoutId", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                    DEFAULT_ESLINT_REACT_SETTINGS: {
                        readonly skipImportCheck: true;
                    };
                };
            };
            readonly rules: {
                readonly "@eslint-react/avoid-shorthand-boolean"?: "off";
                readonly "@eslint-react/avoid-shorthand-fragment"?: "off";
                readonly "@eslint-react/ensure-forward-ref-using-ref"?: "off";
                readonly "@eslint-react/jsx-no-duplicate-props"?: "off";
                readonly "@eslint-react/jsx-uses-vars"?: "off";
                readonly "@eslint-react/no-access-state-in-setstate"?: "off";
                readonly "@eslint-react/no-array-index-key"?: "off";
                readonly "@eslint-react/no-children-count"?: "off";
                readonly "@eslint-react/no-children-for-each"?: "off";
                readonly "@eslint-react/no-children-map"?: "off";
                readonly "@eslint-react/no-children-only"?: "off";
                readonly "@eslint-react/no-children-prop"?: "off";
                readonly "@eslint-react/no-children-to-array"?: "off";
                readonly "@eslint-react/no-class-component"?: "off";
                readonly "@eslint-react/no-clone-element"?: "off";
                readonly "@eslint-react/no-comment-textnodes"?: "off";
                readonly "@eslint-react/no-complex-conditional-rendering"?: "off";
                readonly "@eslint-react/no-component-will-mount"?: "off";
                readonly "@eslint-react/no-component-will-receive-props"?: "off";
                readonly "@eslint-react/no-component-will-update"?: "off";
                readonly "@eslint-react/no-create-ref"?: "off";
                readonly "@eslint-react/no-default-props"?: "off";
                readonly "@eslint-react/no-direct-mutation-state"?: "off";
                readonly "@eslint-react/no-duplicate-key"?: "off";
                readonly "@eslint-react/no-implicit-key"?: "off";
                readonly "@eslint-react/no-missing-component-display-name"?: "off";
                readonly "@eslint-react/no-missing-key"?: "off";
                readonly "@eslint-react/no-nested-components"?: "off";
                readonly "@eslint-react/no-prop-types"?: "off";
                readonly "@eslint-react/no-redundant-should-component-update"?: "off";
                readonly "@eslint-react/no-set-state-in-component-did-mount"?: "off";
                readonly "@eslint-react/no-set-state-in-component-did-update"?: "off";
                readonly "@eslint-react/no-set-state-in-component-will-update"?: "off";
                readonly "@eslint-react/no-string-refs"?: "off";
                readonly "@eslint-react/no-unsafe-component-will-mount"?: "off";
                readonly "@eslint-react/no-unsafe-component-will-receive-props"?: "off";
                readonly "@eslint-react/no-unsafe-component-will-update"?: "off";
                readonly "@eslint-react/no-unstable-context-value"?: "off";
                readonly "@eslint-react/no-unstable-default-props"?: "off";
                readonly "@eslint-react/no-unused-class-component-members"?: "off";
                readonly "@eslint-react/no-unused-state"?: "off";
                readonly "@eslint-react/no-useless-fragment"?: "off";
                readonly "@eslint-react/prefer-destructuring-assignment"?: "off";
                readonly "@eslint-react/prefer-shorthand-boolean"?: "off";
                readonly "@eslint-react/prefer-shorthand-fragment"?: "off";
                readonly "@eslint-react/dom/no-children-in-void-dom-elements"?: "off";
                readonly "@eslint-react/dom/no-dangerously-set-innerhtml"?: "off";
                readonly "@eslint-react/dom/no-dangerously-set-innerhtml-with-children"?: "off";
                readonly "@eslint-react/dom/no-find-dom-node"?: "off";
                readonly "@eslint-react/dom/no-missing-button-type"?: "off";
                readonly "@eslint-react/dom/no-missing-iframe-sandbox"?: "off";
                readonly "@eslint-react/dom/no-namespace"?: "off";
                readonly "@eslint-react/dom/no-render-return-value"?: "off";
                readonly "@eslint-react/dom/no-script-url"?: "off";
                readonly "@eslint-react/dom/no-unknown-property"?: "off";
                readonly "@eslint-react/dom/no-unsafe-iframe-sandbox"?: "off";
                readonly "@eslint-react/dom/no-unsafe-target-blank"?: "off";
                readonly "@eslint-react/web-api/no-leaked-event-listener"?: "off";
                readonly "@eslint-react/web-api/no-leaked-interval"?: "off";
                readonly "@eslint-react/web-api/no-leaked-resize-observer"?: "off";
                readonly "@eslint-react/web-api/no-leaked-timeout"?: "off";
                readonly "@eslint-react/hooks-extra/no-direct-set-state-in-use-effect"?: "off";
                readonly "@eslint-react/hooks-extra/no-direct-set-state-in-use-layout-effect"?: "off";
                readonly "@eslint-react/hooks-extra/no-redundant-custom-hook"?: "off";
                readonly "@eslint-react/hooks-extra/no-unnecessary-use-callback"?: "off";
                readonly "@eslint-react/hooks-extra/no-unnecessary-use-memo"?: "off";
                readonly "@eslint-react/hooks-extra/prefer-use-state-lazy-initialization"?: "off";
                readonly "@eslint-react/naming-convention/component-name"?: "off";
                readonly "@eslint-react/naming-convention/filename"?: "off";
                readonly "@eslint-react/naming-convention/filename-extension"?: "off";
                readonly "@eslint-react/naming-convention/use-state"?: "off";
            };
            readonly settings: {
                readonly "react-x": {
                    readonly additionalHooks: {
                        readonly useLayoutEffect: ["useIsomorphicLayoutEffect"];
                    };
                    readonly polymorphicPropName: "as";
                    readonly skipImportCheck: false;
                    readonly version: "detect";
                };
            };
        };
        readonly "off-legacy": {
            readonly plugins: readonly ["@eslint-react"];
            readonly rules: {
                readonly "@eslint-react/avoid-shorthand-boolean"?: "off";
                readonly "@eslint-react/avoid-shorthand-fragment"?: "off";
                readonly "@eslint-react/ensure-forward-ref-using-ref"?: "off";
                readonly "@eslint-react/jsx-no-duplicate-props"?: "off";
                readonly "@eslint-react/jsx-uses-vars"?: "off";
                readonly "@eslint-react/no-access-state-in-setstate"?: "off";
                readonly "@eslint-react/no-array-index-key"?: "off";
                readonly "@eslint-react/no-children-count"?: "off";
                readonly "@eslint-react/no-children-for-each"?: "off";
                readonly "@eslint-react/no-children-map"?: "off";
                readonly "@eslint-react/no-children-only"?: "off";
                readonly "@eslint-react/no-children-prop"?: "off";
                readonly "@eslint-react/no-children-to-array"?: "off";
                readonly "@eslint-react/no-class-component"?: "off";
                readonly "@eslint-react/no-clone-element"?: "off";
                readonly "@eslint-react/no-comment-textnodes"?: "off";
                readonly "@eslint-react/no-complex-conditional-rendering"?: "off";
                readonly "@eslint-react/no-component-will-mount"?: "off";
                readonly "@eslint-react/no-component-will-receive-props"?: "off";
                readonly "@eslint-react/no-component-will-update"?: "off";
                readonly "@eslint-react/no-create-ref"?: "off";
                readonly "@eslint-react/no-default-props"?: "off";
                readonly "@eslint-react/no-direct-mutation-state"?: "off";
                readonly "@eslint-react/no-duplicate-key"?: "off";
                readonly "@eslint-react/no-implicit-key"?: "off";
                readonly "@eslint-react/no-missing-component-display-name"?: "off";
                readonly "@eslint-react/no-missing-key"?: "off";
                readonly "@eslint-react/no-nested-components"?: "off";
                readonly "@eslint-react/no-prop-types"?: "off";
                readonly "@eslint-react/no-redundant-should-component-update"?: "off";
                readonly "@eslint-react/no-set-state-in-component-did-mount"?: "off";
                readonly "@eslint-react/no-set-state-in-component-did-update"?: "off";
                readonly "@eslint-react/no-set-state-in-component-will-update"?: "off";
                readonly "@eslint-react/no-string-refs"?: "off";
                readonly "@eslint-react/no-unsafe-component-will-mount"?: "off";
                readonly "@eslint-react/no-unsafe-component-will-receive-props"?: "off";
                readonly "@eslint-react/no-unsafe-component-will-update"?: "off";
                readonly "@eslint-react/no-unstable-context-value"?: "off";
                readonly "@eslint-react/no-unstable-default-props"?: "off";
                readonly "@eslint-react/no-unused-class-component-members"?: "off";
                readonly "@eslint-react/no-unused-state"?: "off";
                readonly "@eslint-react/no-useless-fragment"?: "off";
                readonly "@eslint-react/prefer-destructuring-assignment"?: "off";
                readonly "@eslint-react/prefer-shorthand-boolean"?: "off";
                readonly "@eslint-react/prefer-shorthand-fragment"?: "off";
                readonly "@eslint-react/dom/no-children-in-void-dom-elements"?: "off";
                readonly "@eslint-react/dom/no-dangerously-set-innerhtml"?: "off";
                readonly "@eslint-react/dom/no-dangerously-set-innerhtml-with-children"?: "off";
                readonly "@eslint-react/dom/no-find-dom-node"?: "off";
                readonly "@eslint-react/dom/no-missing-button-type"?: "off";
                readonly "@eslint-react/dom/no-missing-iframe-sandbox"?: "off";
                readonly "@eslint-react/dom/no-namespace"?: "off";
                readonly "@eslint-react/dom/no-render-return-value"?: "off";
                readonly "@eslint-react/dom/no-script-url"?: "off";
                readonly "@eslint-react/dom/no-unknown-property"?: "off";
                readonly "@eslint-react/dom/no-unsafe-iframe-sandbox"?: "off";
                readonly "@eslint-react/dom/no-unsafe-target-blank"?: "off";
                readonly "@eslint-react/web-api/no-leaked-event-listener"?: "off";
                readonly "@eslint-react/web-api/no-leaked-interval"?: "off";
                readonly "@eslint-react/web-api/no-leaked-resize-observer"?: "off";
                readonly "@eslint-react/web-api/no-leaked-timeout"?: "off";
                readonly "@eslint-react/hooks-extra/no-direct-set-state-in-use-effect"?: "off";
                readonly "@eslint-react/hooks-extra/no-direct-set-state-in-use-layout-effect"?: "off";
                readonly "@eslint-react/hooks-extra/no-redundant-custom-hook"?: "off";
                readonly "@eslint-react/hooks-extra/no-unnecessary-use-callback"?: "off";
                readonly "@eslint-react/hooks-extra/no-unnecessary-use-memo"?: "off";
                readonly "@eslint-react/hooks-extra/prefer-use-state-lazy-initialization"?: "off";
                readonly "@eslint-react/naming-convention/component-name"?: "off";
                readonly "@eslint-react/naming-convention/filename"?: "off";
                readonly "@eslint-react/naming-convention/filename-extension"?: "off";
                readonly "@eslint-react/naming-convention/use-state"?: "off";
            };
            readonly settings: {
                readonly "react-x": {
                    readonly additionalHooks: {
                        readonly useLayoutEffect: ["useIsomorphicLayoutEffect"];
                    };
                    readonly polymorphicPropName: "as";
                    readonly skipImportCheck: false;
                    readonly version: "detect";
                };
            };
        };
        /** @deprecated Use `disable-dom` instead */
        readonly "off-dom": {
            readonly plugins: {
                readonly "@eslint-react": {
                    meta: {
                        name: string;
                        version: string;
                    };
                    rules: {
                        "avoid-shorthand-boolean": _typescript_eslint_utils_ts_eslint.RuleModule<"avoidShorthandBoolean", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "avoid-shorthand-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"avoidShorthandFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "ensure-forward-ref-using-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"ensureForwardRefUsingRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "jsx-no-duplicate-props": _typescript_eslint_utils_ts_eslint.RuleModule<"jsxNoDuplicateProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "jsx-uses-vars": _typescript_eslint_utils_ts_eslint.RuleModule<"jsxUsesVars", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-access-state-in-setstate": _typescript_eslint_utils_ts_eslint.RuleModule<"noAccessStateInSetstate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-array-index-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noArrayIndexKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-count": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenCount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-for-each": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenForEach", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-map": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenMap", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-only": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenOnly", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-prop": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenProp", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-children-to-array": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenToArray", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-class-component": _typescript_eslint_utils_ts_eslint.RuleModule<"noClassComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-clone-element": _typescript_eslint_utils_ts_eslint.RuleModule<"noCloneElement", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-comment-textnodes": _typescript_eslint_utils_ts_eslint.RuleModule<"noCommentTextnodes", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-complex-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noComplexConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-component-will-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-component-will-receive-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillReceiveProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-create-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"noCreateRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-default-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noDefaultProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-direct-mutation-state": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectMutationState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-duplicate-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noDuplicateKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-implicit-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noImplicitKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-missing-component-display-name": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingComponentDisplayName", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-missing-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingKey" | "noMissingKeyWithFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-nested-components": _typescript_eslint_utils_ts_eslint.RuleModule<"nestedComponent" | "nestedComponentInProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-prop-types": _typescript_eslint_utils_ts_eslint.RuleModule<"noPropTypes", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-redundant-should-component-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantShouldComponentUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-set-state-in-component-did-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentDidMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-set-state-in-component-did-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentDidUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-set-state-in-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-string-refs": _typescript_eslint_utils_ts_eslint.RuleModule<"noStringRefs", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unsafe-component-will-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unsafe-component-will-receive-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillReceiveProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unsafe-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unstable-context-value": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnstableContextValue" | "noUnstableContextValueWithFunction" | "noUnstableContextValueWithIdentifier", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unstable-default-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnstableDefaultProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unused-class-component-members": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnusedClassComponentMembers", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-unused-state": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnusedState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-useless-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"noUselessFragment" | "noUselessFragmentInBuiltIn", [{
                            allowExpressions: boolean;
                        }], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-destructuring-assignment": _typescript_eslint_utils_ts_eslint.RuleModule<"preferDestructuringAssignment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-react-namespace-import": _typescript_eslint_utils_ts_eslint.RuleModule<"preferReactNamespaceImport", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-read-only-props": _typescript_eslint_utils_ts_eslint.RuleModule<"preferReadOnlyProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-shorthand-boolean": _typescript_eslint_utils_ts_eslint.RuleModule<"preferShorthandBoolean", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "prefer-shorthand-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"preferShorthandFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-complicated-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noComplexConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                    DEFAULT_ESLINT_REACT_SETTINGS: {
                        readonly additionalHooks: {
                            readonly useLayoutEffect: ["useIsomorphicLayoutEffect"];
                        };
                        readonly polymorphicPropName: "as";
                        readonly skipImportCheck: false;
                        readonly version: "detect";
                    };
                };
                readonly "@eslint-react/debug": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "class-component": _typescript_eslint_utils_ts_eslint.RuleModule<"classComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "function-component": _typescript_eslint_utils_ts_eslint.RuleModule<"functionComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly hook: _typescript_eslint_utils_ts_eslint.RuleModule<"hook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "is-from-react": _typescript_eslint_utils_ts_eslint.RuleModule<"isFromReact", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "react-hooks": _typescript_eslint_utils_ts_eslint.RuleModule<"hook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                };
                readonly "@eslint-react/dom": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "no-children-in-void-dom-elements": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenInVoidDomElements", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-dangerously-set-innerhtml": _typescript_eslint_utils_ts_eslint.RuleModule<"noDangerouslySetInnerhtml", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-dangerously-set-innerhtml-with-children": _typescript_eslint_utils_ts_eslint.RuleModule<"noDangerouslySetInnerhtmlWithChildren", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-find-dom-node": _typescript_eslint_utils_ts_eslint.RuleModule<"noFindDomNode", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-missing-button-type": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingButtonType", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-missing-iframe-sandbox": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingIframeSandbox", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-namespace": _typescript_eslint_utils_ts_eslint.RuleModule<"noNamespace", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-render-return-value": _typescript_eslint_utils_ts_eslint.RuleModule<"noRenderReturnValue", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-script-url": _typescript_eslint_utils_ts_eslint.RuleModule<"noScriptUrl", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unknown-property": _typescript_eslint_utils_ts_eslint.RuleModule<string, [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unsafe-iframe-sandbox": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeIframeSandbox", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unsafe-target-blank": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeTargetBlank", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                    readonly DEFAULT_ESLINT_REACT_SETTINGS: {
                        readonly additionalComponents: [{
                            readonly name: "Link";
                            readonly as: "a";
                            readonly attributes: [{
                                readonly name: "to";
                                readonly as: "href";
                            }];
                        }];
                        readonly skipImportCheck: false;
                    };
                };
                readonly "@eslint-react/hooks-extra": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "no-direct-set-state-in-use-effect": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectSetStateInUseEffect", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-direct-set-state-in-use-layout-effect": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectSetStateInUseLayoutEffect", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-redundant-custom-hook": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantCustomHook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unnecessary-use-callback": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseCallback", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "no-unnecessary-use-memo": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseMemo", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "prefer-use-state-lazy-initialization": _typescript_eslint_utils_ts_eslint.RuleModule<"preferUseStateLazyInitialization", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "ensure-custom-hooks-using-other-hooks": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantCustomHook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "ensure-use-memo-has-non-empty-deps": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseMemo", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                };
                readonly "@eslint-react/naming-convention": {
                    readonly meta: {
                        readonly name: string;
                        readonly version: string;
                    };
                    readonly rules: {
                        readonly "component-name": _typescript_eslint_utils_ts_eslint.RuleModule<"componentName", readonly [{
                            allowAllCaps?: boolean;
                            allowLeadingUnderscore?: boolean;
                            allowNamespace?: boolean;
                            excepts?: readonly string[];
                            rule?: "CONSTANT_CASE" | "PascalCase";
                        } | ("CONSTANT_CASE" | "PascalCase") | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly filename: _typescript_eslint_utils_ts_eslint.RuleModule<"filenameCaseMismatchSuggestion" | "filenameEmpty", readonly [{
                            excepts?: readonly string[];
                            extensions?: readonly string[];
                            rule?: "PascalCase" | "camelCase" | "kebab-case" | "snake_case";
                        } | ("PascalCase" | "camelCase" | "kebab-case" | "snake_case") | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "filename-extension": _typescript_eslint_utils_ts_eslint.RuleModule<"filenameExtensionInvalid" | "filenameExtensionUnexpected", readonly [{
                            allow?: "always" | "as-needed";
                            extensions?: readonly string[];
                        } | ("always" | "as-needed") | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        readonly "use-state": _typescript_eslint_utils_ts_eslint.RuleModule<"useState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                };
                readonly "@eslint-react/web-api": {
                    meta: {
                        name: string;
                        version: string;
                    };
                    rules: {
                        "no-leaked-event-listener": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedEventListenerInEffect" | "noLeakedEventListenerInLifecycle" | "noLeakedEventListenerOfInlineFunction", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-interval": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedIntervalInEffect" | "noLeakedIntervalInLifecycle" | "noLeakedIntervalNoIntervalId", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-resize-observer": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedResizeObserver" | "noLeakedResizeObserverInControlFlow" | "noLeakedResizeObserverNoFloatingInstance", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                        "no-leaked-timeout": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedTimeoutInEffect" | "noLeakedTimeoutInLifecycle" | "noLeakedTimeoutNoTimeoutId", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
                    };
                    DEFAULT_ESLINT_REACT_SETTINGS: {
                        readonly skipImportCheck: true;
                    };
                };
            };
            readonly rules: {
                "@eslint-react/dom/no-children-in-void-dom-elements"?: "off";
                "@eslint-react/dom/no-dangerously-set-innerhtml"?: "off";
                "@eslint-react/dom/no-dangerously-set-innerhtml-with-children"?: "off";
                "@eslint-react/dom/no-find-dom-node"?: "off";
                "@eslint-react/dom/no-missing-button-type"?: "off";
                "@eslint-react/dom/no-missing-iframe-sandbox"?: "off";
                "@eslint-react/dom/no-namespace"?: "off";
                "@eslint-react/dom/no-render-return-value"?: "off";
                "@eslint-react/dom/no-script-url"?: "off";
                "@eslint-react/dom/no-unknown-property"?: "off";
                "@eslint-react/dom/no-unsafe-iframe-sandbox"?: "off";
                "@eslint-react/dom/no-unsafe-target-blank"?: "off";
            };
            readonly settings: {
                readonly "react-x": {
                    readonly additionalHooks: {
                        readonly useLayoutEffect: ["useIsomorphicLayoutEffect"];
                    };
                    readonly polymorphicPropName: "as";
                    readonly skipImportCheck: false;
                    readonly version: "detect";
                };
            };
        };
        /** @deprecated Use `disable-dom-legacy` instead */
        readonly "off-dom-legacy": {
            readonly plugins: readonly ["@eslint-react"];
            readonly rules: {
                "@eslint-react/dom/no-children-in-void-dom-elements"?: "off";
                "@eslint-react/dom/no-dangerously-set-innerhtml"?: "off";
                "@eslint-react/dom/no-dangerously-set-innerhtml-with-children"?: "off";
                "@eslint-react/dom/no-find-dom-node"?: "off";
                "@eslint-react/dom/no-missing-button-type"?: "off";
                "@eslint-react/dom/no-missing-iframe-sandbox"?: "off";
                "@eslint-react/dom/no-namespace"?: "off";
                "@eslint-react/dom/no-render-return-value"?: "off";
                "@eslint-react/dom/no-script-url"?: "off";
                "@eslint-react/dom/no-unknown-property"?: "off";
                "@eslint-react/dom/no-unsafe-iframe-sandbox"?: "off";
                "@eslint-react/dom/no-unsafe-target-blank"?: "off";
            };
            readonly settings: {
                readonly "react-x": {
                    readonly additionalHooks: {
                        readonly useLayoutEffect: ["useIsomorphicLayoutEffect"];
                    };
                    readonly polymorphicPropName: "as";
                    readonly skipImportCheck: false;
                    readonly version: "detect";
                };
            };
        };
    };
    readonly rules: {
        readonly "debug/class-component": _typescript_eslint_utils_ts_eslint.RuleModule<"classComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "debug/function-component": _typescript_eslint_utils_ts_eslint.RuleModule<"functionComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "debug/hook": _typescript_eslint_utils_ts_eslint.RuleModule<"hook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "debug/is-from-react": _typescript_eslint_utils_ts_eslint.RuleModule<"isFromReact", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "debug/react-hooks": _typescript_eslint_utils_ts_eslint.RuleModule<"hook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "naming-convention/component-name": _typescript_eslint_utils_ts_eslint.RuleModule<"componentName", readonly [{
            allowAllCaps?: boolean;
            allowLeadingUnderscore?: boolean;
            allowNamespace?: boolean;
            excepts?: readonly string[];
            rule?: "CONSTANT_CASE" | "PascalCase";
        } | "CONSTANT_CASE" | "PascalCase" | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "naming-convention/filename": _typescript_eslint_utils_ts_eslint.RuleModule<"filenameCaseMismatchSuggestion" | "filenameEmpty", readonly ["PascalCase" | {
            excepts?: readonly string[];
            extensions?: readonly string[];
            rule?: "PascalCase" | "camelCase" | "kebab-case" | "snake_case";
        } | "camelCase" | "kebab-case" | "snake_case" | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "naming-convention/filename-extension": _typescript_eslint_utils_ts_eslint.RuleModule<"filenameExtensionInvalid" | "filenameExtensionUnexpected", readonly [{
            allow?: "always" | "as-needed";
            extensions?: readonly string[];
        } | "always" | "as-needed" | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "naming-convention/use-state": _typescript_eslint_utils_ts_eslint.RuleModule<"useState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "hooks-extra/no-direct-set-state-in-use-effect": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectSetStateInUseEffect", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "hooks-extra/no-direct-set-state-in-use-layout-effect": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectSetStateInUseLayoutEffect", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "hooks-extra/no-redundant-custom-hook": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantCustomHook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "hooks-extra/no-unnecessary-use-callback": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseCallback", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "hooks-extra/no-unnecessary-use-memo": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseMemo", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "hooks-extra/prefer-use-state-lazy-initialization": _typescript_eslint_utils_ts_eslint.RuleModule<"preferUseStateLazyInitialization", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "hooks-extra/ensure-custom-hooks-using-other-hooks": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantCustomHook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "hooks-extra/ensure-use-memo-has-non-empty-deps": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseMemo", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "web-api/no-leaked-event-listener": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedEventListenerInEffect" | "noLeakedEventListenerInLifecycle" | "noLeakedEventListenerOfInlineFunction", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "web-api/no-leaked-interval": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedIntervalInEffect" | "noLeakedIntervalInLifecycle" | "noLeakedIntervalNoIntervalId", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "web-api/no-leaked-resize-observer": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedResizeObserver" | "noLeakedResizeObserverInControlFlow" | "noLeakedResizeObserverNoFloatingInstance", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "web-api/no-leaked-timeout": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedTimeoutInEffect" | "noLeakedTimeoutInLifecycle" | "noLeakedTimeoutNoTimeoutId", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "dom/no-children-in-void-dom-elements": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenInVoidDomElements", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "dom/no-dangerously-set-innerhtml": _typescript_eslint_utils_ts_eslint.RuleModule<"noDangerouslySetInnerhtml", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "dom/no-dangerously-set-innerhtml-with-children": _typescript_eslint_utils_ts_eslint.RuleModule<"noDangerouslySetInnerhtmlWithChildren", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "dom/no-find-dom-node": _typescript_eslint_utils_ts_eslint.RuleModule<"noFindDomNode", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "dom/no-missing-button-type": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingButtonType", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "dom/no-missing-iframe-sandbox": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingIframeSandbox", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "dom/no-namespace": _typescript_eslint_utils_ts_eslint.RuleModule<"noNamespace", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "dom/no-render-return-value": _typescript_eslint_utils_ts_eslint.RuleModule<"noRenderReturnValue", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "dom/no-script-url": _typescript_eslint_utils_ts_eslint.RuleModule<"noScriptUrl", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "dom/no-unknown-property": _typescript_eslint_utils_ts_eslint.RuleModule<string, [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "dom/no-unsafe-iframe-sandbox": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeIframeSandbox", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "dom/no-unsafe-target-blank": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeTargetBlank", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "avoid-shorthand-boolean": _typescript_eslint_utils_ts_eslint.RuleModule<"avoidShorthandBoolean", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "avoid-shorthand-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"avoidShorthandFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "ensure-forward-ref-using-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"ensureForwardRefUsingRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "jsx-no-duplicate-props": _typescript_eslint_utils_ts_eslint.RuleModule<"jsxNoDuplicateProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "jsx-uses-vars": _typescript_eslint_utils_ts_eslint.RuleModule<"jsxUsesVars", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-access-state-in-setstate": _typescript_eslint_utils_ts_eslint.RuleModule<"noAccessStateInSetstate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-array-index-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noArrayIndexKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-children-count": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenCount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-children-for-each": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenForEach", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-children-map": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenMap", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-children-only": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenOnly", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-children-prop": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenProp", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-children-to-array": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenToArray", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-class-component": _typescript_eslint_utils_ts_eslint.RuleModule<"noClassComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-clone-element": _typescript_eslint_utils_ts_eslint.RuleModule<"noCloneElement", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-comment-textnodes": _typescript_eslint_utils_ts_eslint.RuleModule<"noCommentTextnodes", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-complex-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noComplexConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-component-will-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-component-will-receive-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillReceiveProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-create-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"noCreateRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-default-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noDefaultProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-direct-mutation-state": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectMutationState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-duplicate-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noDuplicateKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-implicit-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noImplicitKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-leaked-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-missing-component-display-name": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingComponentDisplayName", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-missing-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingKey" | "noMissingKeyWithFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-nested-components": _typescript_eslint_utils_ts_eslint.RuleModule<"nestedComponent" | "nestedComponentInProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-prop-types": _typescript_eslint_utils_ts_eslint.RuleModule<"noPropTypes", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-redundant-should-component-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantShouldComponentUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-set-state-in-component-did-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentDidMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-set-state-in-component-did-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentDidUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-set-state-in-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-string-refs": _typescript_eslint_utils_ts_eslint.RuleModule<"noStringRefs", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-unsafe-component-will-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-unsafe-component-will-receive-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillReceiveProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-unsafe-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-unstable-context-value": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnstableContextValue" | "noUnstableContextValueWithFunction" | "noUnstableContextValueWithIdentifier", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-unstable-default-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnstableDefaultProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-unused-class-component-members": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnusedClassComponentMembers", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-unused-state": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnusedState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-useless-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"noUselessFragment" | "noUselessFragmentInBuiltIn", [{
            allowExpressions: boolean;
        }], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "prefer-destructuring-assignment": _typescript_eslint_utils_ts_eslint.RuleModule<"preferDestructuringAssignment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "prefer-react-namespace-import": _typescript_eslint_utils_ts_eslint.RuleModule<"preferReactNamespaceImport", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "prefer-read-only-props": _typescript_eslint_utils_ts_eslint.RuleModule<"preferReadOnlyProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "prefer-shorthand-boolean": _typescript_eslint_utils_ts_eslint.RuleModule<"preferShorthandBoolean", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "prefer-shorthand-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"preferShorthandFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-complicated-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noComplexConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
    };
};

export { _default as default };
