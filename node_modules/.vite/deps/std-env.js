import "./chunk-V4OQ3NZ2.js";

// node_modules/std-env/dist/index.mjs
var r = /* @__PURE__ */ Object.create(null);
var i = (e) => {
  var _a7, _b5;
  return ((_a7 = globalThis.process) == null ? void 0 : _a7.env) || import.meta.env || ((_b5 = globalThis.Deno) == null ? void 0 : _b5.env.toObject()) || globalThis.__env__ || (e ? r : globalThis);
};
var s = new Proxy(r, { get(e, o) {
  return i()[o] ?? r[o];
}, has(e, o) {
  const E = i();
  return o in E || o in r;
}, set(e, o, E) {
  const b = i(true);
  return b[o] = E, true;
}, deleteProperty(e, o) {
  if (!o) return false;
  const E = i(true);
  return delete E[o], true;
}, ownKeys() {
  const e = i(true);
  return Object.keys(e);
} });
var t = typeof process < "u" && process.env && "development" || "";
var B = [["APPVEYOR"], ["AWS_AMPLIFY", "AWS_APP_ID", { ci: true }], ["AZURE_PIPELINES", "SYSTEM_TEAMFOUNDATIONCOLLECTIONURI"], ["AZURE_STATIC", "INPUT_AZURE_STATIC_WEB_APPS_API_TOKEN"], ["APPCIRCLE", "AC_APPCIRCLE"], ["BAMBOO", "bamboo_planKey"], ["BITBUCKET", "BITBUCKET_COMMIT"], ["BITRISE", "BITRISE_IO"], ["BUDDY", "BUDDY_WORKSPACE_ID"], ["BUILDKITE"], ["CIRCLE", "CIRCLECI"], ["CIRRUS", "CIRRUS_CI"], ["CLOUDFLARE_PAGES", "CF_PAGES", { ci: true }], ["CODEBUILD", "CODEBUILD_BUILD_ARN"], ["CODEFRESH", "CF_BUILD_ID"], ["DRONE"], ["DRONE", "DRONE_BUILD_EVENT"], ["DSARI"], ["GITHUB_ACTIONS"], ["GITLAB", "GITLAB_CI"], ["GITLAB", "CI_MERGE_REQUEST_ID"], ["GOCD", "GO_PIPELINE_LABEL"], ["LAYERCI"], ["HUDSON", "HUDSON_URL"], ["JENKINS", "JENKINS_URL"], ["MAGNUM"], ["NETLIFY"], ["NETLIFY", "NETLIFY_LOCAL", { ci: false }], ["NEVERCODE"], ["RENDER"], ["SAIL", "SAILCI"], ["SEMAPHORE"], ["SCREWDRIVER"], ["SHIPPABLE"], ["SOLANO", "TDDIUM"], ["STRIDER"], ["TEAMCITY", "TEAMCITY_VERSION"], ["TRAVIS"], ["VERCEL", "NOW_BUILDER"], ["VERCEL", "VERCEL", { ci: false }], ["VERCEL", "VERCEL_ENV", { ci: false }], ["APPCENTER", "APPCENTER_BUILD_ID"], ["CODESANDBOX", "CODESANDBOX_SSE", { ci: false }], ["STACKBLITZ"], ["STORMKIT"], ["CLEAVR"], ["ZEABUR"], ["CODESPHERE", "CODESPHERE_APP_ID", { ci: true }], ["RAILWAY", "RAILWAY_PROJECT_ID"], ["RAILWAY", "RAILWAY_SERVICE_ID"], ["DENO-DEPLOY", "DENO_DEPLOYMENT_ID"], ["FIREBASE_APP_HOSTING", "FIREBASE_APP_HOSTING", { ci: true }]];
function p() {
  var _a7, _b5, _c, _d, _e, _f;
  if ((_a7 = globalThis.process) == null ? void 0 : _a7.env) for (const e of B) {
    const o = e[1] || e[0];
    if ((_b5 = globalThis.process) == null ? void 0 : _b5.env[o]) return { name: e[0].toLowerCase(), ...e[2] };
  }
  return ((_d = (_c = globalThis.process) == null ? void 0 : _c.env) == null ? void 0 : _d.SHELL) === "/bin/jsh" && ((_f = (_e = globalThis.process) == null ? void 0 : _e.versions) == null ? void 0 : _f.webcontainer) ? { name: "stackblitz", ci: false } : { name: "", ci: false };
}
var l = p();
var d = l.name;
function n(e) {
  return e ? e !== "false" : false;
}
var _a;
var I = ((_a = globalThis.process) == null ? void 0 : _a.platform) || "";
var T = n(s.CI) || l.ci !== false;
var _a2, _b;
var R = n(((_a2 = globalThis.process) == null ? void 0 : _a2.stdout) && ((_b = globalThis.process) == null ? void 0 : _b.stdout.isTTY));
var g = typeof window < "u";
var U = n(s.DEBUG);
var A = t === "test" || n(s.TEST);
var h = t === "production";
var f = t === "dev" || t === "development";
var v = n(s.MINIMAL) || T || A || !R;
var _ = /^win/i.test(I);
var M = /^linux/i.test(I);
var m = /^darwin/i.test(I);
var Y = !n(s.NO_COLOR) && (n(s.FORCE_COLOR) || (R || _) && s.TERM !== "dumb" || T);
var _a3, _b2;
var C = (((_b2 = (_a3 = globalThis.process) == null ? void 0 : _a3.versions) == null ? void 0 : _b2.node) || "").replace(/^v/, "") || null;
var V = Number(C == null ? void 0 : C.split(".")[0]) || null;
var y = globalThis.process || /* @__PURE__ */ Object.create(null);
var c = { versions: {} };
var W = new Proxy(y, { get(e, o) {
  if (o === "env") return s;
  if (o in e) return e[o];
  if (o in c) return c[o];
} });
var _a4, _b3;
var L = ((_b3 = (_a4 = globalThis.process) == null ? void 0 : _a4.release) == null ? void 0 : _b3.name) === "node";
var _a5, _b4;
var a = !!globalThis.Bun || !!((_b4 = (_a5 = globalThis.process) == null ? void 0 : _a5.versions) == null ? void 0 : _b4.bun);
var D = !!globalThis.Deno;
var O = !!globalThis.fastly;
var S = !!globalThis.Netlify;
var N = !!globalThis.EdgeRuntime;
var _a6;
var P = ((_a6 = globalThis.navigator) == null ? void 0 : _a6.userAgent) === "Cloudflare-Workers";
var F = [[S, "netlify"], [N, "edge-light"], [P, "workerd"], [O, "fastly"], [D, "deno"], [a, "bun"], [L, "node"]];
function G() {
  const e = F.find((o) => o[0]);
  if (e) return { name: e[1] };
}
var u = G();
var w = (u == null ? void 0 : u.name) || "";
export {
  s as env,
  R as hasTTY,
  g as hasWindow,
  a as isBun,
  T as isCI,
  Y as isColorSupported,
  U as isDebug,
  D as isDeno,
  f as isDevelopment,
  N as isEdgeLight,
  O as isFastly,
  M as isLinux,
  m as isMacOS,
  v as isMinimal,
  S as isNetlify,
  L as isNode,
  h as isProduction,
  A as isTest,
  _ as isWindows,
  P as isWorkerd,
  t as nodeENV,
  V as nodeMajorVersion,
  C as nodeVersion,
  I as platform,
  W as process,
  d as provider,
  l as providerInfo,
  w as runtime,
  u as runtimeInfo
};
//# sourceMappingURL=std-env.js.map
